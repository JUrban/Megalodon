Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
Theorem missingprop_6c562f29c3893cf90dc4757179882fd2dce1b70f6ed3a30f9c018a615682c919 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> x0 x31 = add_SNo (add_SNo x31 x31) x31) -> x1 = 2 -> (forall x31, x31 :e int -> x2 x31 = x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x3 x31 x32 = If_i (SNoLe x31 0) x32 (x0 (x3 (add_SNo x31 (minus_SNo 1)) x32)))) -> (forall x31, x31 :e int -> x4 x31 = x3 x1 (x2 x31)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x5 x31 x32 = add_SNo (x4 x31) (minus_SNo x32))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x6 x31 x32 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x32 x32)) (minus_SNo x31)))) -> (forall x31, x31 :e int -> x7 x31 = x31) -> x8 = 2 -> x9 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x10 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x5 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x11 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x6 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x12 x31 = x10 (x7 x31) x8 x9) -> (forall x31, x31 :e int -> x13 x31 = add_SNo (x12 x31) (minus_SNo 1)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x15 x31 x32 = x32)) -> (forall x31, x31 :e int -> x16 x31 = x31) -> x17 = 1 -> x18 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) x17 x18) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x23 x31 x32 = x32)) -> (forall x31, x31 :e int -> x24 x31 = x31) -> x25 = 1 -> x26 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) x25 x26) -> (forall x31, x31 :e int -> x30 x31 = add_SNo (add_SNo (x21 x31) (minus_SNo 1)) (x29 x31)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_85e399e3b766bcc7e54af16818dedae863d90b7930cedf58ce11013fd294b61d : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = mul_SNo (add_SNo 2 x34) x33)) -> x1 = 2 -> (forall x33, x33 :e int -> x2 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x4 x33 = x3 x1 (x2 x33)) -> (forall x33, x33 :e int -> x5 x33 = add_SNo (x4 x33) (minus_SNo x33)) -> (forall x33, x33 :e int -> x6 x33 = x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33) -> (forall x33, x33 :e int -> x11 x33 = x33) -> x12 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = If_i (SNoLe x33 0) x34 (x10 (x13 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x14 x33 = x13 (x11 x33) x12) -> (forall x33, x33 :e int -> x15 x33 = add_SNo 1 (add_SNo (x9 x33) (minus_SNo (x14 x33)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x17 x33 x34 = x34)) -> (forall x33, x33 :e int -> x18 x33 = x33) -> x19 = 1 -> x20 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x21 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x16 (x21 (add_SNo x33 (minus_SNo 1)) x34 x35) (x22 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x22 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x17 (x21 (add_SNo x33 (minus_SNo 1)) x34 x35) (x22 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x23 x33 = x21 (x18 x33) x19 x20) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = x33) -> x27 = 1 -> x28 = add_SNo 1 (add_SNo 2 2) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = add_SNo 1 (add_SNo (x23 x33) (minus_SNo (x31 x33)))) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x15 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_29c2e93f17f203235b595b157088706d464b8f68617d68e3114e9b21a407f4bf : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x0 x26 x27 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x26 x26)) x26) x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x1 x26 x27 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x27 x27) x27)) x27)) -> (forall x26, x26 :e int -> x2 x26 = x26) -> x3 = 2 -> x4 = 2 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x5 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x0 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x6 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x1 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x7 x26 = x5 (x2 x26) x3 x4) -> (forall x26, x26 :e int -> x8 x26 = add_SNo (x7 x26) (minus_SNo 1)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x9 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x10 x26 x27 = x27)) -> (forall x26, x26 :e int -> x11 x26 = x26) -> x12 = 1 -> x13 = add_SNo 1 (add_SNo 2 2) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x14 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x9 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x15 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x10 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x16 x26 = x14 (x11 x26) x12 x13) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x26 x27 = x27)) -> (forall x26, x26 :e int -> x19 x26 = x26) -> x20 = 1 -> x21 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x22 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x17 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x23 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x18 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x24 x26 = x22 (x19 x26) x20 x21) -> (forall x26, x26 :e int -> x25 x26 = add_SNo (add_SNo (x16 x26) (minus_SNo 1)) (x24 x26)) -> (forall x26, x26 :e int -> SNoLe 0 x26 -> x8 x26 = x25 x26))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_11d1179944bfd10e66ab2360a20484c9f6b7653158583fcf989c9bbc6b3fe5f9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> x0 x30 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x30 x30)) x30)) -> (forall x30, x30 :e int -> x1 x30 = x30) -> x2 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x4 x30 = x3 (x1 x30) x2) -> (forall x30, x30 :e int -> x5 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x6 x30 = add_SNo x30 x30) -> x7 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x9 x30 = x8 (x6 x30) x7) -> (forall x30, x30 :e int -> x10 x30 = add_SNo 1 (add_SNo (x4 x30) (minus_SNo (x9 x30)))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x11 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x12 x30 x31 = x31)) -> (forall x30, x30 :e int -> x13 x30 = x30) -> x14 = 1 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x16 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x11 (x16 (add_SNo x30 (minus_SNo 1)) x31 x32) (x17 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x17 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x12 (x16 (add_SNo x30 (minus_SNo 1)) x31 x32) (x17 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x18 x30 = x16 (x13 x30) x14 x15) -> (forall x30, x30 :e int -> x19 x30 = mul_SNo x30 x30) -> x20 = 1 -> (forall x30, x30 :e int -> x21 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x22 x30 = x30) -> x23 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x24 x30 x31 = If_i (SNoLe x30 0) x31 (x21 (x24 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x25 x30 = x24 (x22 x30) x23) -> (forall x30, x30 :e int -> x26 x30 = x25 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x27 x30 x31 = If_i (SNoLe x30 0) x31 (x19 (x27 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x28 x30 = x27 x20 (x26 x30)) -> (forall x30, x30 :e int -> x29 x30 = add_SNo 1 (add_SNo (x18 x30) (minus_SNo (x28 x30)))) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x10 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_3caaf536ff4342d89604f9ddb42a25f9342447d633a1e56e15c51504fb761372 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> x0 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x1 x30 = add_SNo x30 x30) -> x2 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x4 x30 = x3 (x1 x30) x2) -> (forall x30, x30 :e int -> x5 x30 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x30 x30)) x30)) -> (forall x30, x30 :e int -> x6 x30 = x30) -> x7 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x9 x30 = x8 (x6 x30) x7) -> (forall x30, x30 :e int -> x10 x30 = add_SNo (add_SNo (x4 x30) (minus_SNo 1)) (x9 x30)) -> (forall x30, x30 :e int -> x11 x30 = mul_SNo x30 x30) -> x12 = 1 -> (forall x30, x30 :e int -> x13 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x14 x30 = x30) -> x15 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x16 x30 x31 = If_i (SNoLe x30 0) x31 (x13 (x16 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x17 x30 = x16 (x14 x30) x15) -> (forall x30, x30 :e int -> x18 x30 = x17 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x19 x30 x31 = If_i (SNoLe x30 0) x31 (x11 (x19 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x20 x30 = x19 x12 (x18 x30)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x21 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x22 x30 x31 = x31)) -> (forall x30, x30 :e int -> x23 x30 = x30) -> x24 = 1 -> x25 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x26 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x21 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x27 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x22 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x28 x30 = x26 (x23 x30) x24 x25) -> (forall x30, x30 :e int -> x29 x30 = add_SNo (add_SNo (x20 x30) (minus_SNo 1)) (x28 x30)) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x10 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_bf79cd0f6154e9e75dd02679561d2367cb50e752a0a3942abaae083ce6967428 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo 1 (add_SNo x25 x25)) -> (forall x25, x25 :e int -> x1 x25 = x25) -> (forall x25, x25 :e int -> x2 x25 = add_SNo (mul_SNo 2 (add_SNo x25 x25)) x25) -> (forall x25, x25 :e int -> x3 x25 = x25) -> x4 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = If_i (SNoLe x25 0) x26 (x2 (x5 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x6 x25 = x5 (x3 x25) x4) -> (forall x25, x25 :e int -> x7 x25 = x6 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x1 x25) (x7 x25)) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> x11 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x12 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = x26)) -> (forall x25, x25 :e int -> x15 x25 = x25) -> x16 = 1 -> x17 = add_SNo 1 (add_SNo 2 2) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x13 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x19 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x14 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x20 x25 = x18 (x15 x25) x16 x17) -> (forall x25, x25 :e int -> x21 x25 = add_SNo 1 (x20 x25)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x12 x25) (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (x23 x25) (minus_SNo 1)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e1932adb5b4e237942975c83ab6137a123edb7f1ff0e9a36ebd803f9f3143147 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = add_SNo (mul_SNo x38 x38) x38) -> x1 = 2 -> x2 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39)))) -> x4 = x3 x1 x2 -> (forall x38, x38 :e int -> x5 x38 = add_SNo (mul_SNo x4 x38) x38) -> (forall x38, x38 :e int -> x6 x38 = add_SNo 1 (add_SNo x38 x38)) -> x7 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x8 x38 x39 = If_i (SNoLe x38 0) x39 (x5 (x8 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x9 x38 = x8 (x6 x38) x7) -> (forall x38, x38 :e int -> x10 x38 = x9 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x11 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x12 x38 x39 = x39)) -> (forall x38, x38 :e int -> x13 x38 = add_SNo 1 x38) -> x14 = 1 -> (forall x38, x38 :e int -> x15 x38 = add_SNo (mul_SNo x38 x38) x38) -> x16 = 2 -> x17 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x18 x38 x39 = If_i (SNoLe x38 0) x39 (x15 (x18 (add_SNo x38 (minus_SNo 1)) x39)))) -> x19 = x18 x16 x17 -> x20 = add_SNo 1 x19 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x21 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x11 (x21 (add_SNo x38 (minus_SNo 1)) x39 x40) (x22 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x22 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x12 (x21 (add_SNo x38 (minus_SNo 1)) x39 x40) (x22 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x23 x38 = x21 (x13 x38) x14 x20) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x24 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x25 x38 x39 = x39)) -> (forall x38, x38 :e int -> x26 x38 = x38) -> x27 = 1 -> (forall x38, x38 :e int -> x28 x38 = add_SNo (mul_SNo x38 x38) x38) -> x29 = 2 -> x30 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x31 x38 x39 = If_i (SNoLe x38 0) x39 (x28 (x31 (add_SNo x38 (minus_SNo 1)) x39)))) -> x32 = x31 x29 x30 -> x33 = add_SNo 1 x32 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x34 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x24 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x35 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x25 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x36 x38 = x34 (x26 x38) x27 x33) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (x23 x38) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x10 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_4aa9b835ad02b48989a41f16e431abf337627847442b53bc630a3712a46c7618 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41 : set -> set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x41 x42 x43 x44 :e int))) -> (forall x42 : set -> set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x42 x43 x44 x45 :e int))) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> (forall x49 : set -> set -> set -> set, (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x49 x50 x51 x52 :e int))) -> (forall x50 : set -> set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> (forall x53, x53 :e int -> x50 x51 x52 x53 :e int))) -> (forall x51 : set -> set, (forall x52, x52 :e int -> x51 x52 :e int) -> (forall x52 : set -> set, (forall x53, x53 :e int -> x52 x53 :e int) -> (forall x53, x53 :e int -> x0 x53 = add_SNo (add_SNo x53 x53) x53) -> (forall x53, x53 :e int -> x1 x53 = x53) -> x2 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x3 x53 x54 = If_i (SNoLe x53 0) x54 (x0 (x3 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x4 x53 = x3 (x1 x53) x2) -> (forall x53, x53 :e int -> x5 x53 = add_SNo x53 x53) -> (forall x53, x53 :e int -> x6 x53 = x53) -> x7 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x8 x53 x54 = If_i (SNoLe x53 0) x54 (x5 (x8 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x9 x53 = x8 (x6 x53) x7) -> (forall x53, x53 :e int -> x10 x53 = add_SNo x53 x53) -> (forall x53, x53 :e int -> x11 x53 = x53) -> x12 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x13 x53 x54 = If_i (SNoLe x53 0) x54 (x10 (x13 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x14 x53 = x13 (x11 x53) x12) -> (forall x53, x53 :e int -> x15 x53 = add_SNo (mul_SNo 2 (add_SNo x53 x53)) x53) -> (forall x53, x53 :e int -> x16 x53 = x53) -> x17 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x18 x53 x54 = If_i (SNoLe x53 0) x54 (x15 (x18 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x19 x53 = x18 (x16 x53) x17) -> (forall x53, x53 :e int -> x20 x53 = add_SNo (mul_SNo (add_SNo (x4 x53) (x9 x53)) (add_SNo 1 (x14 x53))) (add_SNo 1 (x19 x53))) -> (forall x53, x53 :e int -> x21 x53 = add_SNo (mul_SNo x53 x53) x53) -> x22 = 1 -> (forall x53, x53 :e int -> x23 x53 = add_SNo x53 x53) -> (forall x53, x53 :e int -> x24 x53 = x53) -> x25 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x26 x53 x54 = If_i (SNoLe x53 0) x54 (x23 (x26 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x27 x53 = x26 (x24 x53) x25) -> (forall x53, x53 :e int -> x28 x53 = x27 x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x29 x53 x54 = If_i (SNoLe x53 0) x54 (x21 (x29 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x30 x53 = x29 x22 (x28 x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x31 x53 x54 = mul_SNo x53 x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x32 x53 x54 = x54)) -> (forall x53, x53 :e int -> x33 x53 = x53) -> (forall x53, x53 :e int -> x34 x53 = add_SNo x53 x53) -> (forall x53, x53 :e int -> x35 x53 = x53) -> x36 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x37 x53 x54 = If_i (SNoLe x53 0) x54 (x34 (x37 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x38 x53 = x37 (x35 x53) x36) -> (forall x53, x53 :e int -> x39 x53 = add_SNo 1 (x38 x53)) -> x40 = add_SNo 1 2 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x41 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x31 (x41 (add_SNo x53 (minus_SNo 1)) x54 x55) (x42 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x42 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x32 (x41 (add_SNo x53 (minus_SNo 1)) x54 x55) (x42 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> x43 x53 = x41 (x33 x53) (x39 x53) x40) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x44 x53 x54 = mul_SNo x53 x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x45 x53 x54 = x54)) -> (forall x53, x53 :e int -> x46 x53 = x53) -> x47 = 1 -> x48 = add_SNo 1 (add_SNo 2 2) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x49 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x44 (x49 (add_SNo x53 (minus_SNo 1)) x54 x55) (x50 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x50 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x45 (x49 (add_SNo x53 (minus_SNo 1)) x54 x55) (x50 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> x51 x53 = x49 (x46 x53) x47 x48) -> (forall x53, x53 :e int -> x52 x53 = add_SNo (add_SNo (add_SNo 1 (x30 x53)) (x43 x53)) (x51 x53)) -> (forall x53, x53 :e int -> SNoLe 0 x53 -> x20 x53 = x52 x53)))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_fe7e799e678f9d3806a032f2ef0858832852247c092a0ac390d1b70d306e5d69 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x0 x12 x13 = add_SNo 2 (add_SNo x12 x13))) -> (forall x12, x12 :e int -> x1 x12 = add_SNo (mul_SNo 2 (add_SNo x12 x12)) x12) -> x2 = 2 -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) x2) -> (forall x12, x12 :e int -> x5 x12 = mul_SNo 2 (x4 x12)) -> (forall x12, x12 :e int -> x6 x12 = add_SNo (mul_SNo x12 x12) x12) -> x7 = 1 -> (forall x12, x12 :e int -> x8 x12 = add_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x12 x12)) x12)) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 x7 (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo (x10 x12) (minus_SNo 2)) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_772eacd3a586ecfc711ec77fb0f0ed76ec54c0c82b2fbc2ac3513e77529cb6d1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3, x3 :e int -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5, x5 :e int -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = x24)) -> (forall x23, x23 :e int -> x1 x23 = add_SNo 1 (add_SNo x23 x23)) -> x2 = 2 -> x3 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x4 x23 x24 = If_i (SNoLe x23 0) x24 (x1 (x4 (add_SNo x23 (minus_SNo 1)) x24)))) -> x5 = x4 x2 x3 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x6 x23 x24 = add_SNo (mul_SNo x5 x24) x23)) -> (forall x23, x23 :e int -> x7 x23 = x23) -> x8 = 1 -> x9 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x10 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25) (x11 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x11 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x6 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25) (x11 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x12 x23 = x10 (x7 x23) x8 x9) -> (forall x23, x23 :e int -> x13 x23 = x12 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = add_SNo (mul_SNo (add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) x23) x24)) -> (forall x23, x23 :e int -> x15 x23 = x23) -> (forall x23, x23 :e int -> x16 x23 = add_SNo x23 (minus_SNo 2)) -> (forall x23, x23 :e int -> x17 x23 = If_i (SNoLe (add_SNo x23 (minus_SNo 1)) 0) 1 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2)))) -> x18 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) (x17 x23) x18) -> (forall x23, x23 :e int -> x22 x23 = x21 x23) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x13 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_7697a01218c523212e0c1c5619f508a5af0c1ed74c180dae758e33672b793d01 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x0 x12 x13 = add_SNo 2 (add_SNo x12 x13))) -> (forall x12, x12 :e int -> x1 x12 = mul_SNo 2 (add_SNo 2 x12)) -> (forall x12, x12 :e int -> x2 x12 = x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = add_SNo (add_SNo (x4 x12) x12) x12) -> (forall x12, x12 :e int -> x6 x12 = mul_SNo x12 x12) -> x7 = 1 -> (forall x12, x12 :e int -> x8 x12 = add_SNo 1 (add_SNo 2 x12)) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 x7 (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = mul_SNo 2 (add_SNo (add_SNo (x10 x12) x12) x12)) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_47659b800581bf9efdacd3517f099f3d4ed51a467b21ab8c70cbef6fd6045463 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x39 x40 x41 x42 :e int))) -> (forall x40 : set -> set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x40 x41 x42 x43 :e int))) -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set -> set, (forall x49, x49 :e int -> (forall x50, x50 :e int -> x48 x49 x50 :e int)) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52 : set -> set -> set -> set, (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x52 x53 x54 x55 :e int))) -> (forall x53 : set -> set -> set -> set, (forall x54, x54 :e int -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x53 x54 x55 x56 :e int))) -> (forall x54 : set -> set, (forall x55, x55 :e int -> x54 x55 :e int) -> (forall x55 : set -> set, (forall x56, x56 :e int -> x55 x56 :e int) -> (forall x56, x56 :e int -> (forall x57 : set -> set -> set, (forall x58, x58 :e int -> (forall x59, x59 :e int -> x57 x58 x59 :e int)) -> (forall x58 : set -> set -> set, (forall x59, x59 :e int -> (forall x60, x60 :e int -> x58 x59 x60 :e int)) -> (forall x59 : set -> set -> set, (forall x60, x60 :e int -> (forall x61, x61 :e int -> x59 x60 x61 :e int)) -> (forall x60 : set -> set -> set, (forall x61, x61 :e int -> (forall x62, x62 :e int -> x60 x61 x62 :e int)) -> (forall x61 : set -> set, (forall x62, x62 :e int -> x61 x62 :e int) -> (forall x62, x62 :e int -> (forall x63 : set -> set -> set, (forall x64, x64 :e int -> (forall x65, x65 :e int -> x63 x64 x65 :e int)) -> (forall x64 : set -> set, (forall x65, x65 :e int -> x64 x65 :e int) -> (forall x65 : set -> set, (forall x66, x66 :e int -> x65 x66 :e int) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x0 x66 x67 = mul_SNo (add_SNo 2 x67) x66)) -> x1 = 2 -> (forall x66, x66 :e int -> x2 x66 = x66) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x3 x66 x67 = If_i (SNoLe x66 0) x67 (x0 (x3 (add_SNo x66 (minus_SNo 1)) x67) x66))) -> (forall x66, x66 :e int -> x4 x66 = x3 x1 (x2 x66)) -> (forall x66, x66 :e int -> x5 x66 = add_SNo (x4 x66) (minus_SNo x66)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x6 x66 x67 = x67)) -> x7 = 1 -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x8 x66 x67 = If_i (SNoLe x66 0) x67 (x5 (x8 (add_SNo x66 (minus_SNo 1)) x67)))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x9 x66 x67 = x8 (x6 x66 x67) x7)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x10 x66 x67 = add_SNo (x9 x66 x67) (minus_SNo x66))) -> (forall x66, x66 :e int -> x11 x66 = x66) -> x12 = 1 -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x13 x66 x67 = If_i (SNoLe x66 0) x67 (x10 (x13 (add_SNo x66 (minus_SNo 1)) x67) x66))) -> (forall x66, x66 :e int -> x14 x66 = x13 (x11 x66) x12) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x15 x66 x67 = mul_SNo x66 x67)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x16 x66 x67 = x67)) -> (forall x66, x66 :e int -> x17 x66 = x66) -> x18 = 1 -> x19 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> (forall x68, x68 :e int -> x20 x66 x67 x68 = If_i (SNoLe x66 0) x67 (x15 (x20 (add_SNo x66 (minus_SNo 1)) x67 x68) (x21 (add_SNo x66 (minus_SNo 1)) x67 x68))))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> (forall x68, x68 :e int -> x21 x66 x67 x68 = If_i (SNoLe x66 0) x68 (x16 (x20 (add_SNo x66 (minus_SNo 1)) x67 x68) (x21 (add_SNo x66 (minus_SNo 1)) x67 x68))))) -> (forall x66, x66 :e int -> x22 x66 = x20 (x17 x66) x18 x19) -> (forall x66, x66 :e int -> x23 x66 = mul_SNo (x14 x66) (x22 x66)) -> x24 = 1 -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x25 x66 x67 = x67)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x26 x66 x67 = If_i (SNoLe x66 0) x67 (x23 (x26 (add_SNo x66 (minus_SNo 1)) x67)))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x27 x66 x67 = x26 x24 (x25 x66 x67))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x28 x66 x67 = add_SNo (x27 x66 x67) x66)) -> (forall x66, x66 :e int -> x29 x66 = x66) -> x30 = 1 -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x31 x66 x67 = If_i (SNoLe x66 0) x67 (x28 (x31 (add_SNo x66 (minus_SNo 1)) x67) x66))) -> (forall x66, x66 :e int -> x32 x66 = x31 (x29 x66) x30) -> (forall x66, x66 :e int -> x33 x66 = x32 x66) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x34 x66 x67 = mul_SNo x66 x67)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x35 x66 x67 = x67)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x36 x66 x67 = x67)) -> x37 = 1 -> x38 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> (forall x68, x68 :e int -> x39 x66 x67 x68 = If_i (SNoLe x66 0) x67 (x34 (x39 (add_SNo x66 (minus_SNo 1)) x67 x68) (x40 (add_SNo x66 (minus_SNo 1)) x67 x68))))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> (forall x68, x68 :e int -> x40 x66 x67 x68 = If_i (SNoLe x66 0) x68 (x35 (x39 (add_SNo x66 (minus_SNo 1)) x67 x68) (x40 (add_SNo x66 (minus_SNo 1)) x67 x68))))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x41 x66 x67 = x39 (x36 x66 x67) x37 x38)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x42 x66 x67 = add_SNo (x41 x66 x67) (minus_SNo x66))) -> (forall x66, x66 :e int -> x43 x66 = x66) -> x44 = 1 -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x45 x66 x67 = If_i (SNoLe x66 0) x67 (x42 (x45 (add_SNo x66 (minus_SNo 1)) x67) x66))) -> (forall x66, x66 :e int -> x46 x66 = x45 (x43 x66) x44) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x47 x66 x67 = mul_SNo x66 x67)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x48 x66 x67 = x67)) -> (forall x66, x66 :e int -> x49 x66 = x66) -> x50 = 1 -> x51 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> (forall x68, x68 :e int -> x52 x66 x67 x68 = If_i (SNoLe x66 0) x67 (x47 (x52 (add_SNo x66 (minus_SNo 1)) x67 x68) (x53 (add_SNo x66 (minus_SNo 1)) x67 x68))))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> (forall x68, x68 :e int -> x53 x66 x67 x68 = If_i (SNoLe x66 0) x68 (x48 (x52 (add_SNo x66 (minus_SNo 1)) x67 x68) (x53 (add_SNo x66 (minus_SNo 1)) x67 x68))))) -> (forall x66, x66 :e int -> x54 x66 = x52 (x49 x66) x50 x51) -> (forall x66, x66 :e int -> x55 x66 = mul_SNo (x46 x66) (x54 x66)) -> x56 = 1 -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x57 x66 x67 = x67)) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x58 x66 x67 = If_i (SNoLe x66 0) x67 (x55 (x58 (add_SNo x66 (minus_SNo 1)) x67)))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x59 x66 x67 = x58 x56 (x57 x66 x67))) -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x60 x66 x67 = add_SNo (x59 x66 x67) x66)) -> (forall x66, x66 :e int -> x61 x66 = x66) -> x62 = 1 -> (forall x66, x66 :e int -> (forall x67, x67 :e int -> x63 x66 x67 = If_i (SNoLe x66 0) x67 (x60 (x63 (add_SNo x66 (minus_SNo 1)) x67) x66))) -> (forall x66, x66 :e int -> x64 x66 = x63 (x61 x66) x62) -> (forall x66, x66 :e int -> x65 x66 = x64 x66) -> (forall x66, x66 :e int -> SNoLe 0 x66 -> x33 x66 = x65 x66))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_da6c3e05693cc25649bd0769aa49d3f190c7c942ed12c503c656219a6b5b476d : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x42 x43 x44 x45 :e int))) -> (forall x43 : set -> set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x43 x44 x45 x46 :e int))) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set -> set, (forall x49, x49 :e int -> (forall x50, x50 :e int -> x48 x49 x50 :e int)) -> (forall x49 : set -> set -> set, (forall x50, x50 :e int -> (forall x51, x51 :e int -> x49 x50 x51 :e int)) -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set, (forall x52, x52 :e int -> x51 x52 :e int) -> (forall x52, x52 :e int -> (forall x53 : set -> set -> set, (forall x54, x54 :e int -> (forall x55, x55 :e int -> x53 x54 x55 :e int)) -> (forall x54 : set -> set, (forall x55, x55 :e int -> x54 x55 :e int) -> (forall x55 : set -> set, (forall x56, x56 :e int -> x55 x56 :e int) -> (forall x56, x56 :e int -> x0 x56 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x56 x56)) x56)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x1 x56 x57 = x57)) -> x2 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x3 x56 x57 = If_i (SNoLe x56 0) x57 (x0 (x3 (add_SNo x56 (minus_SNo 1)) x57)))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x4 x56 x57 = x3 (x1 x56 x57) x2)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x5 x56 x57 = add_SNo (x4 x56 x57) (minus_SNo x56))) -> (forall x56, x56 :e int -> x6 x56 = x56) -> x7 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x8 x56 x57 = If_i (SNoLe x56 0) x57 (x5 (x8 (add_SNo x56 (minus_SNo 1)) x57) x56))) -> (forall x56, x56 :e int -> x9 x56 = x8 (x6 x56) x7) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x10 x56 x57 = mul_SNo x56 x57)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x11 x56 x57 = x57)) -> (forall x56, x56 :e int -> x12 x56 = x56) -> x13 = 1 -> x14 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x15 x56 x57 x58 = If_i (SNoLe x56 0) x57 (x10 (x15 (add_SNo x56 (minus_SNo 1)) x57 x58) (x16 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x16 x56 x57 x58 = If_i (SNoLe x56 0) x58 (x11 (x15 (add_SNo x56 (minus_SNo 1)) x57 x58) (x16 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> x17 x56 = x15 (x12 x56) x13 x14) -> (forall x56, x56 :e int -> x18 x56 = mul_SNo (x9 x56) (x17 x56)) -> x19 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x20 x56 x57 = x57)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x21 x56 x57 = If_i (SNoLe x56 0) x57 (x18 (x21 (add_SNo x56 (minus_SNo 1)) x57)))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x22 x56 x57 = x21 x19 (x20 x56 x57))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x23 x56 x57 = add_SNo (x22 x56 x57) x56)) -> (forall x56, x56 :e int -> x24 x56 = x56) -> x25 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x26 x56 x57 = If_i (SNoLe x56 0) x57 (x23 (x26 (add_SNo x56 (minus_SNo 1)) x57) x56))) -> (forall x56, x56 :e int -> x27 x56 = x26 (x24 x56) x25) -> (forall x56, x56 :e int -> x28 x56 = x27 x56) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x29 x56 x57 = add_SNo x57 (minus_SNo x56))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x30 x56 x57 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x57 x57)) x57))) -> (forall x56, x56 :e int -> x31 x56 = x56) -> x32 = 1 -> x33 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x34 x56 x57 x58 = If_i (SNoLe x56 0) x57 (x29 (x34 (add_SNo x56 (minus_SNo 1)) x57 x58) (x35 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x35 x56 x57 x58 = If_i (SNoLe x56 0) x58 (x30 (x34 (add_SNo x56 (minus_SNo 1)) x57 x58) (x35 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> x36 x56 = x34 (x31 x56) x32 x33) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x37 x56 x57 = mul_SNo x56 x57)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x38 x56 x57 = x57)) -> (forall x56, x56 :e int -> x39 x56 = x56) -> x40 = 1 -> x41 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x42 x56 x57 x58 = If_i (SNoLe x56 0) x57 (x37 (x42 (add_SNo x56 (minus_SNo 1)) x57 x58) (x43 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x43 x56 x57 x58 = If_i (SNoLe x56 0) x58 (x38 (x42 (add_SNo x56 (minus_SNo 1)) x57 x58) (x43 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> x44 x56 = x42 (x39 x56) x40 x41) -> (forall x56, x56 :e int -> x45 x56 = mul_SNo (x36 x56) (x44 x56)) -> x46 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x47 x56 x57 = x57)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x48 x56 x57 = If_i (SNoLe x56 0) x57 (x45 (x48 (add_SNo x56 (minus_SNo 1)) x57)))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x49 x56 x57 = x48 x46 (x47 x56 x57))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x50 x56 x57 = add_SNo (x49 x56 x57) x56)) -> (forall x56, x56 :e int -> x51 x56 = x56) -> x52 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x53 x56 x57 = If_i (SNoLe x56 0) x57 (x50 (x53 (add_SNo x56 (minus_SNo 1)) x57) x56))) -> (forall x56, x56 :e int -> x54 x56 = x53 (x51 x56) x52) -> (forall x56, x56 :e int -> x55 x56 = x54 x56) -> (forall x56, x56 :e int -> SNoLe 0 x56 -> x28 x56 = x55 x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c03708a5ed968f75f62d1592f7c2952b2f47fea8825700e326e786f21e1a6e19 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x33 x34 x35 x36 :e int))) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set -> set, (forall x49, x49 :e int -> (forall x50, x50 :e int -> x48 x49 x50 :e int)) -> (forall x49 : set -> set -> set, (forall x50, x50 :e int -> (forall x51, x51 :e int -> x49 x50 x51 :e int)) -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set, (forall x52, x52 :e int -> x51 x52 :e int) -> (forall x52, x52 :e int -> (forall x53 : set -> set -> set, (forall x54, x54 :e int -> (forall x55, x55 :e int -> x53 x54 x55 :e int)) -> (forall x54 : set -> set, (forall x55, x55 :e int -> x54 x55 :e int) -> (forall x55 : set -> set, (forall x56, x56 :e int -> x55 x56 :e int) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x0 x56 x57 = add_SNo (mul_SNo (mul_SNo x57 x57) x57) (minus_SNo x56))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x1 x56 x57 = add_SNo x57 x57)) -> (forall x56, x56 :e int -> x2 x56 = x56) -> x3 = 1 -> x4 = 2 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x5 x56 x57 x58 = If_i (SNoLe x56 0) x57 (x0 (x5 (add_SNo x56 (minus_SNo 1)) x57 x58) (x6 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x6 x56 x57 x58 = If_i (SNoLe x56 0) x58 (x1 (x5 (add_SNo x56 (minus_SNo 1)) x57 x58) (x6 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> x7 x56 = x5 (x2 x56) x3 x4) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x8 x56 x57 = mul_SNo x56 x57)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x9 x56 x57 = x57)) -> (forall x56, x56 :e int -> x10 x56 = x56) -> x11 = 1 -> x12 = mul_SNo 2 (add_SNo 2 2) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x13 x56 x57 x58 = If_i (SNoLe x56 0) x57 (x8 (x13 (add_SNo x56 (minus_SNo 1)) x57 x58) (x14 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x14 x56 x57 x58 = If_i (SNoLe x56 0) x58 (x9 (x13 (add_SNo x56 (minus_SNo 1)) x57 x58) (x14 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> x15 x56 = x13 (x10 x56) x11 x12) -> (forall x56, x56 :e int -> x16 x56 = mul_SNo (x7 x56) (x15 x56)) -> x17 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x18 x56 x57 = x57)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x19 x56 x57 = If_i (SNoLe x56 0) x57 (x16 (x19 (add_SNo x56 (minus_SNo 1)) x57)))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x20 x56 x57 = x19 x17 (x18 x56 x57))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x21 x56 x57 = add_SNo (x20 x56 x57) x56)) -> (forall x56, x56 :e int -> x22 x56 = x56) -> x23 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x24 x56 x57 = If_i (SNoLe x56 0) x57 (x21 (x24 (add_SNo x56 (minus_SNo 1)) x57) x56))) -> (forall x56, x56 :e int -> x25 x56 = x24 (x22 x56) x23) -> (forall x56, x56 :e int -> x26 x56 = x25 x56) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x27 x56 x57 = add_SNo (mul_SNo (mul_SNo x57 x57) x57) (minus_SNo x56))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x28 x56 x57 = add_SNo x57 x57)) -> (forall x56, x56 :e int -> x29 x56 = x56) -> x30 = 1 -> x31 = 2 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x32 x56 x57 x58 = If_i (SNoLe x56 0) x57 (x27 (x32 (add_SNo x56 (minus_SNo 1)) x57 x58) (x33 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> (forall x58, x58 :e int -> x33 x56 x57 x58 = If_i (SNoLe x56 0) x58 (x28 (x32 (add_SNo x56 (minus_SNo 1)) x57 x58) (x33 (add_SNo x56 (minus_SNo 1)) x57 x58))))) -> (forall x56, x56 :e int -> x34 x56 = x32 (x29 x56) x30 x31) -> (forall x56, x56 :e int -> x35 x56 = mul_SNo (mul_SNo x56 x56) x56) -> x36 = 1 -> (forall x56, x56 :e int -> x37 x56 = add_SNo x56 x56) -> (forall x56, x56 :e int -> x38 x56 = x56) -> x39 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x40 x56 x57 = If_i (SNoLe x56 0) x57 (x37 (x40 (add_SNo x56 (minus_SNo 1)) x57)))) -> (forall x56, x56 :e int -> x41 x56 = x40 (x38 x56) x39) -> (forall x56, x56 :e int -> x42 x56 = x41 x56) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x43 x56 x57 = If_i (SNoLe x56 0) x57 (x35 (x43 (add_SNo x56 (minus_SNo 1)) x57)))) -> (forall x56, x56 :e int -> x44 x56 = x43 x36 (x42 x56)) -> (forall x56, x56 :e int -> x45 x56 = mul_SNo (x34 x56) (x44 x56)) -> x46 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x47 x56 x57 = x57)) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x48 x56 x57 = If_i (SNoLe x56 0) x57 (x45 (x48 (add_SNo x56 (minus_SNo 1)) x57)))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x49 x56 x57 = x48 x46 (x47 x56 x57))) -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x50 x56 x57 = add_SNo (x49 x56 x57) x56)) -> (forall x56, x56 :e int -> x51 x56 = x56) -> x52 = 1 -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x53 x56 x57 = If_i (SNoLe x56 0) x57 (x50 (x53 (add_SNo x56 (minus_SNo 1)) x57) x56))) -> (forall x56, x56 :e int -> x54 x56 = x53 (x51 x56) x52) -> (forall x56, x56 :e int -> x55 x56 = x54 x56) -> (forall x56, x56 :e int -> SNoLe 0 x56 -> x26 x56 = x55 x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_618350fc84dce018eb4541fb88d24b3c3f9e444f68f6f3abcef4430d8752d064 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo 1 (minus_SNo (add_SNo x20 x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x1 x20 x21 = x21)) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x4 x20 x21 = x3 (x1 x20 x21) x2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x5 x20 x21 = mul_SNo (x4 x20 x21) x20)) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo 1 (minus_SNo (add_SNo x21 x21)))) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 0 (minus_SNo 1) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_289be4cd98a2ecf7091bef837aa59cd662fd291ebb83f2e101f61c52a6073e11 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 2 x21) x20)) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = add_SNo 1 (minus_SNo (add_SNo (x4 x20) x20))) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 1 (minus_SNo (mul_SNo x20 x21)))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_8f88193445bfa8e3ef43a6504918b7c00949fe1a41410405b6cbbd74095d3b4f : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 2 x21) x20)) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = add_SNo 1 (minus_SNo (x4 x20))) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 1 (minus_SNo (mul_SNo x20 x21)))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_ffcfc66161faa5c125c8e1d37a55bf47de17d195ba7a37c072f34feef2c3136a : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 2 x21) x20)) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = add_SNo 1 (add_SNo x20 (minus_SNo (x4 x20)))) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 1 (mul_SNo x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 1 (minus_SNo (mul_SNo 2 (add_SNo 2 (add_SNo 2 2)))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_30fb39f85db8020451d76bf8cba0a6aced72ae42e98cee5cb4a72b386c158b2f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo 1 (minus_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x15 x15)) x15)))) -> (forall x15, x15 :e int -> x1 x15 = x15) -> x2 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) x2) -> (forall x15, x15 :e int -> x5 x15 = x4 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = add_SNo 1 (minus_SNo (mul_SNo x15 x16)))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> x9 = 1 -> x10 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) x9 x10) -> (forall x15, x15 :e int -> x14 x15 = x13 x15) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_b1b8d1b145db7ccff0c09ef35e06826932dc8475149828c3a9ff3934698502c9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo (add_SNo x20 x20) x20) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = add_SNo 1 (minus_SNo (x4 x20))) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 1 (minus_SNo (mul_SNo x20 x21)))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
