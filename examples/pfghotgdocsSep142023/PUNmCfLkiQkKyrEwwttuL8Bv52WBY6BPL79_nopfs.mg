Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
Theorem missingprop_08ddc0ab175ed334ede9e91b1e696c52f93af5ae9fd82dbaf1da020b97eb79c2 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> x0 x40 = add_SNo (add_SNo x40 x40) x40) -> (forall x40, x40 :e int -> x1 x40 = x40) -> (forall x40, x40 :e int -> x2 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x3 x40 = x40) -> x4 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x5 x40 x41 = If_i (SNoLe x40 0) x41 (x2 (x5 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x6 x40 = x5 (x3 x40) x4) -> (forall x40, x40 :e int -> x7 x40 = add_SNo 1 (x6 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x9 x40 = x8 (x1 x40) (x7 x40)) -> (forall x40, x40 :e int -> x10 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x11 x40 = add_SNo (add_SNo x40 x40) x40) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x14 x40 = x13 (x11 x40) x12) -> (forall x40, x40 :e int -> x15 x40 = add_SNo (x9 x40) (x14 x40)) -> (forall x40, x40 :e int -> x16 x40 = mul_SNo (mul_SNo x40 x40) x40) -> x17 = 1 -> (forall x40, x40 :e int -> x18 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x19 x40 = x40) -> x20 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = If_i (SNoLe x40 0) x41 (x18 (x21 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x22 x40 = x21 (x19 x40) x20) -> (forall x40, x40 :e int -> x23 x40 = x22 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x24 x40 x41 = If_i (SNoLe x40 0) x41 (x16 (x24 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x25 x40 = x24 x17 (x23 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x26 x40 x41 = mul_SNo x40 x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x40 x41 = x41)) -> (forall x40, x40 :e int -> x28 x40 = x40) -> (forall x40, x40 :e int -> x29 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x30 x40 = x40) -> x31 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x33 x40 = x32 (x30 x40) x31) -> (forall x40, x40 :e int -> x34 x40 = add_SNo 1 (x33 x40)) -> x35 = add_SNo 1 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x36 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x26 (x36 (add_SNo x40 (minus_SNo 1)) x41 x42) (x37 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x37 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x27 (x36 (add_SNo x40 (minus_SNo 1)) x41 x42) (x37 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x38 x40 = x36 (x28 x40) (x34 x40) x35) -> (forall x40, x40 :e int -> x39 x40 = add_SNo (x25 x40) (x38 x40)) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x15 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6169df4e1d21bb91d8c9af97aeebdd6d690c82a0afcd77dd3eb93a2391423ce3 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> x0 x35 = add_SNo (add_SNo x35 x35) x35) -> (forall x35, x35 :e int -> x1 x35 = add_SNo x35 x35) -> x2 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x3 x35 x36 = If_i (SNoLe x35 0) x36 (x0 (x3 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x4 x35 = x3 (x1 x35) x2) -> (forall x35, x35 :e int -> x5 x35 = add_SNo (mul_SNo (mul_SNo x35 x35) x35) x35) -> x6 = 1 -> (forall x35, x35 :e int -> x7 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x8 x35 = x35) -> x9 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x10 x35 x36 = If_i (SNoLe x35 0) x36 (x7 (x10 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x11 x35 = x10 (x8 x35) x9) -> (forall x35, x35 :e int -> x12 x35 = x11 x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x35 x36 = If_i (SNoLe x35 0) x36 (x5 (x13 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x14 x35 = x13 x6 (x12 x35)) -> (forall x35, x35 :e int -> x15 x35 = add_SNo (x4 x35) (x14 x35)) -> (forall x35, x35 :e int -> x16 x35 = add_SNo (mul_SNo (mul_SNo x35 x35) x35) x35) -> x17 = 1 -> (forall x35, x35 :e int -> x18 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x19 x35 = x35) -> x20 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x21 x35 x36 = If_i (SNoLe x35 0) x36 (x18 (x21 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x22 x35 = x21 (x19 x35) x20) -> (forall x35, x35 :e int -> x23 x35 = x22 x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x24 x35 x36 = If_i (SNoLe x35 0) x36 (x16 (x24 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x25 x35 = x24 x17 (x23 x35)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x26 x35 x36 = mul_SNo x35 x36)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x27 x35 x36 = x36)) -> (forall x35, x35 :e int -> x28 x35 = x35) -> x29 = 1 -> x30 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x31 x35 x36 x37 = If_i (SNoLe x35 0) x36 (x26 (x31 (add_SNo x35 (minus_SNo 1)) x36 x37) (x32 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x32 x35 x36 x37 = If_i (SNoLe x35 0) x37 (x27 (x31 (add_SNo x35 (minus_SNo 1)) x36 x37) (x32 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> x33 x35 = x31 (x28 x35) x29 x30) -> (forall x35, x35 :e int -> x34 x35 = add_SNo (x25 x35) (x33 x35)) -> (forall x35, x35 :e int -> SNoLe 0 x35 -> x15 x35 = x34 x35)))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5710ec719115f1ea3ac4c4de8d4d8da22bb6d73beb635c0f56e0e61a27a60cd8 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = add_SNo (add_SNo x38 x38) x38) -> (forall x38, x38 :e int -> x1 x38 = add_SNo x38 x38) -> x2 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x4 x38 = x3 (x1 x38) x2) -> (forall x38, x38 :e int -> x5 x38 = add_SNo x38 x38) -> (forall x38, x38 :e int -> x6 x38 = x38) -> (forall x38, x38 :e int -> x7 x38 = add_SNo (add_SNo x38 x38) x38) -> (forall x38, x38 :e int -> x8 x38 = x38) -> x9 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x10 x38 x39 = If_i (SNoLe x38 0) x39 (x7 (x10 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x11 x38 = x10 (x8 x38) x9) -> (forall x38, x38 :e int -> x12 x38 = add_SNo 1 (x11 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = If_i (SNoLe x38 0) x39 (x5 (x13 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x14 x38 = x13 (x6 x38) (x12 x38)) -> (forall x38, x38 :e int -> x15 x38 = add_SNo (x4 x38) (x14 x38)) -> (forall x38, x38 :e int -> x16 x38 = add_SNo x38 x38) -> (forall x38, x38 :e int -> x17 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x18 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x19 x38 x39 = x39)) -> (forall x38, x38 :e int -> x20 x38 = x38) -> x21 = 1 -> x22 = add_SNo 1 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x23 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x18 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x24 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x19 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x25 x38 = x23 (x20 x38) x21 x22) -> (forall x38, x38 :e int -> x26 x38 = add_SNo 1 (x25 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = If_i (SNoLe x38 0) x39 (x16 (x27 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x28 x38 = x27 (x17 x38) (x26 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = x39)) -> (forall x38, x38 :e int -> x31 x38 = x38) -> x32 = 1 -> x33 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x34 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x29 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x35 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x30 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x36 x38 = x34 (x31 x38) x32 x33) -> (forall x38, x38 :e int -> x37 x38 = add_SNo (x28 x38) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x15 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_587c2c2ce65b514045a68ee67a093ef484e9f2b9903a7648c285c3a9facd2f05 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> x0 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x1 x35 = x35) -> (forall x35, x35 :e int -> x2 x35 = add_SNo (add_SNo x35 x35) x35) -> (forall x35, x35 :e int -> x3 x35 = x35) -> x4 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x5 x35 x36 = If_i (SNoLe x35 0) x36 (x2 (x5 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x6 x35 = x5 (x3 x35) x4) -> (forall x35, x35 :e int -> x7 x35 = mul_SNo 2 (add_SNo x35 x35)) -> (forall x35, x35 :e int -> x8 x35 = x35) -> x9 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x10 x35 x36 = If_i (SNoLe x35 0) x36 (x7 (x10 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x11 x35 = x10 (x8 x35) x9) -> (forall x35, x35 :e int -> x12 x35 = add_SNo 1 (add_SNo (x6 x35) (x11 x35))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x35 x36 = If_i (SNoLe x35 0) x36 (x0 (x13 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x14 x35 = x13 (x1 x35) (x12 x35)) -> (forall x35, x35 :e int -> x15 x35 = x14 x35) -> (forall x35, x35 :e int -> x16 x35 = add_SNo (mul_SNo (mul_SNo x35 x35) x35) x35) -> x17 = 1 -> (forall x35, x35 :e int -> x18 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x19 x35 = x35) -> x20 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x21 x35 x36 = If_i (SNoLe x35 0) x36 (x18 (x21 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x22 x35 = x21 (x19 x35) x20) -> (forall x35, x35 :e int -> x23 x35 = x22 x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x24 x35 x36 = If_i (SNoLe x35 0) x36 (x16 (x24 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x25 x35 = x24 x17 (x23 x35)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x26 x35 x36 = mul_SNo x35 x36)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x27 x35 x36 = x36)) -> (forall x35, x35 :e int -> x28 x35 = x35) -> x29 = 1 -> x30 = add_SNo 2 (add_SNo 2 2) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x31 x35 x36 x37 = If_i (SNoLe x35 0) x36 (x26 (x31 (add_SNo x35 (minus_SNo 1)) x36 x37) (x32 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x32 x35 x36 x37 = If_i (SNoLe x35 0) x37 (x27 (x31 (add_SNo x35 (minus_SNo 1)) x36 x37) (x32 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> x33 x35 = x31 (x28 x35) x29 x30) -> (forall x35, x35 :e int -> x34 x35 = add_SNo (x25 x35) (x33 x35)) -> (forall x35, x35 :e int -> SNoLe 0 x35 -> x15 x35 = x34 x35)))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_90f8ee8ab0ef4190a8b3fa2cfdc46ef67abe3be922bfd829ef91b986b7b7e5d0 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33) -> (forall x33, x33 :e int -> x1 x33 = x33) -> x2 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x4 x33 = x3 (x1 x33) x2) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x5 x33 x34 = add_SNo (mul_SNo (mul_SNo x34 x34) x34) x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x6 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x7 x33 = x33) -> x8 = 2 -> x9 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x10 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x5 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x11 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x6 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x12 x33 = x10 (x7 x33) x8 x9) -> (forall x33, x33 :e int -> x13 x33 = add_SNo (x4 x33) (x12 x33)) -> (forall x33, x33 :e int -> x14 x33 = add_SNo (mul_SNo (mul_SNo x33 x33) x33) x33) -> x15 = 1 -> (forall x33, x33 :e int -> x16 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> x17 x33 = x33) -> x18 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = If_i (SNoLe x33 0) x34 (x16 (x19 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x20 x33 = x19 (x17 x33) x18) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x14 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x15 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = x33) -> x27 = 1 -> x28 = add_SNo 1 (add_SNo 2 2) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = add_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x13 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_95eb5c77750043213e59f73b4d5762929b44a13b9780296e4bba5a09beb75c95 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> x0 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x1 x35 = x35) -> (forall x35, x35 :e int -> x2 x35 = add_SNo (add_SNo x35 x35) x35) -> (forall x35, x35 :e int -> x3 x35 = x35) -> x4 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x5 x35 x36 = If_i (SNoLe x35 0) x36 (x2 (x5 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x6 x35 = x5 (x3 x35) x4) -> (forall x35, x35 :e int -> x7 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x8 x35 = x35) -> x9 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x10 x35 x36 = If_i (SNoLe x35 0) x36 (x7 (x10 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x11 x35 = x10 (x8 x35) x9) -> (forall x35, x35 :e int -> x12 x35 = add_SNo 1 (add_SNo (x6 x35) (x11 x35))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x35 x36 = If_i (SNoLe x35 0) x36 (x0 (x13 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x14 x35 = x13 (x1 x35) (x12 x35)) -> (forall x35, x35 :e int -> x15 x35 = x14 x35) -> (forall x35, x35 :e int -> x16 x35 = add_SNo (mul_SNo x35 x35) x35) -> x17 = 1 -> (forall x35, x35 :e int -> x18 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x19 x35 = x35) -> x20 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x21 x35 x36 = If_i (SNoLe x35 0) x36 (x18 (x21 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x22 x35 = x21 (x19 x35) x20) -> (forall x35, x35 :e int -> x23 x35 = x22 x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x24 x35 x36 = If_i (SNoLe x35 0) x36 (x16 (x24 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x25 x35 = x24 x17 (x23 x35)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x26 x35 x36 = mul_SNo x35 x36)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x27 x35 x36 = x36)) -> (forall x35, x35 :e int -> x28 x35 = x35) -> x29 = 1 -> x30 = add_SNo 2 (add_SNo 2 2) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x31 x35 x36 x37 = If_i (SNoLe x35 0) x36 (x26 (x31 (add_SNo x35 (minus_SNo 1)) x36 x37) (x32 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x32 x35 x36 x37 = If_i (SNoLe x35 0) x37 (x27 (x31 (add_SNo x35 (minus_SNo 1)) x36 x37) (x32 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> x33 x35 = x31 (x28 x35) x29 x30) -> (forall x35, x35 :e int -> x34 x35 = add_SNo (x25 x35) (x33 x35)) -> (forall x35, x35 :e int -> SNoLe 0 x35 -> x15 x35 = x34 x35)))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5a68a0ea82ce41b889878f9e5ae74e0318e6a3190aaebeaa372bd6b90bd277f6 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo x28 x28))) (mul_SNo x29 x29))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = add_SNo (add_SNo x29 x29) x29)) -> (forall x28, x28 :e int -> x2 x28 = x28) -> x3 = 2 -> x4 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x7 x28 = x5 (x2 x28) x3 x4) -> (forall x28, x28 :e int -> x8 x28 = add_SNo (x7 x28) 1) -> (forall x28, x28 :e int -> x9 x28 = mul_SNo (mul_SNo x28 x28) x28) -> x10 = 1 -> (forall x28, x28 :e int -> x11 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x12 x28 = x28) -> x13 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = If_i (SNoLe x28 0) x29 (x11 (x14 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x15 x28 = x14 (x12 x28) x13) -> (forall x28, x28 :e int -> x16 x28 = x15 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x9 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x18 x28 = x17 x10 (x16 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = add_SNo 1 (add_SNo (x18 x28) (x26 x28))) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x8 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_37e7aec052eefad5fdfb6f580c3a2438bd7e3d4b85fadb1efcdd09ebeea6b768 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x0 x26 x27 = add_SNo (mul_SNo 2 (add_SNo (add_SNo (add_SNo (mul_SNo x27 x27) x26) x26) x26)) x26)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x1 x26 x27 = add_SNo (add_SNo x27 x27) x27)) -> (forall x26, x26 :e int -> x2 x26 = x26) -> x3 = 2 -> x4 = 1 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x5 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x0 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x6 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x1 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x7 x26 = x5 (x2 x26) x3 x4) -> (forall x26, x26 :e int -> x8 x26 = add_SNo (x7 x26) 1) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x9 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x10 x26 x27 = x27)) -> (forall x26, x26 :e int -> x11 x26 = x26) -> x12 = 1 -> x13 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x14 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x9 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x15 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x10 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x16 x26 = x14 (x11 x26) x12 x13) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x26 x27 = x27)) -> (forall x26, x26 :e int -> x19 x26 = x26) -> x20 = 1 -> x21 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x22 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x17 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x23 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x18 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x24 x26 = x22 (x19 x26) x20 x21) -> (forall x26, x26 :e int -> x25 x26 = add_SNo 1 (add_SNo (x16 x26) (x24 x26))) -> (forall x26, x26 :e int -> SNoLe 0 x26 -> x8 x26 = x25 x26))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_3db40e677964a41f9242a832fad7b2070c1278b9586bcf587e532136bfe89efb : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x0 x26 x27 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x26 x26)) x26) x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x1 x26 x27 = mul_SNo 2 (add_SNo (add_SNo x27 x27) x27))) -> (forall x26, x26 :e int -> x2 x26 = x26) -> x3 = 2 -> x4 = 1 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x5 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x0 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x6 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x1 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x7 x26 = x5 (x2 x26) x3 x4) -> (forall x26, x26 :e int -> x8 x26 = add_SNo 1 (x7 x26)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x9 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x10 x26 x27 = x27)) -> (forall x26, x26 :e int -> x11 x26 = x26) -> x12 = 1 -> x13 = add_SNo 1 (add_SNo 2 2) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x14 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x9 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x15 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x10 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x16 x26 = x14 (x11 x26) x12 x13) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x26 x27 = x27)) -> (forall x26, x26 :e int -> x19 x26 = x26) -> x20 = 1 -> x21 = add_SNo 2 (add_SNo 2 2) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x22 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x17 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x23 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x18 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x24 x26 = x22 (x19 x26) x20 x21) -> (forall x26, x26 :e int -> x25 x26 = add_SNo 1 (add_SNo (x16 x26) (x24 x26))) -> (forall x26, x26 :e int -> SNoLe 0 x26 -> x8 x26 = x25 x26))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6480cea06cc32e6f0a00f07ddd257711622c36b49a44aa0d460324d021dc6e8c : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x25 x25) x25)) x25) -> (forall x25, x25 :e int -> x1 x25 = x25) -> x2 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x4 x25 = x3 (x1 x25) x2) -> (forall x25, x25 :e int -> x5 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = add_SNo 1 (add_SNo (x4 x25) (x9 x25))) -> (forall x25, x25 :e int -> x11 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x12 x25 = x25) -> x13 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x14 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x15 x25 = x14 (x12 x25) x13) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x16 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x17 x25 x26 = x26)) -> (forall x25, x25 :e int -> x18 x25 = x25) -> x19 = 1 -> x20 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x16 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x17 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x18 x25) x19 x20) -> (forall x25, x25 :e int -> x24 x25 = add_SNo 1 (add_SNo (x15 x25) (x23 x25))) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_2aba7ee22f9be9a6b6519f89c134a0bb1a4d0c90dba5757db2e4fefacf9e0e17 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x1 x25 x26 = x26)) -> (forall x25, x25 :e int -> x2 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = x3 (x1 x25 x26) (x2 x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = add_SNo (mul_SNo 2 (x4 x25 x26)) (minus_SNo 1))) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = add_SNo (mul_SNo x25 x26) (minus_SNo 1))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = add_SNo x26 x26)) -> (forall x25, x25 :e int -> x13 x25 = add_SNo x25 (minus_SNo 1)) -> x14 = 1 -> x15 = add_SNo 2 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x18 x25 = x16 (x13 x25) x14 x15) -> (forall x25, x25 :e int -> x19 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x20 x25 = x25) -> x21 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x20 x25) x21) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (mul_SNo (x18 x25) (x23 x25)) (minus_SNo 1)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_a0521dabbb13163f5e15b529711cbee5a122a7be1ac880dac75029d6b11bdc9b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo (add_SNo x25 (minus_SNo 1)) x25) -> x1 = 2 -> (forall x25, x25 :e int -> x2 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x4 x25 = x3 x1 (x2 x25)) -> (forall x25, x25 :e int -> x5 x25 = mul_SNo 2 (add_SNo (x4 x25) x25)) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 2 -> (forall x25, x25 :e int -> x8 x25 = x25) -> (forall x25, x25 :e int -> x9 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x10 x25 x26 = If_i (SNoLe x25 0) x26 x7)) -> (forall x25, x25 :e int -> x11 x25 = x10 (x8 x25) (x9 x25)) -> (forall x25, x25 :e int -> x12 x25 = x11 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x13 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x14 x25 = x13 (x6 x25) (x12 x25)) -> (forall x25, x25 :e int -> x15 x25 = x14 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x16 x25 x26 = add_SNo (mul_SNo x25 x26) (minus_SNo 1))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x17 x25 x26 = x26)) -> (forall x25, x25 :e int -> x18 x25 = add_SNo x25 (minus_SNo 1)) -> x19 = 1 -> x20 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x16 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x17 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x18 x25) x19 x20) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (mul_SNo (x23 x25) (If_i (SNoLe x25 0) 1 (add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (minus_SNo 1)))) (minus_SNo 1)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x15 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f8f9731bbce8b65880fba8d0576180091fd2f4a3cec390b29152a81f81246aad : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x1 x45 x46 = x46)) -> x2 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x4 x45 x46 = x3 (x1 x45 x46) x2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x5 x45 x46 = add_SNo (x4 x45 x46) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x6 x45 x46 = x46)) -> x7 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x8 (x6 x45 x46) x7)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = add_SNo (add_SNo (add_SNo (x9 x45 x46) x45) x45) x45)) -> (forall x45, x45 :e int -> x11 x45 = x45) -> x12 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x14 x45 = x13 (x11 x45) x12) -> (forall x45, x45 :e int -> x15 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x16 x45 = x45) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x19 x45 = x18 (x16 x45) x17) -> (forall x45, x45 :e int -> x20 x45 = mul_SNo (x14 x45) (x19 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x21 x45 x46 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45)) x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x22 x45 x46 = add_SNo 1 (add_SNo (add_SNo x46 x46) x46))) -> (forall x45, x45 :e int -> x23 x45 = x45) -> x24 = 1 -> x25 = add_SNo 2 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x26 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x21 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x27 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x22 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x28 x45 = x26 (x23 x45) x24 x25) -> (forall x45, x45 :e int -> x29 x45 = x28 x45) -> x30 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x31 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x45 x46 = If_i (SNoLe x45 0) x46 (x29 (x32 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x33 x45 x46 = x32 x30 (x31 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x34 x45 x46 = add_SNo (x33 x45 x46) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45)))) -> (forall x45, x45 :e int -> x35 x45 = x45) -> x36 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x38 x45 = x37 (x35 x45) x36) -> (forall x45, x45 :e int -> x39 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = mul_SNo (x38 x45) (x43 x45)) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x20 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c4244b21f147eec6e7c478c9e2f1a484e48c7b85b6fcf8a0c7274ddb8eff3e2a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = mul_SNo 2 (add_SNo 2 x25)) -> (forall x25, x25 :e int -> x1 x25 = x25) -> x2 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x4 x25 = x3 (x1 x25) x2) -> (forall x25, x25 :e int -> x5 x25 = add_SNo (add_SNo x25 x25) x25) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = mul_SNo (add_SNo 1 (x4 x25)) (add_SNo (x9 x25) (minus_SNo 1))) -> (forall x25, x25 :e int -> x11 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x12 x25 = x25) -> x13 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x14 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x15 x25 = x14 (x12 x25) x13) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x16 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x17 x25 x26 = x26)) -> (forall x25, x25 :e int -> x18 x25 = x25) -> x19 = 1 -> x20 = add_SNo 1 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x16 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x17 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x18 x25) x19 x20) -> (forall x25, x25 :e int -> x24 x25 = mul_SNo (mul_SNo (add_SNo (x15 x25) (minus_SNo 1)) (add_SNo (x23 x25) (minus_SNo 1))) (add_SNo 1 2)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_feeb94f222d049acedc5c71bf0420a2e399035493ad3617b2be3e8ca9741d10a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = mul_SNo x20 x20) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = add_SNo 1 (mul_SNo 2 (x4 x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x6 x20 x21 = mul_SNo (mul_SNo x20 x21) x20)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x7 x20 x21 = add_SNo x21 x21)) -> (forall x20, x20 :e int -> x8 x20 = add_SNo x20 (minus_SNo 1)) -> x9 = 2 -> x10 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x11 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x6 (x11 (add_SNo x20 (minus_SNo 1)) x21 x22) (x12 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x12 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x7 (x11 (add_SNo x20 (minus_SNo 1)) x21 x22) (x12 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x13 x20 = x11 (x8 x20) x9 x10) -> (forall x20, x20 :e int -> x14 x20 = add_SNo x20 x20) -> (forall x20, x20 :e int -> x15 x20 = x20) -> x16 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x14 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 (x15 x20) x16) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (mul_SNo (x13 x20) (x18 x20)) 1) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_96449c233315a1fde4dd94e6c1c4f0f8823e314c8ad01281c7b8329682adf691 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = x23)) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) x2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (mul_SNo (add_SNo 1 2) (add_SNo (mul_SNo x22 x23) x22)) (x4 x22 x23))) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = add_SNo x23 (minus_SNo 1))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x13 x22 x23 = x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) (x13 x22 x23))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (x15 x22 x23) (mul_SNo (mul_SNo (add_SNo 1 2) (add_SNo 1 x23)) x22))) -> (forall x22, x22 :e int -> x17 x22 = x22) -> x18 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) x18) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_eb1fe661f095e1a1f12c79d550342c20362ceaf9adfac0a26aa89f36b1a30527 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = x23)) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) x2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (add_SNo (mul_SNo x22 x23) (x4 x22 x23)) x22)) -> (forall x22, x22 :e int -> x6 x22 = add_SNo x22 (minus_SNo 1)) -> x7 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = mul_SNo (x9 x22) x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = add_SNo x23 (minus_SNo 1))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x13 x22 x23 = x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) (x13 x22 x23))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (add_SNo (mul_SNo x22 x23) (x15 x22 x23)) x22)) -> (forall x22, x22 :e int -> x17 x22 = add_SNo x22 (minus_SNo 1)) -> x18 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) x18) -> (forall x22, x22 :e int -> x21 x22 = mul_SNo (x20 x22) x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_2fe7a48c58008f807d4f387f9fe06cd72d7e5c5412735b2a2d1d8732064e9e0f : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = add_SNo (add_SNo x28 x29) x29)) -> (forall x28, x28 :e int -> x2 x28 = x28) -> x3 = 1 -> x4 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x7 x28 = x5 (x2 x28) x3 x4) -> (forall x28, x28 :e int -> x8 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x9 x28 = add_SNo x28 (minus_SNo 2)) -> x10 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = mul_SNo (add_SNo (x7 x28) (minus_SNo 1)) (x12 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo (add_SNo x28 x28) x29)) -> (forall x28, x28 :e int -> x15 x28 = x28) -> (forall x28, x28 :e int -> x16 x28 = add_SNo x28 (minus_SNo 1)) -> x17 = 1 -> x18 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x21 x28 = x19 (x16 x28) x17 x18) -> (forall x28, x28 :e int -> x22 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x23 x28 = add_SNo x28 (minus_SNo 2)) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (add_SNo (x21 x28) (minus_SNo 1)) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_3b14d6eec479b6d9bb8c682d27d2b480159e3614db31d909129fc9ab39ce6f01 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x0 x12 x13 = add_SNo 1 (add_SNo x12 x13))) -> (forall x12, x12 :e int -> x1 x12 = add_SNo (add_SNo 2 x12) 2) -> (forall x12, x12 :e int -> x2 x12 = If_i (SNoLe x12 0) 0 1) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = x4 x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x6 x12 x13 = add_SNo x12 x13)) -> (forall x12, x12 :e int -> x7 x12 = add_SNo x12 (minus_SNo 2)) -> (forall x12, x12 :e int -> x8 x12 = mul_SNo (add_SNo 2 x12) (add_SNo 1 (add_SNo 2 (add_SNo 2 2)))) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = x10 x12) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_04cfdcc8eebacdef2cacccb32cc27d21427012fec746686c4895fc20918a509b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x1 x20 x21 = x21)) -> x2 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x4 x20 x21 = x3 (x1 x20 x21) x2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x5 x20 x21 = add_SNo (x4 x20 x21) x20)) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 1 (mul_SNo x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo x21 (minus_SNo 1))) -> (forall x20, x20 :e int -> x13 x20 = add_SNo x20 (minus_SNo 1)) -> x14 = 1 -> (forall x20, x20 :e int -> x15 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 (x15 x20)) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (mul_SNo (x18 x20) (If_i (SNoLe x20 0) 0 2)) 1) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
