Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
Theorem missingprop_fdd975ccf6ded76083b033806e903aac2cab9077202e5a180d656637757601b8 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo x17 x17) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = add_SNo (x4 x17) (minus_SNo 2)) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = add_SNo (mul_SNo 2 (x15 x17)) (minus_SNo 2)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_2f73b856ac0a23ecc92ae5b5c2aa78c76def5e373631c7826222ac6300a4c6ae : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (add_SNo (x4 x40) (minus_SNo x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (x14 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (add_SNo (mul_SNo 2 (add_SNo (add_SNo x41 x41) x41)) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = mul_SNo 2 (add_SNo 2 2) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_28e82904c52751a7e86cdb319965dddc95695ec156ed569d4d53dcbdcb08ddd9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> x0 x40 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo x40 x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x1 x40 x41 = x41)) -> x2 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x4 x40 x41 = x3 (x1 x40 x41) x2)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x5 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x6 = 2 -> (forall x40, x40 :e int -> x7 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x9 x40 = x8 x6 (x7 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (add_SNo (x4 x40 x41) (minus_SNo x40)) (x9 x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (x14 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo x40 x40))) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (add_SNo (mul_SNo 2 (add_SNo (add_SNo x41 x41) x41)) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = mul_SNo 2 (add_SNo 2 2) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_14a7586e233fa6da3a37be5ecdbbe26c9571a1e9a43c8b3f8e023e5888a2eabd : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (add_SNo (x4 x40) (minus_SNo x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (x14 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)))) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x41 x41) x41)))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_950c5b8cf791d08bc1c9d35e6e6e54b28c8800b14f6e5606d016ddf0db0ae463 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16, x16 :e int -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x1 x45 x46 = x46)) -> x2 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x4 x45 x46 = x3 (x1 x45 x46) x2)) -> (forall x45, x45 :e int -> x5 x45 = add_SNo (add_SNo x45 x45) x45) -> x6 = 2 -> (forall x45, x45 :e int -> x7 x45 = x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x9 x45 = x8 x6 (x7 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = add_SNo (x4 x45 x46) (x9 x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x11 x45 x46 = x46)) -> x12 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x14 x45 x46 = x13 (x11 x45 x46) x12)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x15 x45 x46 = mul_SNo (add_SNo 2 x46) x45)) -> x16 = 2 -> (forall x45, x45 :e int -> x17 x45 = x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x19 x45 = x18 x16 (x17 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x20 x45 x46 = add_SNo (add_SNo (x14 x45 x46) (minus_SNo x45)) (x19 x45))) -> (forall x45, x45 :e int -> x21 x45 = x45) -> x22 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x23 x45 x46 = If_i (SNoLe x45 0) x46 (x20 (x23 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x24 x45 = x23 (x21 x45) x22) -> (forall x45, x45 :e int -> x25 x45 = x24 x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x26 x45 x46 = add_SNo (add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo x45 x45))) x45) x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x27 x45 x46 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x46 x46) x46)))) -> (forall x45, x45 :e int -> x28 x45 = x45) -> x29 = 1 -> x30 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x31 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x26 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x32 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x27 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x33 x45 = x31 (x28 x45) x29 x30) -> (forall x45, x45 :e int -> x34 x45 = x33 x45) -> x35 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x36 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x38 x45 x46 = x37 x35 (x36 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (add_SNo (x38 x45 x46) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45))) x45)) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x25 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c15035e3e276c858d270abb4956ee083e43971265d492754306d156ea09ad6c5 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> x0 x40 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x1 x40 x41 = x41)) -> x2 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x4 x40 x41 = x3 (x1 x40 x41) x2)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x5 x40 x41 = add_SNo (x4 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> x10 x40 = add_SNo (add_SNo x40 x40) x40) -> x11 = 2 -> (forall x40, x40 :e int -> x12 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x14 x40 = x13 x11 (x12 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (x9 x40 x41) (x14 x40))) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x41 x41) x41)))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (mul_SNo 2 (add_SNo x40 x40)))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_77ca603abff60ef59c3d08ae8d320ca5d7d93b6aaa511329f523b52fd16e5862 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x0 x27 x28 = add_SNo 0 (minus_SNo (mul_SNo x27 x28)))) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x1 x27 x28 = x28)) -> x2 = 1 -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x3 x27 x28 = If_i (SNoLe x27 0) x28 (x0 (x3 (add_SNo x27 (minus_SNo 1)) x28) x27))) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x4 x27 x28 = x3 (x1 x27 x28) x2)) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x5 x27 x28 = add_SNo (add_SNo (mul_SNo x27 x28) (x4 x27 x28)) x27)) -> (forall x27, x27 :e int -> x6 x27 = x27) -> x7 = 1 -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x8 x27 x28 = If_i (SNoLe x27 0) x28 (x5 (x8 (add_SNo x27 (minus_SNo 1)) x28) x27))) -> (forall x27, x27 :e int -> x9 x27 = x8 (x6 x27) x7) -> (forall x27, x27 :e int -> x10 x27 = x9 x27) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x11 x27 x28 = mul_SNo x27 x28)) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x12 x27 x28 = x28)) -> x13 = 1 -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x14 x27 x28 = If_i (SNoLe x27 0) x28 (x11 (x14 (add_SNo x27 (minus_SNo 1)) x28) x27))) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x15 x27 x28 = x14 (x12 x27 x28) x13)) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x16 x27 x28 = add_SNo (x15 x27 x28) (minus_SNo (mul_SNo (add_SNo 1 x28) x27)))) -> (forall x27, x27 :e int -> x17 x27 = x27) -> x18 = 1 -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x19 x27 x28 = If_i (SNoLe x27 0) x28 (x16 (x19 (add_SNo x27 (minus_SNo 1)) x28) x27))) -> (forall x27, x27 :e int -> x20 x27 = x19 (x17 x27) x18) -> (forall x27, x27 :e int -> x21 x27 = add_SNo 0 (minus_SNo x27)) -> (forall x27, x27 :e int -> x22 x27 = x27) -> x23 = 1 -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x24 x27 x28 = If_i (SNoLe x27 0) x28 (x21 (x24 (add_SNo x27 (minus_SNo 1)) x28)))) -> (forall x27, x27 :e int -> x25 x27 = x24 (x22 x27) x23) -> (forall x27, x27 :e int -> x26 x27 = mul_SNo (x20 x27) (x25 x27)) -> (forall x27, x27 :e int -> SNoLe 0 x27 -> x10 x27 = x26 x27)))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_48e27ea4bc17667799b74c6a5bc501f928d95c84d96e54da3b6e7a2cc1c1da1b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x0 x30 x31 = mul_SNo (add_SNo 2 x31) x30)) -> x1 = 2 -> (forall x30, x30 :e int -> x2 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x4 x30 = x3 x1 (x2 x30)) -> (forall x30, x30 :e int -> x5 x30 = x4 x30) -> (forall x30, x30 :e int -> x6 x30 = x30) -> x7 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x9 x30 = x8 (x6 x30) x7) -> (forall x30, x30 :e int -> x10 x30 = mul_SNo x30 x30) -> x11 = 2 -> (forall x30, x30 :e int -> x12 x30 = mul_SNo x30 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x13 x30 x31 = If_i (SNoLe x30 0) x31 (x10 (x13 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x14 x30 = x13 x11 (x12 x30)) -> (forall x30, x30 :e int -> x15 x30 = add_SNo (x9 x30) (minus_SNo (x14 x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x16 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x17 x30 x31 = x31)) -> (forall x30, x30 :e int -> x18 x30 = x30) -> x19 = 1 -> x20 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x21 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x16 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x17 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x23 x30 = x21 (x18 x30) x19 x20) -> (forall x30, x30 :e int -> x24 x30 = mul_SNo x30 x30) -> x25 = 2 -> (forall x30, x30 :e int -> x26 x30 = mul_SNo x30 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x27 x30 x31 = If_i (SNoLe x30 0) x31 (x24 (x27 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x28 x30 = x27 x25 (x26 x30)) -> (forall x30, x30 :e int -> x29 x30 = add_SNo (x23 x30) (minus_SNo (x28 x30))) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x15 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_54545f82aba42c7a89c7024a43f33c3bc60ef569127b5bcc99948a82f3400f8d : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 2 x21) x20)) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = add_SNo (x9 x20) (minus_SNo x20)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (x18 x20) (minus_SNo x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_3abeaa4d022fc233fd6f5cb6424f89eb406639b18fccff48c5177192e2a19078 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x0 x30 x31 = mul_SNo (add_SNo 2 x31) x30)) -> x1 = 2 -> (forall x30, x30 :e int -> x2 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x4 x30 = x3 x1 (x2 x30)) -> (forall x30, x30 :e int -> x5 x30 = add_SNo (x4 x30) (minus_SNo x30)) -> (forall x30, x30 :e int -> x6 x30 = x30) -> x7 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x9 x30 = x8 (x6 x30) x7) -> (forall x30, x30 :e int -> x10 x30 = mul_SNo x30 x30) -> x11 = 2 -> (forall x30, x30 :e int -> x12 x30 = mul_SNo (mul_SNo x30 x30) x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x13 x30 x31 = If_i (SNoLe x30 0) x31 (x10 (x13 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x14 x30 = x13 x11 (x12 x30)) -> (forall x30, x30 :e int -> x15 x30 = add_SNo (x9 x30) (minus_SNo (x14 x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x16 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x17 x30 x31 = x31)) -> (forall x30, x30 :e int -> x18 x30 = x30) -> x19 = 1 -> x20 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x21 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x16 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x17 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x23 x30 = x21 (x18 x30) x19 x20) -> (forall x30, x30 :e int -> x24 x30 = mul_SNo x30 x30) -> x25 = 2 -> (forall x30, x30 :e int -> x26 x30 = mul_SNo (mul_SNo x30 x30) x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x27 x30 x31 = If_i (SNoLe x30 0) x31 (x24 (x27 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x28 x30 = x27 x25 (x26 x30)) -> (forall x30, x30 :e int -> x29 x30 = add_SNo (x23 x30) (minus_SNo (x28 x30))) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x15 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_dbc326bad6336f65a9fe9f4deed4a142bcd0e66b3d04a288e676376cb837cf53 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = mul_SNo (add_SNo 2 x34) x33)) -> x1 = 2 -> (forall x33, x33 :e int -> x2 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x4 x33 = x3 x1 (x2 x33)) -> (forall x33, x33 :e int -> x5 x33 = add_SNo (x4 x33) (minus_SNo x33)) -> (forall x33, x33 :e int -> x6 x33 = x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x10 x33 x34 = mul_SNo (mul_SNo x33 x33) x34)) -> (forall x33, x33 :e int -> x11 x33 = x33) -> x12 = 2 -> (forall x33, x33 :e int -> x13 x33 = x33) -> (forall x33, x33 :e int -> x14 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x15 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x10 (x15 (add_SNo x33 (minus_SNo 1)) x34 x35) (x16 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x16 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x11 (x15 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x17 x33 = x15 x12 (x13 x33) (x14 x33)) -> (forall x33, x33 :e int -> x18 x33 = add_SNo (x9 x33) (minus_SNo (x17 x33))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x20 x33 x34 = x34)) -> (forall x33, x33 :e int -> x21 x33 = x33) -> x22 = 1 -> x23 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x19 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x20 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x26 x33 = x24 (x21 x33) x22 x23) -> (forall x33, x33 :e int -> x27 x33 = mul_SNo (mul_SNo x33 x33) x33) -> x28 = 1 -> (forall x33, x33 :e int -> x29 x33 = mul_SNo x33 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x31 x33 = x30 x28 (x29 x33)) -> (forall x33, x33 :e int -> x32 x33 = add_SNo (x26 x33) (minus_SNo (mul_SNo (x31 x33) x33))) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x18 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_ce345f63126b0cb077b5d2637e7367a140d8c9abd4f555a88313c68ecdb8d404 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x0 x30 x31 = mul_SNo (add_SNo 2 x31) x30)) -> x1 = 2 -> (forall x30, x30 :e int -> x2 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x4 x30 = x3 x1 (x2 x30)) -> (forall x30, x30 :e int -> x5 x30 = add_SNo (x4 x30) (minus_SNo x30)) -> (forall x30, x30 :e int -> x6 x30 = x30) -> x7 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x9 x30 = x8 (x6 x30) x7) -> (forall x30, x30 :e int -> x10 x30 = mul_SNo x30 x30) -> x11 = 2 -> (forall x30, x30 :e int -> x12 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x13 x30 x31 = If_i (SNoLe x30 0) x31 (x10 (x13 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x14 x30 = x13 x11 (x12 x30)) -> (forall x30, x30 :e int -> x15 x30 = add_SNo (x9 x30) (minus_SNo (mul_SNo (mul_SNo (x14 x30) x30) x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x16 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x17 x30 x31 = x31)) -> (forall x30, x30 :e int -> x18 x30 = x30) -> x19 = 1 -> x20 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x21 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x16 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x17 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x23 x30 = x21 (x18 x30) x19 x20) -> (forall x30, x30 :e int -> x24 x30 = mul_SNo (mul_SNo x30 x30) x30) -> x25 = 1 -> (forall x30, x30 :e int -> x26 x30 = mul_SNo x30 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x27 x30 x31 = If_i (SNoLe x30 0) x31 (x24 (x27 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x28 x30 = x27 x25 (x26 x30)) -> (forall x30, x30 :e int -> x29 x30 = add_SNo (x23 x30) (minus_SNo (x28 x30))) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x15 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_ebb31077a607f9ed6e2ce6013c23a2d73037a3fa780cc541be95c7c530f418c2 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x20 x20)) x20)) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = mul_SNo x20 x20) -> x6 = 2 -> (forall x20, x20 :e int -> x7 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 x6 (x7 x20)) -> (forall x20, x20 :e int -> x10 x20 = add_SNo (x4 x20) (minus_SNo (x9 x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (x18 x20) (minus_SNo (mul_SNo (mul_SNo (mul_SNo x20 x20) x20) x20))) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_a848a914525e3bbabffedd6fe919fb73385d38e98f516e06d511b1fde1d8d3c7 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x15 x15)) x15)) -> (forall x15, x15 :e int -> x1 x15 = x15) -> x2 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) x2) -> (forall x15, x15 :e int -> x5 x15 = add_SNo (x4 x15) (minus_SNo (mul_SNo x15 x15))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> x9 = 1 -> x10 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) x9 x10) -> (forall x15, x15 :e int -> x14 x15 = add_SNo (x13 x15) (minus_SNo (mul_SNo x15 x15))) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_08219b93cda843ebd5817753285471df6ba08ca05431dca0633a3bb6dd465761 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = add_SNo x38 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x1 x38 x39 = x39)) -> (forall x38, x38 :e int -> x2 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x4 x38 x39 = x3 (x1 x38 x39) (x2 x38))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x5 x38 x39 = add_SNo 1 (x4 x38 x39))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x6 x38 x39 = x39)) -> x7 = 2 -> x8 = 1 -> (forall x38, x38 :e int -> x9 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x10 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x5 (x10 (add_SNo x38 (minus_SNo 1)) x39 x40) (x11 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x11 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x6 (x10 (add_SNo x38 (minus_SNo 1)) x39 x40) (x11 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x12 x38 = x10 x7 x8 (x9 x38)) -> (forall x38, x38 :e int -> x13 x38 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x38 x38) x38)) x38) -> (forall x38, x38 :e int -> x14 x38 = x38) -> x15 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x16 x38 x39 = If_i (SNoLe x38 0) x39 (x13 (x16 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x17 x38 = x16 (x14 x38) x15) -> (forall x38, x38 :e int -> x18 x38 = mul_SNo (x12 x38) (add_SNo 1 (x17 x38))) -> (forall x38, x38 :e int -> x19 x38 = add_SNo (mul_SNo x38 x38) x38) -> x20 = 1 -> (forall x38, x38 :e int -> x21 x38 = add_SNo x38 x38) -> (forall x38, x38 :e int -> x22 x38 = x38) -> x23 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x24 x38 x39 = If_i (SNoLe x38 0) x39 (x21 (x24 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x25 x38 = x24 (x22 x38) x23) -> (forall x38, x38 :e int -> x26 x38 = x25 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = If_i (SNoLe x38 0) x39 (x19 (x27 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x28 x38 = x27 x20 (x26 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = x39)) -> (forall x38, x38 :e int -> x31 x38 = x38) -> x32 = 1 -> x33 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x34 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x29 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x35 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x30 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x36 x38 = x34 (x31 x38) x32 x33) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (add_SNo 1 (x28 x38)) (add_SNo 1 (x36 x38))) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x18 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_434f7cf347fd1ad53965dcdd1e2be50da5f95021531339e82a32bc93960eebb9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo (add_SNo x15 x15) x15) -> (forall x15, x15 :e int -> x1 x15 = add_SNo x15 x15) -> x2 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) x2) -> (forall x15, x15 :e int -> x5 x15 = add_SNo (x4 x15) (minus_SNo x15)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> x9 = 1 -> x10 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) x9 x10) -> (forall x15, x15 :e int -> x14 x15 = add_SNo (x13 x15) (minus_SNo x15)) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_0c59aa43e639c36bbf3f5aa633d25981fcda81236bcc7e10832532099822f867 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> x0 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x1 x30 = x30) -> x2 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x4 x30 = x3 (x1 x30) x2) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x5 x30 x31 = mul_SNo (add_SNo 2 x31) x30)) -> x6 = 2 -> (forall x30, x30 :e int -> x7 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x9 x30 = x8 x6 (x7 x30)) -> (forall x30, x30 :e int -> x10 x30 = add_SNo (x9 x30) (minus_SNo x30)) -> (forall x30, x30 :e int -> x11 x30 = x30) -> x12 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x13 x30 x31 = If_i (SNoLe x30 0) x31 (x10 (x13 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x14 x30 = x13 (x11 x30) x12) -> (forall x30, x30 :e int -> x15 x30 = mul_SNo (add_SNo 1 (x4 x30)) (add_SNo 1 (x14 x30))) -> (forall x30, x30 :e int -> x16 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x17 x30 = x30) -> x18 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x19 x30 x31 = If_i (SNoLe x30 0) x31 (x16 (x19 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x20 x30 = x19 (x17 x30) x18) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x21 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x22 x30 x31 = x31)) -> (forall x30, x30 :e int -> x23 x30 = x30) -> x24 = 1 -> x25 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x26 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x21 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x27 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x22 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x28 x30 = x26 (x23 x30) x24 x25) -> (forall x30, x30 :e int -> x29 x30 = mul_SNo (add_SNo 1 (x20 x30)) (add_SNo 1 (x28 x30))) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x15 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c2f62836b9fb6ca4f5cd71dc7b0331dd680db0c0f7fa943367a2b0d4fb3c96d3 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo (add_SNo x17 x17) x17) -> x2 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = add_SNo (x4 x17) (minus_SNo (mul_SNo (mul_SNo x17 x17) x17))) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo (mul_SNo x17 x17) x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = add_SNo (x15 x17) (minus_SNo (mul_SNo (mul_SNo x17 x17) x17))) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_c6e994630c67adf0615f42fd89eb6f06f99f517e5720cf36efdb11cd5775a7bb : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo (add_SNo x17 x17) x17) -> x2 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = add_SNo (x4 x17) (minus_SNo 1)) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo (mul_SNo x17 x17) x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = add_SNo (x15 x17) (minus_SNo 1)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_94beb842d5f313087d857d31d34ed811f4d3a3c1eefce556bfed6e7eaa80907a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x25 x25) x25)) x25) -> (forall x25, x25 :e int -> x1 x25 = x25) -> x2 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x4 x25 = x3 (x1 x25) x2) -> (forall x25, x25 :e int -> x5 x25 = mul_SNo (mul_SNo x25 x25) x25) -> x6 = 2 -> (forall x25, x25 :e int -> x7 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 x6 (x7 x25)) -> (forall x25, x25 :e int -> x10 x25 = add_SNo (x4 x25) (minus_SNo (mul_SNo (mul_SNo (x9 x25) x25) x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = x26)) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 1 -> x15 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x18 x25 = x16 (x13 x25) x14 x15) -> (forall x25, x25 :e int -> x19 x25 = mul_SNo (mul_SNo x25 x25) x25) -> x20 = 1 -> (forall x25, x25 :e int -> x21 x25 = mul_SNo (mul_SNo x25 x25) x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 x20 (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (x18 x25) (minus_SNo (mul_SNo (mul_SNo (x23 x25) x25) x25))) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
