Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
Theorem missingprop_2050bd1e73338bdd1bbd6191504c9602be19803397a408617d40018d1c1ab280 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = x23)) -> (forall x22, x22 :e int -> x2 x22 = x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) (x2 x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (mul_SNo x22 x23) (x4 x22 x23))) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> x11 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = add_SNo x23 (minus_SNo 1))) -> x13 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) x13)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = mul_SNo (add_SNo (x15 x22 x23) x23) x22)) -> (forall x22, x22 :e int -> x17 x22 = x22) -> x18 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) x18) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_94929d0029f3e1c97a8e795b964de070d088fe27016bb4a5734be9c1dafa0a46 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x0 x31 x32 = add_SNo (mul_SNo 2 (mul_SNo x31 x32)) (minus_SNo x31))) -> (forall x31, x31 :e int -> x1 x31 = x31) -> x2 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x3 x31 x32 = If_i (SNoLe x31 0) x32 (x0 (x3 (add_SNo x31 (minus_SNo 1)) x32) x31))) -> (forall x31, x31 :e int -> x4 x31 = x3 (x1 x31) x2) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x5 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x6 x31 x32 = x32)) -> (forall x31, x31 :e int -> x7 x31 = x31) -> x8 = 1 -> (forall x31, x31 :e int -> x9 x31 = add_SNo 2 (mul_SNo 2 (add_SNo x31 x31))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x10 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x5 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x11 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x6 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x12 x31 = x10 (x7 x31) x8 (x9 x31)) -> (forall x31, x31 :e int -> x13 x31 = mul_SNo (x4 x31) (x12 x31)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x15 x31 x32 = x32)) -> (forall x31, x31 :e int -> x16 x31 = add_SNo x31 (minus_SNo 1)) -> x17 = 1 -> (forall x31, x31 :e int -> x18 x31 = add_SNo 1 (add_SNo x31 x31)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) x17 (x18 x31)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x23 x31 x32 = add_SNo 1 x32)) -> (forall x31, x31 :e int -> x24 x31 = x31) -> x25 = 1 -> (forall x31, x31 :e int -> x26 x31 = add_SNo 1 x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) x25 (x26 x31)) -> (forall x31, x31 :e int -> x30 x31 = mul_SNo (mul_SNo (add_SNo 1 (add_SNo x31 x31)) (x21 x31)) (x29 x31)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_d87b21f1d3ae72a262ff28bdaeb5891e3596c0a3810d1b18d2132322ae0cf433 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = x23)) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) x2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = mul_SNo (add_SNo (x4 x22 x23) x22) (add_SNo 2 x23))) -> (forall x22, x22 :e int -> x6 x22 = add_SNo 1 x22) -> x7 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = x23)) -> x13 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) x13)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (mul_SNo (add_SNo (x15 x22 x23) x22) (add_SNo 1 x23)) x22)) -> (forall x22, x22 :e int -> x17 x22 = x22) -> x18 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) x18) -> (forall x22, x22 :e int -> x21 x22 = mul_SNo (x20 x22) (add_SNo 1 (add_SNo 2 x22))) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_73d93d513a17c5129cc854a32eacd2a2cd36b8c2a609ea4e06f9ddc4cc50d5d9 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo (mul_SNo (add_SNo x18 x19) (mul_SNo x19 x19)) x18)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x1 x18 x19 = x19)) -> (forall x18, x18 :e int -> x2 x18 = x18) -> x3 = 2 -> x4 = add_SNo 1 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) x3 x4) -> (forall x18, x18 :e int -> x8 x18 = x7 x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = mul_SNo x18 x19)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x10 x18 x19 = x19)) -> (forall x18, x18 :e int -> x11 x18 = add_SNo x18 (minus_SNo 1)) -> x12 = 1 -> x13 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) x12 x13) -> (forall x18, x18 :e int -> x17 x18 = add_SNo (mul_SNo (x16 x18) (mul_SNo (If_i (SNoLe x18 0) 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) (add_SNo 1 (add_SNo 2 2)))) (minus_SNo (add_SNo 1 2))) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_725fcba7f65fc077a4550176ad9a1f7123ece5fc2c7c98ddd966cf82c5328376 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = add_SNo (mul_SNo (add_SNo x23 x24) x24) x23)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x1 x23 x24 = x24)) -> (forall x23, x23 :e int -> x2 x23 = add_SNo (mul_SNo x23 2) 2) -> x3 = 2 -> x4 = add_SNo (mul_SNo (mul_SNo 2 2) 2) 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) x3 x4) -> (forall x23, x23 :e int -> x8 x23 = add_SNo (x7 x23) (minus_SNo 2)) -> (forall x23, x23 :e int -> x9 x23 = mul_SNo x23 x23) -> x10 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x11 x23 x24 = mul_SNo x23 x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x12 x23 x24 = x24)) -> (forall x23, x23 :e int -> x13 x23 = add_SNo 1 x23) -> x14 = 1 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x16 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x11 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25) (x17 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x17 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x12 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25) (x17 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x18 x23 = x16 (x13 x23) x14 x15) -> (forall x23, x23 :e int -> x19 x23 = x18 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x20 x23 x24 = If_i (SNoLe x23 0) x24 (x9 (x20 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x21 x23 = x20 x10 (x19 x23)) -> (forall x23, x23 :e int -> x22 x23 = mul_SNo (add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) (add_SNo (x21 x23) (minus_SNo 1))) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_c2dcd087e695ad359e1e8c0ee0815ab67f26847fd5537df027c808556b3803f2 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = add_SNo x24 x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x1 x23 x24 = mul_SNo 2 (add_SNo x23 x24))) -> (forall x23, x23 :e int -> x2 x23 = x23) -> x3 = 2 -> x4 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) x3 x4) -> (forall x23, x23 :e int -> x8 x23 = add_SNo (x7 x23) (minus_SNo 1)) -> (forall x23, x23 :e int -> x9 x23 = add_SNo x23 x23) -> (forall x23, x23 :e int -> x10 x23 = add_SNo x23 (minus_SNo 1)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x11 x23 x24 = add_SNo x23 x24)) -> (forall x23, x23 :e int -> x12 x23 = x23) -> (forall x23, x23 :e int -> x13 x23 = add_SNo x23 (minus_SNo 1)) -> x14 = 1 -> x15 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x16 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x11 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25) (x17 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x17 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x12 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x18 x23 = x16 (x13 x23) x14 x15) -> (forall x23, x23 :e int -> x19 x23 = x18 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x20 x23 x24 = If_i (SNoLe x23 0) x24 (x9 (x20 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x21 x23 = x20 (x10 x23) (x19 x23)) -> (forall x23, x23 :e int -> x22 x23 = add_SNo (mul_SNo 2 (x21 x23)) (minus_SNo 1)) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_454089816e480cd723bd6a4f7c518c431e0b92a686c0c601bdea708d6fd754d0 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo (add_SNo (add_SNo (mul_SNo (mul_SNo x19 x19) x19) x18) x18) x18)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x1 x18 x19 = add_SNo x19 x19)) -> (forall x18, x18 :e int -> x2 x18 = add_SNo 1 x18) -> x3 = 0 -> x4 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) x3 x4) -> (forall x18, x18 :e int -> x8 x18 = x7 x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo (mul_SNo x19 x19) x19) x18)) x18)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x10 x18 x19 = add_SNo x19 x19)) -> (forall x18, x18 :e int -> x11 x18 = x18) -> x12 = 2 -> x13 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) x12 x13) -> (forall x18, x18 :e int -> x17 x18 = mul_SNo (mul_SNo (x16 x18) 2) 2) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_3199350e4d6d843f33d264be5883e17044eb41fa7eb59a9c97cdb5362c69779f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x2 x17 = add_SNo 1 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) (x2 x17)) -> (forall x17, x17 :e int -> x5 x17 = mul_SNo (add_SNo 1 (add_SNo 2 (add_SNo x17 x17))) (x4 x17)) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (add_SNo 1 (add_SNo 2 (add_SNo x17 x17))) (mul_SNo (add_SNo 1 x17) (x15 x17))) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_f47bc8a0ce47665bcbacb8ddb3df2c7c2dac101816dc0f213c734e93068e8d33 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo (add_SNo x17 (minus_SNo 2)) x17) -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) (x2 x17)) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = add_SNo x17 (minus_SNo 1)) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (x15 x17) x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_5d23e0d1097a21dc27bcaf8753e4d8c153215c031bdf110c36fa5b0eb748b178 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo 2 (add_SNo (mul_SNo 2 (mul_SNo x20 x21)) (minus_SNo x20)))) -> (forall x20, x20 :e int -> x1 x20 = x20) -> (forall x20, x20 :e int -> x2 x20 = add_SNo 1 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = add_SNo x20 x20) -> (forall x20, x20 :e int -> x7 x20 = x20) -> (forall x20, x20 :e int -> x8 x20 = add_SNo 1 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x9 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x10 x20 = x9 (x7 x20) (x8 x20)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo 2 x21)) -> (forall x20, x20 :e int -> x13 x20 = add_SNo x20 (minus_SNo 1)) -> x14 = 1 -> x15 = add_SNo 1 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (x10 x20) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_6e62ca5980bfb681bc46130ee2d7dc4254fcf0d2ca7a5ee067c0f2bda9c4d7bc : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = mul_SNo (add_SNo 2 x26) x25)) -> x1 = add_SNo 1 2 -> (forall x25, x25 :e int -> x2 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x4 x25 = x3 x1 (x2 x25)) -> (forall x25, x25 :e int -> x5 x25 = add_SNo 1 (x4 x25)) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = add_SNo 1 (mul_SNo x25 x26))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = x26)) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 1 -> (forall x25, x25 :e int -> x15 x25 = add_SNo (mul_SNo (mul_SNo x25 x25) x25) (minus_SNo x25)) -> x16 = 1 -> x17 = add_SNo 2 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x18 x25 x26 = If_i (SNoLe x25 0) x26 (x15 (x18 (add_SNo x25 (minus_SNo 1)) x26)))) -> x19 = x18 x16 x17 -> x20 = x19 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x13 x25) x14 x20) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_39ba8769eeb2cf493934d6f9e42b7027ab37ff99683865d5b587e332ab4f3258 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 2 x21) x20)) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = add_SNo (add_SNo (x4 x20) (minus_SNo 1)) (minus_SNo x20)) -> (forall x20, x20 :e int -> x6 x20 = add_SNo 1 x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = add_SNo (x9 x20) (minus_SNo 1)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 1 (mul_SNo x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (add_SNo 1 (mul_SNo 2 (add_SNo 2 2))) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_fd5fcb051d94532d66cd97626cb6f3f9cabebbb7525157fc79916564879473be : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo 2 (minus_SNo (mul_SNo 2 (add_SNo x20 x20)))) -> x1 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x2 x20 x21 = x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x4 x20 x21 = x3 x1 (x2 x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x5 x20 x21 = mul_SNo (x4 x20 x21) x20)) -> (forall x20, x20 :e int -> x6 x20 = add_SNo 1 x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) x21)) -> (forall x20, x20 :e int -> x13 x20 = add_SNo 1 x20) -> x14 = 1 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_799365d6aea2608d91362fb244830c83edddce351daa835033ebba12d4c33fdd : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = add_SNo x23 x24)) -> (forall x23, x23 :e int -> x1 x23 = x23) -> (forall x23, x23 :e int -> x2 x23 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo 2 x23)) x23)) -> x3 = 1 -> x4 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) x3 x4) -> (forall x23, x23 :e int -> x8 x23 = x7 x23) -> (forall x23, x23 :e int -> x9 x23 = mul_SNo (add_SNo (add_SNo 1 2) (mul_SNo x23 x23)) x23) -> x10 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x11 x23 x24 = add_SNo (add_SNo (add_SNo x23 (minus_SNo x24)) x23) x23)) -> (forall x23, x23 :e int -> x12 x23 = x23) -> (forall x23, x23 :e int -> x13 x23 = x23) -> x14 = add_SNo 2 2 -> x15 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x16 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x11 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25) (x17 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x17 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x12 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x18 x23 = x16 (x13 x23) x14 x15) -> (forall x23, x23 :e int -> x19 x23 = x18 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x20 x23 x24 = If_i (SNoLe x23 0) x24 (x9 (x20 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x21 x23 = x20 x10 (x19 x23)) -> (forall x23, x23 :e int -> x22 x23 = x21 x23) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_f0f2e4d3bf3df0acdfc01832b024f6fc18b5282991aee7ccddced55a7932eab1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 2 x21) x20)) -> (forall x20, x20 :e int -> x1 x20 = add_SNo x20 x20) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x6 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> x7 x20 = x20) -> (forall x20, x20 :e int -> x8 x20 = add_SNo 1 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x9 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x10 x20 = x9 (x7 x20) (x8 x20)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo 1 x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> (forall x20, x20 :e int -> x15 x20 = add_SNo 1 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 (x15 x20)) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (mul_SNo (add_SNo 1 (add_SNo x20 x20)) (x10 x20)) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_fd0df64631a100497e065f25c5bf80d25b1b394f9fd6ebcf6f7eeea6ae66501e : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x0 x48 x49 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x48 x48) x48)) (mul_SNo (mul_SNo x49 x49) x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x1 x48 x49 = add_SNo x49 x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x2 x48 x49 = x49)) -> x3 = 1 -> x4 = 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x5 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x0 (x5 (add_SNo x48 (minus_SNo 1)) x49 x50) (x6 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x6 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x1 (x5 (add_SNo x48 (minus_SNo 1)) x49 x50) (x6 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x7 x48 x49 = x5 (x2 x48 x49) x3 x4)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x8 x48 x49 = mul_SNo (add_SNo 2 x49) x48)) -> x9 = 2 -> (forall x48, x48 :e int -> x10 x48 = x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x11 x48 x49 = If_i (SNoLe x48 0) x49 (x8 (x11 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x12 x48 = x11 x9 (x10 x48)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x13 x48 x49 = add_SNo (add_SNo (x7 x48 x49) (minus_SNo x48)) (x12 x48))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x14 x48 x49 = x49)) -> x15 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x16 x48 x49 = If_i (SNoLe x48 0) x49 (x13 (x16 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x17 x48 x49 = x16 (x14 x48 x49) x15)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x18 x48 x49 = add_SNo (add_SNo (x17 x48 x49) x48) x48)) -> (forall x48, x48 :e int -> x19 x48 = x48) -> x20 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x21 x48 x49 = If_i (SNoLe x48 0) x49 (x18 (x21 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x22 x48 = x21 (x19 x48) x20) -> (forall x48, x48 :e int -> x23 x48 = x22 x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x24 x48 x49 = add_SNo (mul_SNo 2 (add_SNo x48 x48)) x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x25 x48 x49 = add_SNo 1 (add_SNo (add_SNo x49 x49) x49))) -> (forall x48, x48 :e int -> x26 x48 = x48) -> x27 = 1 -> x28 = add_SNo 2 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x29 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x24 (x29 (add_SNo x48 (minus_SNo 1)) x49 x50) (x30 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x30 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x25 (x29 (add_SNo x48 (minus_SNo 1)) x49 x50) (x30 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x31 x48 = x29 (x26 x48) x27 x28) -> (forall x48, x48 :e int -> x32 x48 = add_SNo x48 x48) -> (forall x48, x48 :e int -> x33 x48 = x48) -> x34 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x35 x48 x49 = If_i (SNoLe x48 0) x49 (x32 (x35 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x36 x48 = x35 (x33 x48) x34) -> (forall x48, x48 :e int -> x37 x48 = mul_SNo (x31 x48) (x36 x48)) -> x38 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x39 x48 x49 = x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x40 x48 x49 = If_i (SNoLe x48 0) x49 (x37 (x40 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x41 x48 x49 = x40 x38 (x39 x48 x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x42 x48 x49 = add_SNo (add_SNo (x41 x48 x49) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x48 x48)) x48))) x48)) -> (forall x48, x48 :e int -> x43 x48 = x48) -> x44 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x45 x48 x49 = If_i (SNoLe x48 0) x49 (x42 (x45 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x46 x48 = x45 (x43 x48) x44) -> (forall x48, x48 :e int -> x47 x48 = x46 x48) -> (forall x48, x48 :e int -> SNoLe 0 x48 -> x23 x48 = x47 x48))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c1a27ee3aa119e1f42d3194c31927cd309dc88d96bc4eebfd79cf9a247203075 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo 2 (add_SNo (mul_SNo x20 x21) x20))) -> (forall x20, x20 :e int -> x1 x20 = add_SNo x20 x20) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x6 x20 x21 = mul_SNo 2 (mul_SNo 2 (mul_SNo x20 x21)))) -> (forall x20, x20 :e int -> x7 x20 = x20) -> (forall x20, x20 :e int -> x8 x20 = add_SNo 1 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x9 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x10 x20 = x9 (x7 x20) (x8 x20)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo 1 x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> (forall x20, x20 :e int -> x15 x20 = add_SNo 2 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 (x15 x20)) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (x10 x20) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_50810f0f04bde0dbaa325f6f802a552e2060b8c2a4be3dc1a3e38129a770d69e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = mul_SNo 2 (add_SNo (add_SNo x50 x50) x50)) -> (forall x50, x50 :e int -> x1 x50 = x50) -> (forall x50, x50 :e int -> x2 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x3 x50 = x50) -> x4 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x5 x50 x51 = If_i (SNoLe x50 0) x51 (x2 (x5 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x6 x50 = x5 (x3 x50) x4) -> (forall x50, x50 :e int -> x7 x50 = add_SNo (x6 x50) (minus_SNo 1)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x8 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x9 x50 = x8 (x1 x50) (x7 x50)) -> (forall x50, x50 :e int -> x10 x50 = x9 x50) -> x11 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x12 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x14 x50 x51 = x13 x11 (x12 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = add_SNo (add_SNo (x14 x50 x51) (mul_SNo 2 (add_SNo (add_SNo x50 x50) x50))) x50)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x16 x50 x51 = x51)) -> x17 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x19 x50 x51 = x18 (x16 x50 x51) x17)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x20 x50 x51 = add_SNo (add_SNo (x19 x50 x51) x50) x50)) -> (forall x50, x50 :e int -> x21 x50 = x50) -> x22 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x23 x50 x51 = If_i (SNoLe x50 0) x51 (x20 (x23 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x24 x50 = x23 (x21 x50) x22) -> (forall x50, x50 :e int -> x25 x50 = x24 x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x26 x50 x51 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x50 x50) x50)) x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x27 x50 x51 = add_SNo 1 (add_SNo (add_SNo x51 x51) x51))) -> (forall x50, x50 :e int -> x28 x50 = x50) -> x29 = 1 -> x30 = add_SNo 2 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x31 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x26 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x32 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x27 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> x33 x50 = x31 (x28 x50) x29 x30) -> (forall x50, x50 :e int -> x34 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x35 x50 = x50) -> x36 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x37 x50 x51 = If_i (SNoLe x50 0) x51 (x34 (x37 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x38 x50 = x37 (x35 x50) x36) -> (forall x50, x50 :e int -> x39 x50 = mul_SNo (x33 x50) (x38 x50)) -> x40 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x41 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x43 x50 x51 = x42 x40 (x41 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x44 x50 x51 = add_SNo (add_SNo (x43 x50 x51) (mul_SNo 2 (add_SNo (add_SNo x50 x50) x50))) x50)) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = x48 x50) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x25 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_0c917fc3ba15dbdc74b0ade1cbd16b37b9d7ad36fc4144b76838b12b8c97f8c4 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x0 x43 x44 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43)) (mul_SNo (mul_SNo x44 x44) x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x1 x43 x44 = add_SNo x44 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x2 x43 x44 = x44)) -> x3 = 1 -> x4 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x5 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x0 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x6 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x1 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x7 x43 x44 = x5 (x2 x43 x44) x3 x4)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x8 x43 x44 = add_SNo (add_SNo (x7 x43 x44) (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43))) x43)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x9 x43 x44 = x44)) -> x10 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x11 x43 x44 = If_i (SNoLe x43 0) x44 (x8 (x11 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x12 x43 x44 = x11 (x9 x43 x44) x10)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x13 x43 x44 = add_SNo (add_SNo (x12 x43 x44) x43) x43)) -> (forall x43, x43 :e int -> x14 x43 = x43) -> x15 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x16 x43 x44 = If_i (SNoLe x43 0) x44 (x13 (x16 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x17 x43 = x16 (x14 x43) x15) -> (forall x43, x43 :e int -> x18 x43 = x17 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x19 x43 x44 = add_SNo (mul_SNo 2 (add_SNo x43 x43)) x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x20 x43 x44 = add_SNo 1 (add_SNo (add_SNo x44 x44) x44))) -> (forall x43, x43 :e int -> x21 x43 = x43) -> x22 = 1 -> x23 = add_SNo 2 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x24 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x19 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x25 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x20 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x26 x43 = x24 (x21 x43) x22 x23) -> (forall x43, x43 :e int -> x27 x43 = add_SNo x43 x43) -> (forall x43, x43 :e int -> x28 x43 = x43) -> x29 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x30 x43 x44 = If_i (SNoLe x43 0) x44 (x27 (x30 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x31 x43 = x30 (x28 x43) x29) -> (forall x43, x43 :e int -> x32 x43 = mul_SNo (x26 x43) (x31 x43)) -> x33 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x34 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x35 x43 x44 = If_i (SNoLe x43 0) x44 (x32 (x35 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x36 x43 x44 = x35 x33 (x34 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x37 x43 x44 = add_SNo (add_SNo (x36 x43 x44) (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43))) x43)) -> (forall x43, x43 :e int -> x38 x43 = x43) -> x39 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x37 (x40 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x41 x43 = x40 (x38 x43) x39) -> (forall x43, x43 :e int -> x42 x43 = x41 x43) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x18 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b90a4c87d2696af3c7a27dc3328a459b27daf293bfa7d626aa0dd15d0250eaf9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo (mul_SNo x28 x28) x28) -> x1 = 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> x5 x28 = add_SNo (mul_SNo x4 x28) (minus_SNo x28)) -> (forall x28, x28 :e int -> x6 x28 = add_SNo 1 (add_SNo x28 x28)) -> x7 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = If_i (SNoLe x28 0) x29 (x5 (x8 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x9 x28 = x8 (x6 x28) x7) -> (forall x28, x28 :e int -> x10 x28 = x9 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x12 x28 x29 = x29)) -> (forall x28, x28 :e int -> x13 x28 = add_SNo 1 x28) -> x14 = 1 -> x15 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x16 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x11 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x17 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x12 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x18 x28 = x16 (x13 x28) x14 x15) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x10 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
