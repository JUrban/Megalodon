Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
Theorem missingprop_b12f199d09f1a4b2abab13933481f2d2cd8321246548043703b8027115a316bb : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo (add_SNo (mul_SNo (add_SNo (add_SNo x29 (minus_SNo 1)) x29) (mul_SNo x29 x29)) x28) (mul_SNo 2 (add_SNo x28 x28)))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = add_SNo x29 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = x29)) -> x3 = 1 -> x4 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x7 x28 x29 = x5 (x2 x28 x29) x3 x4)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = add_SNo (add_SNo (add_SNo (x7 x28 x29) x28) x28) x28)) -> (forall x28, x28 :e int -> x9 x28 = x28) -> x10 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo (add_SNo (add_SNo (mul_SNo (add_SNo (add_SNo x29 (minus_SNo 1)) x29) (mul_SNo x29 x29)) x28) x28) x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x15 x28 x29 = add_SNo x29 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = x29)) -> x17 = 1 -> x18 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x21 x28 x29 = x19 (x16 x28 x29) x17 x18)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = add_SNo (add_SNo (x21 x28 x29) (mul_SNo 2 (add_SNo x28 x28))) x28)) -> (forall x28, x28 :e int -> x23 x28 = x28) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_22b22add19b49cc74af529f81c5403ad4e35a9511a02eade1403f67ec2842425 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x0 x45 x46 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45)) (mul_SNo x46 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x1 x45 x46 = add_SNo x46 x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x2 x45 x46 = x46)) -> x3 = 1 -> x4 = 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x5 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x0 (x5 (add_SNo x45 (minus_SNo 1)) x46 x47) (x6 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x6 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x1 (x5 (add_SNo x45 (minus_SNo 1)) x46 x47) (x6 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x7 x45 x46 = x5 (x2 x45 x46) x3 x4)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = add_SNo (add_SNo (x7 x45 x46) (mul_SNo 2 (add_SNo x45 x45))) x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x46)) -> x10 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x11 x45 x46 = If_i (SNoLe x45 0) x46 (x8 (x11 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x12 x45 x46 = x11 (x9 x45 x46) x10)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = add_SNo (add_SNo (add_SNo (x12 x45 x46) x45) x45) x45)) -> (forall x45, x45 :e int -> x14 x45 = x45) -> x15 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x16 x45 x46 = If_i (SNoLe x45 0) x46 (x13 (x16 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x17 x45 = x16 (x14 x45) x15) -> (forall x45, x45 :e int -> x18 x45 = x17 x45) -> (forall x45, x45 :e int -> x19 x45 = add_SNo (add_SNo x45 x45) x45) -> (forall x45, x45 :e int -> x20 x45 = x45) -> (forall x45, x45 :e int -> x21 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x22 x45 = x45) -> x23 = 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x24 x45 x46 = If_i (SNoLe x45 0) x46 (x21 (x24 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x25 x45 = x24 (x22 x45) x23) -> (forall x45, x45 :e int -> x26 x45 = add_SNo (x25 x45) (minus_SNo 1)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x27 x45 x46 = If_i (SNoLe x45 0) x46 (x19 (x27 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x28 x45 = x27 (x20 x45) (x26 x45)) -> (forall x45, x45 :e int -> x29 x45 = x28 x45) -> x30 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x31 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x45 x46 = If_i (SNoLe x45 0) x46 (x29 (x32 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x33 x45 x46 = x32 x30 (x31 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x34 x45 x46 = add_SNo (x33 x45 x46) (mul_SNo 2 (add_SNo x45 x45)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x35 x45 x46 = x46)) -> x36 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x38 x45 x46 = x37 (x35 x45 x46) x36)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (add_SNo (x38 x45 x46) (mul_SNo 2 (add_SNo x45 x45))) x45)) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x18 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f4633c1e501f6bd5ff40c703184a07534d7aca4d148884ad8431bacdaf5eee8e : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19, x19 :e int -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set -> set, (forall x47, x47 :e int -> (forall x48, x48 :e int -> x46 x47 x48 :e int)) -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49, x49 :e int -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set, (forall x52, x52 :e int -> x51 x52 :e int) -> (forall x52 : set -> set, (forall x53, x53 :e int -> x52 x53 :e int) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x0 x53 x54 = mul_SNo (add_SNo 2 x54) x53)) -> x1 = 2 -> (forall x53, x53 :e int -> x2 x53 = x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x3 x53 x54 = If_i (SNoLe x53 0) x54 (x0 (x3 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x4 x53 = x3 x1 (x2 x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x5 x53 x54 = add_SNo (add_SNo (x4 x53) (minus_SNo x53)) x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x6 x53 x54 = add_SNo x54 x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x7 x53 x54 = x54)) -> x8 = 1 -> x9 = 2 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x10 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x5 (x10 (add_SNo x53 (minus_SNo 1)) x54 x55) (x11 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x11 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x6 (x10 (add_SNo x53 (minus_SNo 1)) x54 x55) (x11 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x12 x53 x54 = x10 (x7 x53 x54) x8 x9)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x13 x53 x54 = add_SNo (x12 x53 x54) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x53 x53)) x53)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x14 x53 x54 = x54)) -> x15 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x16 x53 x54 = If_i (SNoLe x53 0) x54 (x13 (x16 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x17 x53 x54 = x16 (x14 x53 x54) x15)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x18 x53 x54 = mul_SNo (add_SNo 2 x54) x53)) -> x19 = 2 -> (forall x53, x53 :e int -> x20 x53 = x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x21 x53 x54 = If_i (SNoLe x53 0) x54 (x18 (x21 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x22 x53 = x21 x19 (x20 x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x23 x53 x54 = add_SNo (x17 x53 x54) (x22 x53))) -> (forall x53, x53 :e int -> x24 x53 = x53) -> x25 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x26 x53 x54 = If_i (SNoLe x53 0) x54 (x23 (x26 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x27 x53 = x26 (x24 x53) x25) -> (forall x53, x53 :e int -> x28 x53 = x27 x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x29 x53 x54 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x53 x53) x53)) x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x30 x53 x54 = add_SNo 1 (add_SNo (mul_SNo 2 (add_SNo x54 x54)) x54))) -> (forall x53, x53 :e int -> x31 x53 = x53) -> x32 = 1 -> x33 = add_SNo 2 (add_SNo 2 2) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x34 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x29 (x34 (add_SNo x53 (minus_SNo 1)) x54 x55) (x35 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x35 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x30 (x34 (add_SNo x53 (minus_SNo 1)) x54 x55) (x35 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> x36 x53 = x34 (x31 x53) x32 x33) -> (forall x53, x53 :e int -> x37 x53 = add_SNo x53 x53) -> (forall x53, x53 :e int -> x38 x53 = x53) -> x39 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x40 x53 x54 = If_i (SNoLe x53 0) x54 (x37 (x40 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x41 x53 = x40 (x38 x53) x39) -> (forall x53, x53 :e int -> x42 x53 = mul_SNo (x36 x53) (x41 x53)) -> x43 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x44 x53 x54 = x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x45 x53 x54 = If_i (SNoLe x53 0) x54 (x42 (x45 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x46 x53 x54 = x45 x43 (x44 x53 x54))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x47 x53 x54 = add_SNo (add_SNo (x46 x53 x54) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x53 x53)) x53))) x53)) -> (forall x53, x53 :e int -> x48 x53 = x53) -> x49 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x50 x53 x54 = If_i (SNoLe x53 0) x54 (x47 (x50 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x51 x53 = x50 (x48 x53) x49) -> (forall x53, x53 :e int -> x52 x53 = x51 x53) -> (forall x53, x53 :e int -> SNoLe 0 x53 -> x28 x53 = x52 x53)))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_00e401029747da1df236ba1b1443ea90c26d4bdd70eaf6a970a283dd5e24d001 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = add_SNo (add_SNo x50 x50) x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x1 x50 x51 = add_SNo x51 x51)) -> x2 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x3 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x3 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x4 x50 x51 = x3 (x1 x50 x51) x2)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x5 x50 x51 = add_SNo (x4 x50 x51) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x50 x50)) x50)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x6 x50 x51 = x51)) -> x7 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x5 (x8 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x9 x50 x51 = x8 (x6 x50 x51) x7)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x10 x50 x51 = mul_SNo (add_SNo 2 x51) x50)) -> x11 = 2 -> (forall x50, x50 :e int -> x12 x50 = x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x14 x50 = x13 x11 (x12 x50)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = add_SNo (x9 x50 x51) (x14 x50))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x16 x50 x51 = x51)) -> x17 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x19 x50 x51 = x18 (x16 x50 x51) x17)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x20 x50 x51 = add_SNo (add_SNo (x19 x50 x51) x50) x50)) -> (forall x50, x50 :e int -> x21 x50 = x50) -> x22 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x23 x50 x51 = If_i (SNoLe x50 0) x51 (x20 (x23 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x24 x50 = x23 (x21 x50) x22) -> (forall x50, x50 :e int -> x25 x50 = x24 x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x26 x50 x51 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x50 x50) x50)) x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x27 x50 x51 = add_SNo 1 (add_SNo (mul_SNo 2 (add_SNo x51 x51)) x51))) -> (forall x50, x50 :e int -> x28 x50 = x50) -> x29 = 1 -> x30 = add_SNo 2 (add_SNo 2 2) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x31 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x26 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x32 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x27 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> x33 x50 = x31 (x28 x50) x29 x30) -> (forall x50, x50 :e int -> x34 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x35 x50 = x50) -> x36 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x37 x50 x51 = If_i (SNoLe x50 0) x51 (x34 (x37 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x38 x50 = x37 (x35 x50) x36) -> (forall x50, x50 :e int -> x39 x50 = mul_SNo (x33 x50) (x38 x50)) -> x40 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x41 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x43 x50 x51 = x42 x40 (x41 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x44 x50 x51 = add_SNo (add_SNo (x43 x50 x51) (mul_SNo 2 (mul_SNo 2 (add_SNo x50 x50)))) x50)) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = x48 x50) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x25 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_06bae8026a31e1f05ad6d7325c584f670b9a189dd80cdaaac9f92b120e3f7a7d : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x1 x28 = mul_SNo x28 x28) -> (forall x28, x28 :e int -> x2 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x4 x28 = x3 (x1 x28) (x2 x28)) -> (forall x28, x28 :e int -> x5 x28 = x4 x28) -> (forall x28, x28 :e int -> x6 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x7 x28 = add_SNo (add_SNo x28 x28) (minus_SNo 1)) -> (forall x28, x28 :e int -> x8 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x9 x28 x29 = If_i (SNoLe x28 0) x29 (x6 (x9 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x10 x28 = x9 (x7 x28) (x8 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x12 x28 x29 = add_SNo x29 x29)) -> (forall x28, x28 :e int -> x13 x28 = add_SNo x28 (minus_SNo 2)) -> x14 = 1 -> x15 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x16 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x11 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x17 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x12 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x18 x28 = x16 (x13 x28) x14 x15) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = add_SNo x29 x29)) -> (forall x28, x28 :e int -> x21 x28 = add_SNo x28 (minus_SNo 1)) -> x22 = 1 -> x23 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (mul_SNo (x10 x28) (x18 x28)) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x5 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6bbc1fbf00459d7a225eca9676ba0f19e1bacef6ca672c37cdb5d2250ced8f04 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set -> set, (forall x47, x47 :e int -> (forall x48, x48 :e int -> x46 x47 x48 :e int)) -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49, x49 :e int -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set, (forall x52, x52 :e int -> x51 x52 :e int) -> (forall x52 : set -> set, (forall x53, x53 :e int -> x52 x53 :e int) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x0 x53 x54 = mul_SNo (add_SNo 2 x54) x53)) -> x1 = 2 -> (forall x53, x53 :e int -> x2 x53 = x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x3 x53 x54 = If_i (SNoLe x53 0) x54 (x0 (x3 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x4 x53 = x3 x1 (x2 x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x5 x53 x54 = add_SNo (add_SNo (x4 x53) (minus_SNo x53)) (mul_SNo (mul_SNo x54 x54) x54))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x6 x53 x54 = add_SNo x54 x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x7 x53 x54 = x54)) -> x8 = 1 -> x9 = 2 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x10 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x5 (x10 (add_SNo x53 (minus_SNo 1)) x54 x55) (x11 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x11 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x6 (x10 (add_SNo x53 (minus_SNo 1)) x54 x55) (x11 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x12 x53 x54 = x10 (x7 x53 x54) x8 x9)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x13 x53 x54 = mul_SNo (add_SNo 2 x54) x53)) -> x14 = 2 -> (forall x53, x53 :e int -> x15 x53 = x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x16 x53 x54 = If_i (SNoLe x53 0) x54 (x13 (x16 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x17 x53 = x16 x14 (x15 x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x18 x53 x54 = add_SNo (x12 x53 x54) (x17 x53))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x19 x53 x54 = x54)) -> x20 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x21 x53 x54 = If_i (SNoLe x53 0) x54 (x18 (x21 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x22 x53 x54 = x21 (x19 x53 x54) x20)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x23 x53 x54 = add_SNo (add_SNo (x22 x53 x54) x53) x53)) -> (forall x53, x53 :e int -> x24 x53 = x53) -> x25 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x26 x53 x54 = If_i (SNoLe x53 0) x54 (x23 (x26 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x27 x53 = x26 (x24 x53) x25) -> (forall x53, x53 :e int -> x28 x53 = x27 x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x29 x53 x54 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x53 x53) x53)) x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x30 x53 x54 = add_SNo 1 (mul_SNo 2 (add_SNo x54 x54)))) -> (forall x53, x53 :e int -> x31 x53 = x53) -> x32 = 1 -> x33 = add_SNo 1 (add_SNo 2 2) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x34 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x29 (x34 (add_SNo x53 (minus_SNo 1)) x54 x55) (x35 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x35 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x30 (x34 (add_SNo x53 (minus_SNo 1)) x54 x55) (x35 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> x36 x53 = x34 (x31 x53) x32 x33) -> (forall x53, x53 :e int -> x37 x53 = add_SNo x53 x53) -> (forall x53, x53 :e int -> x38 x53 = x53) -> x39 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x40 x53 x54 = If_i (SNoLe x53 0) x54 (x37 (x40 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> x41 x53 = x40 (x38 x53) x39) -> (forall x53, x53 :e int -> x42 x53 = mul_SNo (x36 x53) (x41 x53)) -> x43 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x44 x53 x54 = x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x45 x53 x54 = If_i (SNoLe x53 0) x54 (x42 (x45 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x46 x53 x54 = x45 x43 (x44 x53 x54))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x47 x53 x54 = add_SNo (add_SNo (x46 x53 x54) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x53 x53)) x53))) x53)) -> (forall x53, x53 :e int -> x48 x53 = x53) -> x49 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x50 x53 x54 = If_i (SNoLe x53 0) x54 (x47 (x50 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x51 x53 = x50 (x48 x53) x49) -> (forall x53, x53 :e int -> x52 x53 = x51 x53) -> (forall x53, x53 :e int -> SNoLe 0 x53 -> x28 x53 = x52 x53)))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_ed1a713096f8bb889b2b8c620b6e0f6700716a1c4f1a985648bcc666246eb04b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x1 x45 x46 = x46)) -> x2 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x4 x45 x46 = x3 (x1 x45 x46) x2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x5 x45 x46 = add_SNo (x4 x45 x46) (mul_SNo 2 (add_SNo x45 x45)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x6 x45 x46 = x46)) -> x7 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x8 (x6 x45 x46) x7)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = add_SNo (add_SNo (x9 x45 x46) (mul_SNo 2 (add_SNo x45 x45))) x45)) -> (forall x45, x45 :e int -> x11 x45 = x45) -> x12 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x14 x45 = x13 (x11 x45) x12) -> (forall x45, x45 :e int -> x15 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x16 x45 = x45) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x19 x45 = x18 (x16 x45) x17) -> (forall x45, x45 :e int -> x20 x45 = mul_SNo (x14 x45) (x19 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x21 x45 x46 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45)) x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x22 x45 x46 = add_SNo 1 (mul_SNo 2 (add_SNo x46 x46)))) -> (forall x45, x45 :e int -> x23 x45 = x45) -> x24 = 1 -> x25 = add_SNo 1 (add_SNo 2 2) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x26 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x21 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x27 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x22 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x28 x45 = x26 (x23 x45) x24 x25) -> (forall x45, x45 :e int -> x29 x45 = x28 x45) -> x30 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x31 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x45 x46 = If_i (SNoLe x45 0) x46 (x29 (x32 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x33 x45 x46 = x32 x30 (x31 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x34 x45 x46 = add_SNo (add_SNo (x33 x45 x46) (mul_SNo 2 (add_SNo x45 x45))) x45)) -> (forall x45, x45 :e int -> x35 x45 = x45) -> x36 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x38 x45 = x37 (x35 x45) x36) -> (forall x45, x45 :e int -> x39 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = mul_SNo (x38 x45) (x43 x45)) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x20 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f34ed0c624f3fdaf8e349c92ee7ef01eab84b68257d5e811ed93f293c1170d2f : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x0 x48 x49 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x48 x48)) x48)) (mul_SNo (mul_SNo x49 x49) x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x1 x48 x49 = add_SNo x49 x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x2 x48 x49 = x49)) -> x3 = 1 -> x4 = 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x5 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x0 (x5 (add_SNo x48 (minus_SNo 1)) x49 x50) (x6 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x6 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x1 (x5 (add_SNo x48 (minus_SNo 1)) x49 x50) (x6 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x7 x48 x49 = x5 (x2 x48 x49) x3 x4)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x8 x48 x49 = mul_SNo (add_SNo 2 x49) x48)) -> x9 = 2 -> (forall x48, x48 :e int -> x10 x48 = x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x11 x48 x49 = If_i (SNoLe x48 0) x49 (x8 (x11 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x12 x48 = x11 x9 (x10 x48)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x13 x48 x49 = add_SNo (add_SNo (x7 x48 x49) (minus_SNo x48)) (x12 x48))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x14 x48 x49 = x49)) -> x15 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x16 x48 x49 = If_i (SNoLe x48 0) x49 (x13 (x16 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x17 x48 x49 = x16 (x14 x48 x49) x15)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x18 x48 x49 = add_SNo (add_SNo (x17 x48 x49) x48) x48)) -> (forall x48, x48 :e int -> x19 x48 = x48) -> x20 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x21 x48 x49 = If_i (SNoLe x48 0) x49 (x18 (x21 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x22 x48 = x21 (x19 x48) x20) -> (forall x48, x48 :e int -> x23 x48 = x22 x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x24 x48 x49 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x48 x48)) x48) x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x25 x48 x49 = add_SNo 1 (mul_SNo 2 (add_SNo x49 x49)))) -> (forall x48, x48 :e int -> x26 x48 = x48) -> x27 = 1 -> x28 = add_SNo 1 (add_SNo 2 2) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x29 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x24 (x29 (add_SNo x48 (minus_SNo 1)) x49 x50) (x30 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x30 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x25 (x29 (add_SNo x48 (minus_SNo 1)) x49 x50) (x30 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x31 x48 = x29 (x26 x48) x27 x28) -> (forall x48, x48 :e int -> x32 x48 = add_SNo x48 x48) -> (forall x48, x48 :e int -> x33 x48 = x48) -> x34 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x35 x48 x49 = If_i (SNoLe x48 0) x49 (x32 (x35 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x36 x48 = x35 (x33 x48) x34) -> (forall x48, x48 :e int -> x37 x48 = mul_SNo (x31 x48) (x36 x48)) -> x38 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x39 x48 x49 = x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x40 x48 x49 = If_i (SNoLe x48 0) x49 (x37 (x40 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x41 x48 x49 = x40 x38 (x39 x48 x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x42 x48 x49 = add_SNo (add_SNo (x41 x48 x49) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x48 x48)) x48))) x48)) -> (forall x48, x48 :e int -> x43 x48 = x48) -> x44 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x45 x48 x49 = If_i (SNoLe x48 0) x49 (x42 (x45 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x46 x48 = x45 (x43 x48) x44) -> (forall x48, x48 :e int -> x47 x48 = x46 x48) -> (forall x48, x48 :e int -> SNoLe 0 x48 -> x23 x48 = x47 x48))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_3f388ba4db97fc6ab01ba7eb4c91225e121838cd4f303c817a29bdaa9e9669fb : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> (forall x49 : set -> set -> set, (forall x50, x50 :e int -> (forall x51, x51 :e int -> x49 x50 x51 :e int)) -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set -> set, (forall x52, x52 :e int -> (forall x53, x53 :e int -> x51 x52 x53 :e int)) -> (forall x52 : set -> set -> set, (forall x53, x53 :e int -> (forall x54, x54 :e int -> x52 x53 x54 :e int)) -> (forall x53 : set -> set, (forall x54, x54 :e int -> x53 x54 :e int) -> (forall x54, x54 :e int -> (forall x55 : set -> set -> set, (forall x56, x56 :e int -> (forall x57, x57 :e int -> x55 x56 x57 :e int)) -> (forall x56 : set -> set, (forall x57, x57 :e int -> x56 x57 :e int) -> (forall x57 : set -> set, (forall x58, x58 :e int -> x57 x58 :e int) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x0 x58 x59 = mul_SNo (add_SNo 2 x59) x58)) -> x1 = 2 -> (forall x58, x58 :e int -> x2 x58 = x58) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x3 x58 x59 = If_i (SNoLe x58 0) x59 (x0 (x3 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> x4 x58 = x3 x1 (x2 x58)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x5 x58 x59 = add_SNo (add_SNo (x4 x58) (minus_SNo x58)) x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x6 x58 x59 = add_SNo x59 x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x7 x58 x59 = x59)) -> x8 = 1 -> x9 = 2 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x10 x58 x59 x60 = If_i (SNoLe x58 0) x59 (x5 (x10 (add_SNo x58 (minus_SNo 1)) x59 x60) (x11 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x11 x58 x59 x60 = If_i (SNoLe x58 0) x60 (x6 (x10 (add_SNo x58 (minus_SNo 1)) x59 x60) (x11 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x12 x58 x59 = x10 (x7 x58 x59) x8 x9)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x13 x58 x59 = add_SNo (x12 x58 x59) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x58 x58)) x58)))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x14 x58 x59 = x59)) -> x15 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x16 x58 x59 = If_i (SNoLe x58 0) x59 (x13 (x16 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x17 x58 x59 = x16 (x14 x58 x59) x15)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x18 x58 x59 = add_SNo (add_SNo (x17 x58 x59) (mul_SNo 2 (add_SNo (add_SNo x58 x58) x58))) x58)) -> (forall x58, x58 :e int -> x19 x58 = x58) -> x20 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x21 x58 x59 = If_i (SNoLe x58 0) x59 (x18 (x21 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> x22 x58 = x21 (x19 x58) x20) -> (forall x58, x58 :e int -> x23 x58 = x22 x58) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x24 x58 x59 = add_SNo 1 (mul_SNo x58 x59))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x25 x58 x59 = x59)) -> (forall x58, x58 :e int -> x26 x58 = x58) -> x27 = 1 -> x28 = add_SNo 1 (add_SNo 2 2) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x29 x58 x59 x60 = If_i (SNoLe x58 0) x59 (x24 (x29 (add_SNo x58 (minus_SNo 1)) x59 x60) (x30 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x30 x58 x59 x60 = If_i (SNoLe x58 0) x60 (x25 (x29 (add_SNo x58 (minus_SNo 1)) x59 x60) (x30 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> x31 x58 = x29 (x26 x58) x27 x28) -> (forall x58, x58 :e int -> x32 x58 = add_SNo x58 x58) -> (forall x58, x58 :e int -> x33 x58 = x58) -> x34 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x35 x58 x59 = If_i (SNoLe x58 0) x59 (x32 (x35 (add_SNo x58 (minus_SNo 1)) x59)))) -> (forall x58, x58 :e int -> x36 x58 = x35 (x33 x58) x34) -> (forall x58, x58 :e int -> x37 x58 = mul_SNo (x31 x58) (x36 x58)) -> x38 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x39 x58 x59 = x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x40 x58 x59 = If_i (SNoLe x58 0) x59 (x37 (x40 (add_SNo x58 (minus_SNo 1)) x59)))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x41 x58 x59 = x40 x38 (x39 x58 x59))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x42 x58 x59 = add_SNo (add_SNo (x41 x58 x59) (mul_SNo 2 (add_SNo (add_SNo x58 x58) x58))) x58)) -> (forall x58, x58 :e int -> x43 x58 = x58) -> x44 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x45 x58 x59 = If_i (SNoLe x58 0) x59 (x42 (x45 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> x46 x58 = x45 (x43 x58) x44) -> (forall x58, x58 :e int -> x47 x58 = x46 x58) -> x48 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x49 x58 x59 = x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x50 x58 x59 = If_i (SNoLe x58 0) x59 (x47 (x50 (add_SNo x58 (minus_SNo 1)) x59)))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x51 x58 x59 = x50 x48 (x49 x58 x59))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x52 x58 x59 = add_SNo (add_SNo (x51 x58 x59) (mul_SNo (add_SNo (mul_SNo (add_SNo x58 x58) 2) x58) 2)) x58)) -> (forall x58, x58 :e int -> x53 x58 = x58) -> x54 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x55 x58 x59 = If_i (SNoLe x58 0) x59 (x52 (x55 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> x56 x58 = x55 (x53 x58) x54) -> (forall x58, x58 :e int -> x57 x58 = x56 x58) -> (forall x58, x58 :e int -> SNoLe 0 x58 -> x23 x58 = x57 x58))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f319dc86d811eeeb2cbd9d964aaab326595cb1453d91689b3ab06e462923b583 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> (forall x46 : set -> set -> set, (forall x47, x47 :e int -> (forall x48, x48 :e int -> x46 x47 x48 :e int)) -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set -> set, (forall x49, x49 :e int -> (forall x50, x50 :e int -> x48 x49 x50 :e int)) -> (forall x49 : set -> set -> set, (forall x50, x50 :e int -> (forall x51, x51 :e int -> x49 x50 x51 :e int)) -> (forall x50 : set -> set, (forall x51, x51 :e int -> x50 x51 :e int) -> (forall x51, x51 :e int -> (forall x52 : set -> set -> set, (forall x53, x53 :e int -> (forall x54, x54 :e int -> x52 x53 x54 :e int)) -> (forall x53 : set -> set, (forall x54, x54 :e int -> x53 x54 :e int) -> (forall x54 : set -> set, (forall x55, x55 :e int -> x54 x55 :e int) -> (forall x55, x55 :e int -> x0 x55 = add_SNo (add_SNo x55 x55) x55) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x1 x55 x56 = add_SNo x56 x56)) -> x2 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x3 x55 x56 = If_i (SNoLe x55 0) x56 (x0 (x3 (add_SNo x55 (minus_SNo 1)) x56)))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x4 x55 x56 = x3 (x1 x55 x56) x2)) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x5 x55 x56 = add_SNo (x4 x55 x56) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x55 x55)) x55)))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x6 x55 x56 = x56)) -> x7 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x8 x55 x56 = If_i (SNoLe x55 0) x56 (x5 (x8 (add_SNo x55 (minus_SNo 1)) x56) x55))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x9 x55 x56 = x8 (x6 x55 x56) x7)) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x10 x55 x56 = add_SNo (add_SNo (x9 x55 x56) (mul_SNo 2 (add_SNo (add_SNo x55 x55) x55))) x55)) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x11 x55 x56 = x56)) -> x12 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x13 x55 x56 = If_i (SNoLe x55 0) x56 (x10 (x13 (add_SNo x55 (minus_SNo 1)) x56) x55))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x14 x55 x56 = x13 (x11 x55 x56) x12)) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x15 x55 x56 = add_SNo (add_SNo (x14 x55 x56) x55) x55)) -> (forall x55, x55 :e int -> x16 x55 = x55) -> x17 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x18 x55 x56 = If_i (SNoLe x55 0) x56 (x15 (x18 (add_SNo x55 (minus_SNo 1)) x56) x55))) -> (forall x55, x55 :e int -> x19 x55 = x18 (x16 x55) x17) -> (forall x55, x55 :e int -> x20 x55 = x19 x55) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x21 x55 x56 = add_SNo 1 (mul_SNo x55 x56))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x22 x55 x56 = x56)) -> (forall x55, x55 :e int -> x23 x55 = x55) -> x24 = 1 -> x25 = add_SNo 1 (add_SNo 2 2) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x26 x55 x56 x57 = If_i (SNoLe x55 0) x56 (x21 (x26 (add_SNo x55 (minus_SNo 1)) x56 x57) (x27 (add_SNo x55 (minus_SNo 1)) x56 x57))))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> (forall x57, x57 :e int -> x27 x55 x56 x57 = If_i (SNoLe x55 0) x57 (x22 (x26 (add_SNo x55 (minus_SNo 1)) x56 x57) (x27 (add_SNo x55 (minus_SNo 1)) x56 x57))))) -> (forall x55, x55 :e int -> x28 x55 = x26 (x23 x55) x24 x25) -> (forall x55, x55 :e int -> x29 x55 = add_SNo x55 x55) -> (forall x55, x55 :e int -> x30 x55 = x55) -> x31 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x32 x55 x56 = If_i (SNoLe x55 0) x56 (x29 (x32 (add_SNo x55 (minus_SNo 1)) x56)))) -> (forall x55, x55 :e int -> x33 x55 = x32 (x30 x55) x31) -> (forall x55, x55 :e int -> x34 x55 = mul_SNo (x28 x55) (x33 x55)) -> x35 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x36 x55 x56 = x56)) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x37 x55 x56 = If_i (SNoLe x55 0) x56 (x34 (x37 (add_SNo x55 (minus_SNo 1)) x56)))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x38 x55 x56 = x37 x35 (x36 x55 x56))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x39 x55 x56 = add_SNo (add_SNo (x38 x55 x56) x55) (mul_SNo (mul_SNo (add_SNo x55 x55) 2) 2))) -> (forall x55, x55 :e int -> x40 x55 = x55) -> x41 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x42 x55 x56 = If_i (SNoLe x55 0) x56 (x39 (x42 (add_SNo x55 (minus_SNo 1)) x56) x55))) -> (forall x55, x55 :e int -> x43 x55 = x42 (x40 x55) x41) -> (forall x55, x55 :e int -> x44 x55 = x43 x55) -> x45 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x46 x55 x56 = x56)) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x47 x55 x56 = If_i (SNoLe x55 0) x56 (x44 (x47 (add_SNo x55 (minus_SNo 1)) x56)))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x48 x55 x56 = x47 x45 (x46 x55 x56))) -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x49 x55 x56 = add_SNo (add_SNo (x48 x55 x56) x55) (mul_SNo (add_SNo (add_SNo x55 x55) x55) 2))) -> (forall x55, x55 :e int -> x50 x55 = x55) -> x51 = 1 -> (forall x55, x55 :e int -> (forall x56, x56 :e int -> x52 x55 x56 = If_i (SNoLe x55 0) x56 (x49 (x52 (add_SNo x55 (minus_SNo 1)) x56) x55))) -> (forall x55, x55 :e int -> x53 x55 = x52 (x50 x55) x51) -> (forall x55, x55 :e int -> x54 x55 = x53 x55) -> (forall x55, x55 :e int -> SNoLe 0 x55 -> x20 x55 = x54 x55)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6dc0411f1e82871910084747c8c5ed9d2606b696c15dbc7aa8904dd7cdab5b1d : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x0 x43 x44 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x43 x43)) x43)) (mul_SNo (mul_SNo x44 x44) x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x1 x43 x44 = add_SNo x44 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x2 x43 x44 = x44)) -> x3 = 1 -> x4 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x5 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x0 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x6 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x1 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x7 x43 x44 = x5 (x2 x43 x44) x3 x4)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x8 x43 x44 = add_SNo (add_SNo (x7 x43 x44) (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43))) x43)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x9 x43 x44 = x44)) -> x10 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x11 x43 x44 = If_i (SNoLe x43 0) x44 (x8 (x11 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x12 x43 x44 = x11 (x9 x43 x44) x10)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x13 x43 x44 = add_SNo (add_SNo (x12 x43 x44) x43) x43)) -> (forall x43, x43 :e int -> x14 x43 = x43) -> x15 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x16 x43 x44 = If_i (SNoLe x43 0) x44 (x13 (x16 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x17 x43 = x16 (x14 x43) x15) -> (forall x43, x43 :e int -> x18 x43 = x17 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x19 x43 x44 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x43 x43)) x43) x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x20 x43 x44 = add_SNo 1 (mul_SNo 2 (add_SNo x44 x44)))) -> (forall x43, x43 :e int -> x21 x43 = x43) -> x22 = 1 -> x23 = add_SNo 1 (add_SNo 2 2) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x24 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x19 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x25 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x20 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x26 x43 = x24 (x21 x43) x22 x23) -> (forall x43, x43 :e int -> x27 x43 = add_SNo x43 x43) -> (forall x43, x43 :e int -> x28 x43 = x43) -> x29 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x30 x43 x44 = If_i (SNoLe x43 0) x44 (x27 (x30 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x31 x43 = x30 (x28 x43) x29) -> (forall x43, x43 :e int -> x32 x43 = mul_SNo (x26 x43) (x31 x43)) -> x33 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x34 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x35 x43 x44 = If_i (SNoLe x43 0) x44 (x32 (x35 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x36 x43 x44 = x35 x33 (x34 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x37 x43 x44 = add_SNo (add_SNo (x36 x43 x44) x43) (mul_SNo (add_SNo (add_SNo x43 x43) x43) 2))) -> (forall x43, x43 :e int -> x38 x43 = x43) -> x39 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x37 (x40 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x41 x43 = x40 (x38 x43) x39) -> (forall x43, x43 :e int -> x42 x43 = x41 x43) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x18 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e40684ac34dfdb0e3500ba6947c631b17d7df8f89506dfaa03204d71efcc7339 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = add_SNo 1 (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x1 x45 x46 = x46)) -> x2 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x4 x45 x46 = x3 (x1 x45 x46) x2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x5 x45 x46 = add_SNo (add_SNo (x4 x45 x46) (mul_SNo 2 (add_SNo x45 x45))) x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x6 x45 x46 = x46)) -> x7 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x8 (x6 x45 x46) x7)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = add_SNo (add_SNo (add_SNo (x9 x45 x46) x45) x45) x45)) -> (forall x45, x45 :e int -> x11 x45 = x45) -> x12 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x14 x45 = x13 (x11 x45) x12) -> (forall x45, x45 :e int -> x15 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x16 x45 = x45) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x19 x45 = x18 (x16 x45) x17) -> (forall x45, x45 :e int -> x20 x45 = mul_SNo (x14 x45) (x19 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x21 x45 x46 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45)) x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x22 x45 x46 = add_SNo 1 (add_SNo (add_SNo x46 x46) x46))) -> (forall x45, x45 :e int -> x23 x45 = x45) -> x24 = 1 -> x25 = add_SNo 2 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x26 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x21 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x27 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x22 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x28 x45 = x26 (x23 x45) x24 x25) -> (forall x45, x45 :e int -> x29 x45 = x28 x45) -> x30 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x31 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x45 x46 = If_i (SNoLe x45 0) x46 (x29 (x32 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x33 x45 x46 = x32 x30 (x31 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x34 x45 x46 = add_SNo (add_SNo (x33 x45 x46) (mul_SNo 2 (add_SNo x45 x45))) x45)) -> (forall x45, x45 :e int -> x35 x45 = x45) -> x36 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x38 x45 = x37 (x35 x45) x36) -> (forall x45, x45 :e int -> x39 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = mul_SNo (x38 x45) (x43 x45)) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x20 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_fc0f2724194adae53cb3d2dda3e5d3d814bd8ad4d15a7ccb88cb879cfe9e2c0f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> x0 x12 = add_SNo (add_SNo x12 (minus_SNo 1)) x12) -> (forall x12, x12 :e int -> x1 x12 = x12) -> (forall x12, x12 :e int -> x2 x12 = add_SNo (add_SNo x12 x12) x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = add_SNo 1 (x4 x12)) -> (forall x12, x12 :e int -> x6 x12 = add_SNo x12 x12) -> (forall x12, x12 :e int -> x7 x12 = x12) -> (forall x12, x12 :e int -> x8 x12 = add_SNo (add_SNo (add_SNo x12 (minus_SNo 1)) x12) x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo 2 (x10 x12)) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_8525b3dabb9702c5b3f463a1889d30b03e5ffa9056b5d5b2b6231fd12c8e8950 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = add_SNo x29 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = add_SNo 1 x29)) -> x4 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x7 x28 x29 = x5 (x2 x28 x29) (x3 x28 x29) x4)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = add_SNo (x7 x28 x29) (minus_SNo x28))) -> (forall x28, x28 :e int -> x9 x28 = x28) -> x10 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x15 x28 x29 = add_SNo (add_SNo x28 x29) x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = add_SNo 1 x29)) -> x18 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x21 x28 x29 = x19 (x16 x28 x29) (x17 x28 x29) x18)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = add_SNo (x21 x28 x29) (minus_SNo x28))) -> (forall x28, x28 :e int -> x23 x28 = x28) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_7e3bf39cad4bfec99fe60be8bff90d29ced005dd232d0a82cc6b9a6cd4d476a1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = add_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo x20 x21))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x1 x20 x21 = add_SNo 2 x21)) -> (forall x20, x20 :e int -> x2 x20 = x20) -> x3 = 1 -> (forall x20, x20 :e int -> x4 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x5 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x0 (x5 (add_SNo x20 (minus_SNo 1)) x21 x22) (x6 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x6 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x1 (x5 (add_SNo x20 (minus_SNo 1)) x21 x22) (x6 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x7 x20 = x5 (x2 x20) x3 (x4 x20)) -> (forall x20, x20 :e int -> x8 x20 = x7 x20) -> (forall x20, x20 :e int -> x9 x20 = add_SNo x20 x20) -> (forall x20, x20 :e int -> x10 x20 = x20) -> (forall x20, x20 :e int -> x11 x20 = add_SNo 1 (add_SNo 2 (add_SNo 2 x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = If_i (SNoLe x20 0) x21 (x9 (x12 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x13 x20 = x12 (x10 x20) (x11 x20)) -> (forall x20, x20 :e int -> x14 x20 = add_SNo x20 x20) -> (forall x20, x20 :e int -> x15 x20 = x20) -> x16 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x14 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 (x15 x20) x16) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (add_SNo (mul_SNo (add_SNo (add_SNo (x13 x20) (minus_SNo (mul_SNo 2 (add_SNo 2 x20)))) (minus_SNo x20)) 2) (minus_SNo 2)) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x8 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_029cde48f489e19eada17fdbbf00bc0a8ef538d57a3779bd999f8497794010ee : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> (forall x49 : set -> set -> set, (forall x50, x50 :e int -> (forall x51, x51 :e int -> x49 x50 x51 :e int)) -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set -> set, (forall x52, x52 :e int -> (forall x53, x53 :e int -> x51 x52 x53 :e int)) -> (forall x52 : set -> set -> set, (forall x53, x53 :e int -> (forall x54, x54 :e int -> x52 x53 x54 :e int)) -> (forall x53 : set -> set, (forall x54, x54 :e int -> x53 x54 :e int) -> (forall x54, x54 :e int -> (forall x55 : set -> set -> set, (forall x56, x56 :e int -> (forall x57, x57 :e int -> x55 x56 x57 :e int)) -> (forall x56 : set -> set, (forall x57, x57 :e int -> x56 x57 :e int) -> (forall x57 : set -> set, (forall x58, x58 :e int -> x57 x58 :e int) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x0 x58 x59 = x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x1 x58 x59 = add_SNo x58 x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x2 x58 x59 = x59)) -> x3 = 2 -> x4 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x5 x58 x59 x60 = If_i (SNoLe x58 0) x59 (x0 (x5 (add_SNo x58 (minus_SNo 1)) x59 x60) (x6 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x6 x58 x59 x60 = If_i (SNoLe x58 0) x60 (x1 (x5 (add_SNo x58 (minus_SNo 1)) x59 x60) (x6 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x7 x58 x59 = x5 (x2 x58 x59) x3 x4)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x8 x58 x59 = add_SNo (x7 x58 x59) x58)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x9 x58 x59 = x59)) -> (forall x58, x58 :e int -> x10 x58 = x58) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x11 x58 x59 = If_i (SNoLe x58 0) x59 (x8 (x11 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x12 x58 x59 = x11 (x9 x58 x59) (x10 x58))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x13 x58 x59 = x12 x58 x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x14 x58 x59 = x59)) -> (forall x58, x58 :e int -> x15 x58 = x58) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x16 x58 x59 = If_i (SNoLe x58 0) x59 (x13 (x16 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x17 x58 x59 = x16 (x14 x58 x59) (x15 x58))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x18 x58 x59 = x17 x58 x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x19 x58 x59 = add_SNo 1 x59)) -> (forall x58, x58 :e int -> x20 x58 = x58) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x21 x58 x59 = If_i (SNoLe x58 0) x59 (x18 (x21 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x22 x58 x59 = x21 (x19 x58 x59) (x20 x58))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x23 x58 x59 = x22 x58 x59)) -> (forall x58, x58 :e int -> x24 x58 = x58) -> x25 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x26 x58 x59 = If_i (SNoLe x58 0) x59 (x23 (x26 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> x27 x58 = x26 (x24 x58) x25) -> (forall x58, x58 :e int -> x28 x58 = x27 x58) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x29 x58 x59 = add_SNo x58 x59)) -> (forall x58, x58 :e int -> x30 x58 = x58) -> (forall x58, x58 :e int -> x31 x58 = x58) -> x32 = add_SNo 2 2 -> x33 = add_SNo 1 2 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x34 x58 x59 x60 = If_i (SNoLe x58 0) x59 (x29 (x34 (add_SNo x58 (minus_SNo 1)) x59 x60) (x35 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> (forall x60, x60 :e int -> x35 x58 x59 x60 = If_i (SNoLe x58 0) x60 (x30 (x34 (add_SNo x58 (minus_SNo 1)) x59 x60))))) -> (forall x58, x58 :e int -> x36 x58 = x34 (x31 x58) x32 x33) -> (forall x58, x58 :e int -> x37 x58 = add_SNo (add_SNo (add_SNo (add_SNo (x36 x58) (minus_SNo 2)) (minus_SNo x58)) (minus_SNo x58)) (minus_SNo x58)) -> x38 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x39 x58 x59 = add_SNo 2 x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x40 x58 x59 = If_i (SNoLe x58 0) x59 (x37 (x40 (add_SNo x58 (minus_SNo 1)) x59)))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x41 x58 x59 = x40 x38 (x39 x58 x59))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x42 x58 x59 = add_SNo (x41 x58 x59) x58)) -> (forall x58, x58 :e int -> x43 x58 = x58) -> x44 = 0 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x45 x58 x59 = If_i (SNoLe x58 0) x59 (x42 (x45 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> x46 x58 = x45 (x43 x58) x44) -> (forall x58, x58 :e int -> x47 x58 = x46 x58) -> x48 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x49 x58 x59 = x59)) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x50 x58 x59 = If_i (SNoLe x58 0) x59 (x47 (x50 (add_SNo x58 (minus_SNo 1)) x59)))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x51 x58 x59 = x50 x48 (x49 x58 x59))) -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x52 x58 x59 = add_SNo (x51 x58 x59) x58)) -> (forall x58, x58 :e int -> x53 x58 = x58) -> x54 = 1 -> (forall x58, x58 :e int -> (forall x59, x59 :e int -> x55 x58 x59 = If_i (SNoLe x58 0) x59 (x52 (x55 (add_SNo x58 (minus_SNo 1)) x59) x58))) -> (forall x58, x58 :e int -> x56 x58 = x55 (x53 x58) x54) -> (forall x58, x58 :e int -> x57 x58 = add_SNo (x56 x58) (minus_SNo (mul_SNo x58 x58))) -> (forall x58, x58 :e int -> SNoLe 0 x58 -> x28 x58 = x57 x58))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e2a352a8f2f022d1f1a960a09973d4c04e9e5e3752486dc1cc58d341b61933db : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = add_SNo 2 (add_SNo x33 x34))) -> (forall x33, x33 :e int -> x1 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x2 x33 x34 = x34)) -> x3 = 1 -> x4 = 0 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x5 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x0 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x6 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x1 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x7 x33 x34 = x5 (x2 x33 x34) x3 x4)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = add_SNo (x7 x33 x34) x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x9 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x10 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = If_i (SNoLe x33 0) x34 (x8 (x11 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x12 x33 x34 = x11 (x9 x33 x34) (x10 x33))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = x12 x33 x34)) -> (forall x33, x33 :e int -> x14 x33 = x33) -> x15 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = If_i (SNoLe x33 0) x34 (x13 (x16 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x17 x33 = x16 (x14 x33) x15) -> (forall x33, x33 :e int -> x18 x33 = add_SNo (x17 x33) x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = add_SNo x33 x34)) -> (forall x33, x33 :e int -> x20 x33 = x33) -> (forall x33, x33 :e int -> x21 x33 = add_SNo x33 x33) -> x22 = 2 -> x23 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x19 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x20 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x26 x33 = x24 (x21 x33) x22 x23) -> (forall x33, x33 :e int -> x27 x33 = add_SNo (add_SNo (add_SNo (x26 x33) (minus_SNo (mul_SNo (add_SNo x33 x33) x33))) (minus_SNo x33)) (minus_SNo x33)) -> x28 = 1 -> (forall x33, x33 :e int -> x29 x33 = add_SNo 2 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x31 x33 = x30 x28 (x29 x33)) -> (forall x33, x33 :e int -> x32 x33 = add_SNo (x31 x33) x33) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x18 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_8b9b5f251df7a03ae9d5f5a7283bba77c2b520e0f2850aa9b8b69e199dca2023 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo (add_SNo x25 x25) x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x1 x25 x26 = x26)) -> (forall x25, x25 :e int -> x2 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = x3 (x1 x25 x26) (x2 x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = add_SNo (x4 x25 x26) (minus_SNo x25))) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = add_SNo 1 (add_SNo (add_SNo x26 x26) x26))) -> (forall x25, x25 :e int -> x13 x25 = add_SNo x25 (minus_SNo 1)) -> x14 = 1 -> x15 = add_SNo 2 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x18 x25 = x16 (x13 x25) x14 x15) -> (forall x25, x25 :e int -> x19 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x20 x25 = x25) -> x21 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x20 x25) x21) -> (forall x25, x25 :e int -> x24 x25 = mul_SNo (x18 x25) (x23 x25)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b5744f265d87c1504e2741d911ac43640f6cf5cdaa6770d18220b6039c493191 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> x0 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x1 x30 x31 = x31)) -> (forall x30, x30 :e int -> x2 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x4 x30 x31 = x3 (x1 x30 x31) (x2 x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x5 x30 x31 = x4 x30 x31)) -> (forall x30, x30 :e int -> x6 x30 = x30) -> (forall x30, x30 :e int -> x7 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x8 x30 = x30) -> x9 = 2 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x10 x30 x31 = If_i (SNoLe x30 0) x31 (x7 (x10 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x11 x30 = x10 (x8 x30) x9) -> (forall x30, x30 :e int -> x12 x30 = add_SNo (x11 x30) (minus_SNo (add_SNo 1 x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x13 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x13 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x14 x30 = x13 (x6 x30) (x12 x30)) -> (forall x30, x30 :e int -> x15 x30 = x14 x30) -> (forall x30, x30 :e int -> x16 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x17 x30 = x30) -> x18 = 2 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x19 x30 x31 = If_i (SNoLe x30 0) x31 (x16 (x19 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x20 x30 = x19 (x17 x30) x18) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x21 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x22 x30 x31 = add_SNo x31 x31)) -> (forall x30, x30 :e int -> x23 x30 = x30) -> x24 = 1 -> x25 = 2 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x26 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x21 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x27 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x22 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x28 x30 = x26 (x23 x30) x24 x25) -> (forall x30, x30 :e int -> x29 x30 = mul_SNo (add_SNo (add_SNo (x20 x30) (minus_SNo 1)) (minus_SNo x30)) (x28 x30)) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x15 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_7a171825284e34326162e889be5b982da7c7eb6221078dc768f8b3d1490e8e5c : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo (add_SNo x19 x19) x19)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x1 x18 x19 = add_SNo (add_SNo x18 x18) x19)) -> (forall x18, x18 :e int -> x2 x18 = add_SNo x18 x18) -> x3 = 1 -> x4 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) x3 x4) -> (forall x18, x18 :e int -> x8 x18 = x7 x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = mul_SNo 2 (add_SNo (mul_SNo x19 x19) (add_SNo x18 x18)))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x10 x18 x19 = add_SNo (add_SNo x19 x19) x19)) -> (forall x18, x18 :e int -> x11 x18 = x18) -> x12 = 1 -> x13 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) x12 x13) -> (forall x18, x18 :e int -> x17 x18 = x16 x18) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
