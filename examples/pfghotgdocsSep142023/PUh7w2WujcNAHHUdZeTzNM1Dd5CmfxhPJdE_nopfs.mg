Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_9b6e415b1baadecbcf7ff1e6100a818dc1cf2d7f3248b3f1d296bfff12dca8e9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = mul_SNo x38 x38) -> x1 = 2 -> x2 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39)))) -> x4 = x3 x1 x2 -> (forall x38, x38 :e int -> x5 x38 = mul_SNo (add_SNo x4 (minus_SNo 2)) x38) -> (forall x38, x38 :e int -> x6 x38 = add_SNo 1 (add_SNo x38 x38)) -> x7 = 2 -> (forall x38, x38 :e int -> x8 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x9 x38 x39 = If_i (SNoLe x38 0) x39 (x6 (x9 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x10 x38 = x9 x7 (x8 x38)) -> (forall x38, x38 :e int -> x11 x38 = x10 x38) -> x12 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = If_i (SNoLe x38 0) x39 (x5 (x13 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x14 x38 = x13 (x11 x38) x12) -> (forall x38, x38 :e int -> x15 x38 = x14 x38) -> (forall x38, x38 :e int -> x16 x38 = mul_SNo x38 x38) -> x17 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x18 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x19 x38 x39 = x39)) -> (forall x38, x38 :e int -> x20 x38 = add_SNo 1 x38) -> x21 = 1 -> x22 = add_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x23 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x18 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x24 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x19 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x25 x38 = x23 (x20 x38) x21 x22) -> (forall x38, x38 :e int -> x26 x38 = x25 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = If_i (SNoLe x38 0) x39 (x16 (x27 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x28 x38 = x27 x17 (x26 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = x39)) -> (forall x38, x38 :e int -> x31 x38 = add_SNo 1 (add_SNo x38 x38)) -> x32 = 1 -> x33 = add_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x34 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x29 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x35 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x30 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x36 x38 = x34 (x31 x38) x32 x33) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (x28 x38) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x15 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_3f25869f1166b6615378529e78e3598940f882a6f7295e95aad70969badb1a64 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = mul_SNo x33 x33) -> x1 = 2 -> x2 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> x4 = x3 x1 x2 -> (forall x33, x33 :e int -> x5 x33 = mul_SNo (add_SNo x4 (minus_SNo 2)) x33) -> (forall x33, x33 :e int -> x6 x33 = add_SNo 1 (mul_SNo 2 (add_SNo x33 x33))) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = x9 x33) -> (forall x33, x33 :e int -> x11 x33 = mul_SNo x33 x33) -> x12 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = x34)) -> (forall x33, x33 :e int -> x15 x33 = x33) -> x16 = 1 -> x17 = add_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x18 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x13 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x19 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x14 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x20 x33 = x18 (x15 x33) x16 x17) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x11 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x12 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = add_SNo 1 (add_SNo x33 x33)) -> x27 = 1 -> x28 = add_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c3dd470f11c9e94ddf00d3c4a78b056ca47d60de981ee66d4c0de996421e2026 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x0 x43 x44 = mul_SNo (add_SNo 2 x44) x43)) -> x1 = 2 -> (forall x43, x43 :e int -> x2 x43 = x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x3 x43 x44 = If_i (SNoLe x43 0) x44 (x0 (x3 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x4 x43 = x3 x1 (x2 x43)) -> (forall x43, x43 :e int -> x5 x43 = x4 x43) -> (forall x43, x43 :e int -> x6 x43 = add_SNo 1 (add_SNo x43 x43)) -> x7 = 2 -> (forall x43, x43 :e int -> x8 x43 = x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x9 x43 x44 = If_i (SNoLe x43 0) x44 (x6 (x9 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x10 x43 = x9 x7 (x8 x43)) -> (forall x43, x43 :e int -> x11 x43 = x10 x43) -> x12 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x13 x43 x44 = If_i (SNoLe x43 0) x44 (x5 (x13 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x14 x43 = x13 (x11 x43) x12) -> (forall x43, x43 :e int -> x15 x43 = x14 x43) -> (forall x43, x43 :e int -> x16 x43 = mul_SNo x43 x43) -> x17 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x18 x43 x44 = mul_SNo x43 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x19 x43 x44 = x44)) -> (forall x43, x43 :e int -> x20 x43 = x43) -> x21 = 1 -> x22 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x23 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x18 (x23 (add_SNo x43 (minus_SNo 1)) x44 x45) (x24 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x24 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x19 (x23 (add_SNo x43 (minus_SNo 1)) x44 x45) (x24 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x25 x43 = x23 (x20 x43) x21 x22) -> (forall x43, x43 :e int -> x26 x43 = x25 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x27 x43 x44 = If_i (SNoLe x43 0) x44 (x16 (x27 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x28 x43 = x27 x17 (x26 x43)) -> (forall x43, x43 :e int -> x29 x43 = mul_SNo x43 x43) -> x30 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x31 x43 x44 = mul_SNo x43 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x32 x43 x44 = x44)) -> (forall x43, x43 :e int -> x33 x43 = add_SNo 1 x43) -> x34 = 1 -> x35 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x36 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x31 (x36 (add_SNo x43 (minus_SNo 1)) x44 x45) (x37 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x37 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x32 (x36 (add_SNo x43 (minus_SNo 1)) x44 x45) (x37 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x38 x43 = x36 (x33 x43) x34 x35) -> (forall x43, x43 :e int -> x39 x43 = x38 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x29 (x40 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x41 x43 = x40 x30 (x39 x43)) -> (forall x43, x43 :e int -> x42 x43 = mul_SNo (mul_SNo (x28 x43) (mul_SNo 2 (add_SNo 2 (add_SNo 2 2)))) (x41 x43)) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x15 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_2bad364ab089f9554b65f1561c23ec5d07967e4659346bc7e21bb0e8c2e22c4d : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x0 x38 x39 = mul_SNo (add_SNo 2 x39) x38)) -> x1 = 2 -> (forall x38, x38 :e int -> x2 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> x4 x38 = x3 x1 (x2 x38)) -> (forall x38, x38 :e int -> x5 x38 = x4 x38) -> (forall x38, x38 :e int -> x6 x38 = add_SNo 1 (mul_SNo 2 (add_SNo x38 x38))) -> x7 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x8 x38 x39 = If_i (SNoLe x38 0) x39 (x5 (x8 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x9 x38 = x8 (x6 x38) x7) -> (forall x38, x38 :e int -> x10 x38 = x9 x38) -> (forall x38, x38 :e int -> x11 x38 = mul_SNo x38 x38) -> x12 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x14 x38 x39 = x39)) -> (forall x38, x38 :e int -> x15 x38 = x38) -> x16 = 1 -> x17 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x18 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x13 (x18 (add_SNo x38 (minus_SNo 1)) x39 x40) (x19 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x19 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x14 (x18 (add_SNo x38 (minus_SNo 1)) x39 x40) (x19 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x20 x38 = x18 (x15 x38) x16 x17) -> (forall x38, x38 :e int -> x21 x38 = x20 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x22 x38 x39 = If_i (SNoLe x38 0) x39 (x11 (x22 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x23 x38 = x22 x12 (x21 x38)) -> (forall x38, x38 :e int -> x24 x38 = mul_SNo x38 x38) -> x25 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x26 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = x39)) -> (forall x38, x38 :e int -> x28 x38 = x38) -> x29 = 1 -> x30 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x31 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x26 (x31 (add_SNo x38 (minus_SNo 1)) x39 x40) (x32 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x32 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x27 (x31 (add_SNo x38 (minus_SNo 1)) x39 x40) (x32 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x33 x38 = x31 (x28 x38) x29 x30) -> (forall x38, x38 :e int -> x34 x38 = x33 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x35 x38 x39 = If_i (SNoLe x38 0) x39 (x24 (x35 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x36 x38 = x35 x25 (x34 x38)) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (mul_SNo (x23 x38) (mul_SNo 2 (add_SNo 2 (add_SNo 2 2)))) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x10 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6df126928ee37747fd75abc69a24e3938c8879063612069adde3c44f87a10b24 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x38 x38)) x38)) -> (forall x38, x38 :e int -> x1 x38 = add_SNo 1 (add_SNo x38 x38)) -> x2 = 2 -> (forall x38, x38 :e int -> x3 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x4 x38 x39 = If_i (SNoLe x38 0) x39 (x1 (x4 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x5 x38 = x4 x2 (x3 x38)) -> (forall x38, x38 :e int -> x6 x38 = x5 x38) -> x7 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x8 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x8 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x9 x38 = x8 (x6 x38) x7) -> (forall x38, x38 :e int -> x10 x38 = x9 x38) -> (forall x38, x38 :e int -> x11 x38 = mul_SNo x38 x38) -> x12 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x14 x38 x39 = x39)) -> (forall x38, x38 :e int -> x15 x38 = x38) -> x16 = 1 -> x17 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x18 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x13 (x18 (add_SNo x38 (minus_SNo 1)) x39 x40) (x19 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x19 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x14 (x18 (add_SNo x38 (minus_SNo 1)) x39 x40) (x19 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x20 x38 = x18 (x15 x38) x16 x17) -> (forall x38, x38 :e int -> x21 x38 = x20 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x22 x38 x39 = If_i (SNoLe x38 0) x39 (x11 (x22 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x23 x38 = x22 x12 (x21 x38)) -> (forall x38, x38 :e int -> x24 x38 = mul_SNo x38 x38) -> x25 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x26 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = x39)) -> (forall x38, x38 :e int -> x28 x38 = add_SNo 1 x38) -> x29 = 1 -> x30 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x31 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x26 (x31 (add_SNo x38 (minus_SNo 1)) x39 x40) (x32 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x32 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x27 (x31 (add_SNo x38 (minus_SNo 1)) x39 x40) (x32 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x33 x38 = x31 (x28 x38) x29 x30) -> (forall x38, x38 :e int -> x34 x38 = x33 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x35 x38 x39 = If_i (SNoLe x38 0) x39 (x24 (x35 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x36 x38 = x35 x25 (x34 x38)) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (mul_SNo (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (x23 x38)) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x10 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c331e1b877c9152cfffe10723ebae0240bb19d159ecef7aca861b172517302e0 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33)) -> (forall x33, x33 :e int -> x1 x33 = add_SNo 1 (mul_SNo 2 (add_SNo x33 x33))) -> x2 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x4 x33 = x3 (x1 x33) x2) -> (forall x33, x33 :e int -> x5 x33 = x4 x33) -> (forall x33, x33 :e int -> x6 x33 = mul_SNo x33 x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x9 x33 x34 = x34)) -> (forall x33, x33 :e int -> x10 x33 = x33) -> x11 = 1 -> x12 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x13 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x8 (x13 (add_SNo x33 (minus_SNo 1)) x34 x35) (x14 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x14 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x9 (x13 (add_SNo x33 (minus_SNo 1)) x34 x35) (x14 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x15 x33 = x13 (x10 x33) x11 x12) -> (forall x33, x33 :e int -> x16 x33 = x15 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x17 x33 x34 = If_i (SNoLe x33 0) x34 (x6 (x17 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x18 x33 = x17 x7 (x16 x33)) -> (forall x33, x33 :e int -> x19 x33 = mul_SNo x33 x33) -> x20 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = x34)) -> (forall x33, x33 :e int -> x23 x33 = x33) -> x24 = 1 -> x25 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x26 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x21 (x26 (add_SNo x33 (minus_SNo 1)) x34 x35) (x27 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x27 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x22 (x26 (add_SNo x33 (minus_SNo 1)) x34 x35) (x27 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x28 x33 = x26 (x23 x33) x24 x25) -> (forall x33, x33 :e int -> x29 x33 = x28 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x19 (x30 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x31 x33 = x30 x20 (x29 x33)) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (mul_SNo (x18 x33) (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x5 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b548b03e4542bb6ae31f4501b47b127bffffd36e7815a54220fcbde69f9eebf9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x33 x33) x33)) x33) -> (forall x33, x33 :e int -> x1 x33 = add_SNo 1 (add_SNo x33 x33)) -> x2 = 2 -> (forall x33, x33 :e int -> x3 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x4 x33 x34 = If_i (SNoLe x33 0) x34 (x1 (x4 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x5 x33 = x4 x2 (x3 x33)) -> (forall x33, x33 :e int -> x6 x33 = x5 x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = x9 x33) -> (forall x33, x33 :e int -> x11 x33 = mul_SNo x33 x33) -> x12 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = x34)) -> (forall x33, x33 :e int -> x15 x33 = add_SNo 1 x33) -> x16 = 1 -> x17 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x18 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x13 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x19 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x14 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x20 x33 = x18 (x15 x33) x16 x17) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x11 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x12 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = add_SNo 1 (add_SNo x33 x33)) -> x27 = 1 -> x28 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_4c206d4f5b5239b6822934a175f643e2517eceb8c2a23a6f37dbe133cd235179 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x28 x28) x28)) x28) -> (forall x28, x28 :e int -> x1 x28 = add_SNo 1 (mul_SNo 2 (add_SNo x28 x28))) -> x2 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x4 x28 = x3 (x1 x28) x2) -> (forall x28, x28 :e int -> x5 x28 = x4 x28) -> (forall x28, x28 :e int -> x6 x28 = mul_SNo x28 x28) -> x7 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x9 x28 x29 = x29)) -> (forall x28, x28 :e int -> x10 x28 = x28) -> x11 = 1 -> x12 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x13 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x8 (x13 (add_SNo x28 (minus_SNo 1)) x29 x30) (x14 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x14 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x9 (x13 (add_SNo x28 (minus_SNo 1)) x29 x30) (x14 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x15 x28 = x13 (x10 x28) x11 x12) -> (forall x28, x28 :e int -> x16 x28 = x15 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x6 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x18 x28 = x17 x7 (x16 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = add_SNo 1 (add_SNo x28 x28)) -> x22 = 1 -> x23 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x5 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5c53d15fd8f6328875aabe6267d344ec4a598697bdc58ea360a46dabbccec07b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = mul_SNo 2 (add_SNo (add_SNo x25 x25) x25)) -> (forall x25, x25 :e int -> x1 x25 = add_SNo 1 (add_SNo x25 x25)) -> x2 = 2 -> (forall x25, x25 :e int -> x3 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = If_i (SNoLe x25 0) x26 (x1 (x4 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x5 x25 = x4 x2 (x3 x25)) -> (forall x25, x25 :e int -> x6 x25 = x5 x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> x11 x25 = mul_SNo (mul_SNo 2 (add_SNo (add_SNo x25 x25) x25)) x25) -> x12 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = x26)) -> (forall x25, x25 :e int -> x15 x25 = x25) -> x16 = 1 -> x17 = add_SNo 2 (add_SNo 2 2) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x13 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x19 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x14 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x20 x25 = x18 (x15 x25) x16 x17) -> (forall x25, x25 :e int -> x21 x25 = x20 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 x12 (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_ff9ebd98d93f9ba27667073b5f6c9472c634b5dc655f37e2e25a6b62e116145e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = mul_SNo 2 (add_SNo (add_SNo x20 x20) x20)) -> (forall x20, x20 :e int -> x1 x20 = add_SNo 1 (mul_SNo 2 (add_SNo x20 x20))) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = mul_SNo (mul_SNo (mul_SNo x20 x20) (add_SNo 2 (add_SNo 2 2))) (mul_SNo x20 x20)) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = x21)) -> (forall x20, x20 :e int -> x10 x20 = x20) -> x11 = 1 -> x12 = add_SNo 2 (add_SNo 2 2) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x13 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x8 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x14 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x9 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x15 x20 = x13 (x10 x20) x11 x12) -> (forall x20, x20 :e int -> x16 x20 = x15 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 x7 (x16 x20)) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_af3ccca02ebef1f84508bfe3f36fefa0af9e52f27ceeed1b9c31cc1c347accd9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo (mul_SNo 2 (add_SNo x25 x25)) x25) -> (forall x25, x25 :e int -> x1 x25 = add_SNo 1 (add_SNo x25 x25)) -> x2 = 2 -> (forall x25, x25 :e int -> x3 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = If_i (SNoLe x25 0) x26 (x1 (x4 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x5 x25 = x4 x2 (x3 x25)) -> (forall x25, x25 :e int -> x6 x25 = x5 x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> x11 x25 = mul_SNo (add_SNo (mul_SNo 2 (add_SNo x25 x25)) x25) x25) -> x12 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = x26)) -> (forall x25, x25 :e int -> x15 x25 = x25) -> x16 = 1 -> x17 = add_SNo 1 (add_SNo 2 2) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x13 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x19 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x14 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x20 x25 = x18 (x15 x25) x16 x17) -> (forall x25, x25 :e int -> x21 x25 = x20 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 x12 (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_ef93ad59c0aa38ca059dffed2f157427f9e0086f2eaf45295a08f25e50408614 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo (mul_SNo 2 (add_SNo x20 x20)) x20) -> (forall x20, x20 :e int -> x1 x20 = add_SNo 1 (mul_SNo 2 (add_SNo x20 x20))) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = mul_SNo (mul_SNo x20 x20) (mul_SNo (add_SNo 1 (add_SNo 2 2)) (mul_SNo x20 x20))) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = x21)) -> (forall x20, x20 :e int -> x10 x20 = x20) -> x11 = 1 -> x12 = add_SNo 1 (add_SNo 2 2) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x13 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x8 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x14 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x9 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x15 x20 = x13 (x10 x20) x11 x12) -> (forall x20, x20 :e int -> x16 x20 = x15 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 x7 (x16 x20)) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_1a11a731208aa66680e6aa71816c67bd3e65fb0caff4e789499c55eee994ae57 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> x0 x32 = add_SNo x32 x32) -> (forall x32, x32 :e int -> x1 x32 = add_SNo 1 (add_SNo x32 x32)) -> x2 = 2 -> (forall x32, x32 :e int -> x3 x32 = x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x4 x32 x33 = If_i (SNoLe x32 0) x33 (x1 (x4 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x5 x32 = x4 x2 (x3 x32)) -> (forall x32, x32 :e int -> x6 x32 = mul_SNo 2 (x5 x32)) -> x7 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x8 x32 x33 = If_i (SNoLe x32 0) x33 (x0 (x8 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x9 x32 = x8 (x6 x32) x7) -> (forall x32, x32 :e int -> x10 x32 = x9 x32) -> (forall x32, x32 :e int -> x11 x32 = mul_SNo x32 x32) -> x12 = 2 -> (forall x32, x32 :e int -> x13 x32 = add_SNo x32 x32) -> (forall x32, x32 :e int -> x14 x32 = x32) -> x15 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x16 x32 x33 = If_i (SNoLe x32 0) x33 (x13 (x16 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x17 x32 = x16 (x14 x32) x15) -> (forall x32, x32 :e int -> x18 x32 = x17 x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x32 x33 = If_i (SNoLe x32 0) x33 (x11 (x19 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x20 x32 = x19 x12 (x18 x32)) -> (forall x32, x32 :e int -> x21 x32 = mul_SNo x32 x32) -> x22 = 2 -> (forall x32, x32 :e int -> x23 x32 = add_SNo x32 x32) -> (forall x32, x32 :e int -> x24 x32 = x32) -> x25 = 2 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x26 x32 x33 = If_i (SNoLe x32 0) x33 (x23 (x26 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x27 x32 = x26 (x24 x32) x25) -> (forall x32, x32 :e int -> x28 x32 = x27 x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x29 x32 x33 = If_i (SNoLe x32 0) x33 (x21 (x29 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x30 x32 = x29 x22 (x28 x32)) -> (forall x32, x32 :e int -> x31 x32 = mul_SNo (mul_SNo 2 (mul_SNo 2 (x20 x32))) (x30 x32)) -> (forall x32, x32 :e int -> SNoLe 0 x32 -> x10 x32 = x31 x32))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_4143b00be03a3b2cafd80075f697d282a1a6339fb1c353946092174a122be32b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo (add_SNo x25 x25) x25) -> (forall x25, x25 :e int -> x1 x25 = add_SNo 1 (add_SNo x25 x25)) -> x2 = 2 -> (forall x25, x25 :e int -> x3 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = If_i (SNoLe x25 0) x26 (x1 (x4 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x5 x25 = x4 x2 (x3 x25)) -> (forall x25, x25 :e int -> x6 x25 = x5 x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> x11 x25 = mul_SNo (add_SNo (add_SNo x25 x25) x25) x25) -> x12 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = x26)) -> (forall x25, x25 :e int -> x15 x25 = x25) -> x16 = add_SNo 1 2 -> x17 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x13 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x19 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x14 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x20 x25 = x18 (x15 x25) x16 x17) -> (forall x25, x25 :e int -> x21 x25 = x20 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 x12 (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b1a62cd8049694db77455084525bbe5c1c1b4690dd9508803ad2444151f5838c : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo (add_SNo x20 x20) x20) -> (forall x20, x20 :e int -> x1 x20 = add_SNo 1 (mul_SNo 2 (add_SNo x20 x20))) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = mul_SNo (add_SNo (add_SNo x20 x20) x20) (mul_SNo (mul_SNo x20 x20) x20)) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = x21)) -> (forall x20, x20 :e int -> x10 x20 = x20) -> x11 = 1 -> x12 = add_SNo 1 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x13 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x8 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x14 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x9 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x15 x20 = x13 (x10 x20) x11 x12) -> (forall x20, x20 :e int -> x16 x20 = x15 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 x7 (x16 x20)) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_3dc77e9dc3b2aee2c2e86ecfa0bca13fae7a82488fafee1f3b9bd2a69abad6f1 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo 2 (mul_SNo 2 (add_SNo x17 x17))) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 2 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (mul_SNo 2 (add_SNo 2 2)) (x15 x17)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_8880f5aff5d5b023b2044d94352981c43a03aa5d24018ced841ca163fe61a20e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = mul_SNo 2 (add_SNo x17 x17)) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 2 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo 2 (x15 x17)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_e1ed2f48d1ba7bb203b505057f959f85a1c9554c4ebf2f06735627dcfed83811 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = mul_SNo 2 (add_SNo 2 x33)) -> x1 = 2 -> x2 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> x4 = x3 x1 x2 -> (forall x33, x33 :e int -> x5 x33 = add_SNo (mul_SNo x4 x33) x33) -> (forall x33, x33 :e int -> x6 x33 = add_SNo 2 (add_SNo (add_SNo x33 x33) x33)) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = x9 x33) -> (forall x33, x33 :e int -> x11 x33 = mul_SNo x33 x33) -> x12 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = x34)) -> (forall x33, x33 :e int -> x15 x33 = x33) -> x16 = 1 -> x17 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x18 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x13 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x19 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x14 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x20 x33 = x18 (x15 x33) x16 x17) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x11 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x12 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = add_SNo 2 x33) -> x27 = 1 -> x28 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_4919b717a6749f3fb39fa1a9c894163710fe5c0de6285f536748071475fd0678 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = mul_SNo 2 (add_SNo 2 x33)) -> x1 = 2 -> x2 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> x4 = x3 x1 x2 -> (forall x33, x33 :e int -> x5 x33 = add_SNo (mul_SNo x4 x33) x33) -> (forall x33, x33 :e int -> x6 x33 = add_SNo 1 (add_SNo (add_SNo x33 x33) x33)) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = x9 x33) -> (forall x33, x33 :e int -> x11 x33 = mul_SNo x33 x33) -> x12 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = x34)) -> (forall x33, x33 :e int -> x15 x33 = x33) -> x16 = 1 -> x17 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x18 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x13 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x19 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x14 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x20 x33 = x18 (x15 x33) x16 x17) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x11 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x12 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = add_SNo 1 x33) -> x27 = 1 -> x28 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_965534fb2d4d9a092830d160e57bb469d50b8617fabe61237472a83297789c14 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> x0 x43 = mul_SNo 2 (add_SNo 2 x43)) -> x1 = 2 -> x2 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x3 x43 x44 = If_i (SNoLe x43 0) x44 (x0 (x3 (add_SNo x43 (minus_SNo 1)) x44)))) -> x4 = x3 x1 x2 -> (forall x43, x43 :e int -> x5 x43 = mul_SNo x4 x43) -> (forall x43, x43 :e int -> x6 x43 = add_SNo 2 (add_SNo (add_SNo x43 x43) x43)) -> x7 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x8 x43 x44 = If_i (SNoLe x43 0) x44 (x5 (x8 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x9 x43 = x8 (x6 x43) x7) -> (forall x43, x43 :e int -> x10 x43 = x9 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x11 x43 x44 = mul_SNo x43 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x12 x43 x44 = x44)) -> (forall x43, x43 :e int -> x13 x43 = add_SNo 2 x43) -> x14 = 1 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x16 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x11 (x16 (add_SNo x43 (minus_SNo 1)) x44 x45) (x17 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x17 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x12 (x16 (add_SNo x43 (minus_SNo 1)) x44 x45) (x17 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x18 x43 = x16 (x13 x43) x14 x15) -> (forall x43, x43 :e int -> x19 x43 = mul_SNo (mul_SNo x43 x43) x43) -> x20 = 1 -> (forall x43, x43 :e int -> x21 x43 = add_SNo x43 x43) -> (forall x43, x43 :e int -> x22 x43 = x43) -> x23 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x24 x43 x44 = If_i (SNoLe x43 0) x44 (x21 (x24 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x25 x43 = x24 (x22 x43) x23) -> (forall x43, x43 :e int -> x26 x43 = x25 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x27 x43 x44 = If_i (SNoLe x43 0) x44 (x19 (x27 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x28 x43 = x27 x20 (x26 x43)) -> (forall x43, x43 :e int -> x29 x43 = mul_SNo x43 x43) -> x30 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x31 x43 x44 = mul_SNo x43 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x32 x43 x44 = x44)) -> (forall x43, x43 :e int -> x33 x43 = x43) -> x34 = 2 -> x35 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x36 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x31 (x36 (add_SNo x43 (minus_SNo 1)) x44 x45) (x37 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x37 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x32 (x36 (add_SNo x43 (minus_SNo 1)) x44 x45) (x37 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x38 x43 = x36 (x33 x43) x34 x35) -> (forall x43, x43 :e int -> x39 x43 = x38 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x29 (x40 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x41 x43 = x40 x30 (x39 x43)) -> (forall x43, x43 :e int -> x42 x43 = mul_SNo (mul_SNo (x18 x43) (x28 x43)) (x41 x43)) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x10 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
