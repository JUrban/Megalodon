Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_ee5a195f27630163883473ce8aeed45be53fce03e02dc2e7c2b0ef73e6b8311a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = mul_SNo 2 (add_SNo 2 x17)) -> x1 = 2 -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> x4 = x3 x1 x2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x5 x17 x18 = add_SNo 1 (add_SNo (add_SNo (mul_SNo x4 x17) x17) x18))) -> (forall x17, x17 :e int -> x6 x17 = x17) -> x7 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x5 (x8 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x6 x17) x7) -> (forall x17, x17 :e int -> x10 x17 = x9 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = mul_SNo (add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))))) (add_SNo x17 x18))) -> (forall x17, x17 :e int -> x12 x17 = x17) -> x13 = 0 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) x13) -> (forall x17, x17 :e int -> x16 x17 = add_SNo (x15 x17) (add_SNo 1 x17)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_3d50be2bfb4a0262b167e9514165ebd8416ce233fab15747a070a289bb350ecd : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = mul_SNo 2 (add_SNo 2 x17)) -> x1 = 2 -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> x4 = x3 x1 x2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x5 x17 x18 = add_SNo 1 (add_SNo (mul_SNo x4 x17) x18))) -> (forall x17, x17 :e int -> x6 x17 = x17) -> x7 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x5 (x8 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x6 x17) x7) -> (forall x17, x17 :e int -> x10 x17 = x9 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = add_SNo (mul_SNo (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) x17) x18)) -> (forall x17, x17 :e int -> x12 x17 = add_SNo 1 x17) -> x13 = 0 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) x13) -> (forall x17, x17 :e int -> x16 x17 = x15 x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_ab3bf27781c362b75ac6376d33f175268732af162d2cba44a4650a35cc792a6e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = mul_SNo (add_SNo 1 (add_SNo 2 2)) (add_SNo 1 x28)) -> x1 = add_SNo 2 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (mul_SNo x4 x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x6 x28 = x28) -> (forall x28, x28 :e int -> x7 x28 = x28) -> x8 = 1 -> x9 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 x9) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> x14 x28 = add_SNo (mul_SNo (mul_SNo (add_SNo 2 x28) x28) x28) x28) -> x15 = 1 -> x16 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> x18 = x17 x15 x16 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo (mul_SNo (add_SNo 2 x18) x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c22e2df69af39ea000b3541d42daeaeb986be5296c8f106f253e6f030012b97d : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo 2 (mul_SNo (add_SNo 1 2) (mul_SNo x28 x28))) -> x1 = 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (mul_SNo x4 x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x6 x28 = x28) -> (forall x28, x28 :e int -> x7 x28 = x28) -> x8 = 1 -> x9 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 x9) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> x14 x28 = mul_SNo x28 x28) -> x15 = 1 -> x16 = add_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> x18 = x17 x15 x16 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo (mul_SNo (add_SNo 2 (mul_SNo (add_SNo 1 2) x18)) x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_89aaa63912cb2891dc2ace886b25613cab6ea4bad9c026ea773b593d4d90677e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = mul_SNo x33 x33) -> x1 = 2 -> x2 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> x4 = x3 x1 x2 -> (forall x33, x33 :e int -> x5 x33 = add_SNo (mul_SNo (add_SNo (add_SNo x33 (minus_SNo 1)) x33) x4) (minus_SNo 2)) -> x6 = 2 -> x7 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> x9 = x8 x6 x7 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x10 x33 x34 = add_SNo (mul_SNo x9 x33) (minus_SNo x34))) -> (forall x33, x33 :e int -> x11 x33 = x33) -> (forall x33, x33 :e int -> x12 x33 = x33) -> x13 = 1 -> x14 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x15 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x10 (x15 (add_SNo x33 (minus_SNo 1)) x34 x35) (x16 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x16 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x11 (x15 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x17 x33 = x15 (x12 x33) x13 x14) -> (forall x33, x33 :e int -> x18 x33 = x17 x33) -> (forall x33, x33 :e int -> x19 x33 = mul_SNo (mul_SNo x33 x33) x33) -> x20 = 1 -> x21 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x19 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> x23 = x22 x20 x21 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = add_SNo (mul_SNo (mul_SNo 2 (add_SNo x23 (minus_SNo 2))) x33) (minus_SNo x34))) -> (forall x33, x33 :e int -> x25 x33 = x33) -> (forall x33, x33 :e int -> x26 x33 = x33) -> x27 = 1 -> x28 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = x31 x33) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x18 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e3d43c79739a5684caa05c8416cc839cab07c29883023265d47a01274b90ec0b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo 2 (add_SNo (mul_SNo 2 (mul_SNo x28 x28)) x28)) -> x1 = 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (mul_SNo x4 x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x6 x28 = x28) -> (forall x28, x28 :e int -> x7 x28 = x28) -> x8 = 1 -> x9 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 x9) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> x14 x28 = mul_SNo x28 x28) -> x15 = 1 -> x16 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> x18 = x17 x15 x16 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo (mul_SNo (add_SNo 2 (mul_SNo (add_SNo 1 2) x18)) x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_79771d820783df75b8bc6a9b28931f8a4d3ddab5cb5f03f300cdcbe2a688aa09 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = add_SNo (add_SNo (add_SNo x20 (minus_SNo x21)) x20) x20)) -> x1 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x2 x20 x21 = x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x4 x20 x21 = x3 x1 (x2 x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x5 x20 x21 = mul_SNo (x4 x20 x21) x20)) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo 1 (add_SNo (mul_SNo 2 (add_SNo 2 2)) x21))) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 2 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_5ce5b5ae9afb5c30aa5e3f9f2b4d22c1a93794b34f932d59f616a7554e2ed84b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x0 x12 x13 = mul_SNo 2 (add_SNo (mul_SNo x12 x13) x12))) -> (forall x12, x12 :e int -> x1 x12 = x12) -> (forall x12, x12 :e int -> x2 x12 = add_SNo 1 x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = x4 x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x6 x12 x13 = mul_SNo 2 (mul_SNo x12 x13))) -> (forall x12, x12 :e int -> x7 x12 = x12) -> x8 = 1 -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) x8) -> (forall x12, x12 :e int -> x11 x12 = mul_SNo (add_SNo 1 (mul_SNo (add_SNo 2 x12) x12)) (x10 x12)) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_786f8ea6c71f4e8822b3a10f2b2e3d542fccbeca35e4ccf20d5ff1f20c596dfc : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = add_SNo (mul_SNo (add_SNo 1 2) (mul_SNo x22 x23)) (minus_SNo x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = x23)) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) x2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (add_SNo (x4 x22 x23) (mul_SNo (add_SNo 1 2) (mul_SNo x22 x23))) x22)) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = add_SNo (mul_SNo (add_SNo 1 2) (mul_SNo x22 x23)) (minus_SNo x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = x23)) -> x13 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) x13)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (x15 x22 x23) (mul_SNo (add_SNo (add_SNo (add_SNo x23 x23) x23) 1) x22))) -> (forall x22, x22 :e int -> x17 x22 = x22) -> x18 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) x18) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_916febb7657bb4b75014de94dbcadf419dd640359507d3a0f3e492b567e01b4c : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x0 x30 x31 = mul_SNo 2 (mul_SNo x30 x31))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x1 x30 x31 = x31)) -> (forall x30, x30 :e int -> x2 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x4 x30 x31 = x3 (x1 x30 x31) (x2 x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x5 x30 x31 = x4 x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x6 x30 x31 = add_SNo (add_SNo 1 2) x31)) -> x7 = 2 -> x8 = 1 -> (forall x30, x30 :e int -> x9 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x10 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x5 (x10 (add_SNo x30 (minus_SNo 1)) x31 x32) (x11 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x11 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x6 (x10 (add_SNo x30 (minus_SNo 1)) x31 x32) (x11 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x12 x30 = x10 x7 x8 (x9 x30)) -> (forall x30, x30 :e int -> x13 x30 = x12 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x14 x30 x31 = mul_SNo 2 (mul_SNo x30 x31))) -> (forall x30, x30 :e int -> x15 x30 = add_SNo 1 (add_SNo 2 x30)) -> x16 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x17 x30 x31 = If_i (SNoLe x30 0) x31 (x14 (x17 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x18 x30 = x17 (x15 x30) x16) -> (forall x30, x30 :e int -> x19 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x20 x30 = x30) -> x21 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x22 x30 x31 = If_i (SNoLe x30 0) x31 (x19 (x22 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x23 x30 = x22 (x20 x30) x21) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x24 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> x25 x30 = x30) -> x26 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x27 x30 x31 = If_i (SNoLe x30 0) x31 (x24 (x27 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x28 x30 = x27 (x25 x30) x26) -> (forall x30, x30 :e int -> x29 x30 = mul_SNo (mul_SNo (x18 x30) (x23 x30)) (x28 x30)) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x13 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b3f60adc62de069aa96f89aa502c22e7b7c1c9f29e453c671c2be48134d385c6 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = mul_SNo (add_SNo 1 x18) (mul_SNo (add_SNo 2 x18) x17))) -> (forall x17, x17 :e int -> x1 x17 = x17) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = If_i (SNoLe x17 0) 0 (x4 x17)) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = mul_SNo x17 x18)) -> (forall x17, x17 :e int -> x9 x17 = add_SNo x17 (minus_SNo 1)) -> (forall x17, x17 :e int -> x10 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) (x10 x17)) -> (forall x17, x17 :e int -> x13 x17 = mul_SNo (add_SNo 1 x17) (x12 x17)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (x15 x17) (add_SNo 2 x17)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_34efcb83efd54f720868f8885c3f2e597570b98582a90c61c0260b4cd9b036bf : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5, x5 :e int -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = add_SNo 1 x29)) -> (forall x28, x28 :e int -> x4 x28 = add_SNo x28 (minus_SNo 1)) -> x5 = 1 -> (forall x28, x28 :e int -> x6 x28 = add_SNo 2 (add_SNo x28 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x7 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x2 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30) (x8 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x8 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x3 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30) (x8 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x9 x28 = x7 (x4 x28) x5 (x6 x28)) -> (forall x28, x28 :e int -> x10 x28 = x9 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x11 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x1 x28) (x10 x28)) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> x14 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x15 x28 = x28) -> x16 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x18 x28 = x17 (x15 x28) x16) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = add_SNo 1 x29)) -> (forall x28, x28 :e int -> x21 x28 = add_SNo x28 (minus_SNo 1)) -> x22 = 1 -> (forall x28, x28 :e int -> x23 x28 = add_SNo 2 (add_SNo x28 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 (x23 x28)) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_1320467451a832c943f5f22636d578e2ffe7d88b26b60cbd9dc7befc75963eb1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = mul_SNo 2 (mul_SNo (add_SNo 2 x18) x17))) -> (forall x17, x17 :e int -> x1 x17 = x17) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> x6 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x7 x17 = x17) -> (forall x17, x17 :e int -> x8 x17 = add_SNo 1 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x9 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x9 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x10 x17 = x9 (x7 x17) (x8 x17)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = mul_SNo x17 x18)) -> (forall x17, x17 :e int -> x12 x17 = x17) -> (forall x17, x17 :e int -> x13 x17 = add_SNo 2 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (x10 x17) (x15 x17)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_144ec1c1d6a838be64f1bfe65e90b72da39faf14a578e1260b7bd3592aaf11a0 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo (add_SNo x18 (minus_SNo 1)) x19)) -> (forall x18, x18 :e int -> x1 x18 = add_SNo x18 (minus_SNo 1)) -> (forall x18, x18 :e int -> x2 x18 = x18) -> (forall x18, x18 :e int -> x3 x18 = x18) -> (forall x18, x18 :e int -> x4 x18 = x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) (x3 x18) (x4 x18)) -> (forall x18, x18 :e int -> x8 x18 = x7 x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = add_SNo x18 x19)) -> (forall x18, x18 :e int -> x10 x18 = x18) -> (forall x18, x18 :e int -> x11 x18 = x18) -> (forall x18, x18 :e int -> x12 x18 = add_SNo x18 (minus_SNo 2)) -> (forall x18, x18 :e int -> x13 x18 = add_SNo x18 (minus_SNo 1)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) (x12 x18) (x13 x18)) -> (forall x18, x18 :e int -> x17 x18 = add_SNo 2 (x16 x18)) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_e138c0bc8096ea6a9b73c508021a52bbb99be716d5247033903a396775a36d07 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x1 x25 x26 = x26)) -> x2 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = x3 (x1 x25 x26) x2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = add_SNo (x4 x25 x26) x25)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x6 x25 x26 = x26)) -> (forall x25, x25 :e int -> x7 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x9 x25 x26 = x8 (x6 x25 x26) (x7 x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x10 x25 x26 = x9 x25 x26)) -> (forall x25, x25 :e int -> x11 x25 = x25) -> x12 = 0 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = If_i (SNoLe x25 0) x26 (x10 (x13 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x14 x25 = x13 (x11 x25) x12) -> (forall x25, x25 :e int -> x15 x25 = x14 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x16 x25 x26 = add_SNo 1 (mul_SNo x25 x26))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x17 x25 x26 = add_SNo x26 (minus_SNo 1))) -> (forall x25, x25 :e int -> x18 x25 = x25) -> x19 = 0 -> (forall x25, x25 :e int -> x20 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x16 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x17 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x18 x25) x19 (x20 x25)) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (mul_SNo (x23 x25) (add_SNo 1 x25)) (minus_SNo x25)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x15 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_447f68bcb71cfe437ac0b93f916b461d68764add94e6d0c93d995e2c84edff4a : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x0 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x1 x30 x31 = add_SNo x31 (minus_SNo 1))) -> x2 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x4 x30 x31 = x3 (x1 x30 x31) x2)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x5 x30 x31 = add_SNo (x4 x30 x31) x30)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x6 x30 x31 = x31)) -> (forall x30, x30 :e int -> x7 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x9 x30 x31 = x8 (x6 x30 x31) (x7 x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x10 x30 x31 = x9 x30 x31)) -> (forall x30, x30 :e int -> x11 x30 = x30) -> x12 = 0 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x13 x30 x31 = If_i (SNoLe x30 0) x31 (x10 (x13 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x14 x30 = x13 (x11 x30) x12) -> (forall x30, x30 :e int -> x15 x30 = x14 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x16 x30 x31 = add_SNo 1 (mul_SNo x30 x31))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x17 x30 x31 = add_SNo x31 (minus_SNo 1))) -> (forall x30, x30 :e int -> x18 x30 = add_SNo x30 (minus_SNo 1)) -> x19 = 0 -> (forall x30, x30 :e int -> x20 x30 = x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x21 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x16 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x17 (x21 (add_SNo x30 (minus_SNo 1)) x31 x32) (x22 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x23 x30 = x21 (x18 x30) x19 (x20 x30)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x24 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> x25 x30 = x30) -> x26 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x27 x30 x31 = If_i (SNoLe x30 0) x31 (x24 (x27 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x28 x30 = x27 (x25 x30) x26) -> (forall x30, x30 :e int -> x29 x30 = add_SNo (add_SNo (add_SNo (mul_SNo (x23 x30) x30) 1) (minus_SNo (x28 x30))) x30) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x15 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b5c241fe40fba5a6a6ffc440249c4b9d0a3371a12b6e97b06b9a8a8713eb2c07 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x0 x43 x44 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x43 x43)) x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x1 x43 x44 = mul_SNo 2 (add_SNo (add_SNo x44 x44) x44))) -> (forall x43, x43 :e int -> x2 x43 = x43) -> x3 = 1 -> x4 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x5 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x0 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x6 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x1 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x7 x43 = x5 (x2 x43) x3 x4) -> (forall x43, x43 :e int -> x8 x43 = x7 x43) -> x9 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x10 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x11 x43 x44 = If_i (SNoLe x43 0) x44 (x8 (x11 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x12 x43 x44 = x11 x9 (x10 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x13 x43 x44 = add_SNo (add_SNo (x12 x43 x44) (mul_SNo 2 (add_SNo x43 x43))) x43)) -> (forall x43, x43 :e int -> x14 x43 = x43) -> x15 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x16 x43 x44 = If_i (SNoLe x43 0) x44 (x13 (x16 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x17 x43 = x16 (x14 x43) x15) -> (forall x43, x43 :e int -> x18 x43 = x17 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x19 x43 x44 = add_SNo (mul_SNo 2 (add_SNo x43 x43)) x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x20 x43 x44 = add_SNo (add_SNo x44 x44) x44)) -> (forall x43, x43 :e int -> x21 x43 = x43) -> x22 = 1 -> x23 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x24 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x19 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x25 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x20 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x26 x43 = x24 (x21 x43) x22 x23) -> (forall x43, x43 :e int -> x27 x43 = add_SNo x43 x43) -> (forall x43, x43 :e int -> x28 x43 = x43) -> x29 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x30 x43 x44 = If_i (SNoLe x43 0) x44 (x27 (x30 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x31 x43 = x30 (x28 x43) x29) -> (forall x43, x43 :e int -> x32 x43 = mul_SNo (x26 x43) (x31 x43)) -> x33 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x34 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x35 x43 x44 = If_i (SNoLe x43 0) x44 (x32 (x35 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x36 x43 x44 = x35 x33 (x34 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x37 x43 x44 = add_SNo (add_SNo (x36 x43 x44) x43) (mul_SNo (add_SNo x43 x43) 2))) -> (forall x43, x43 :e int -> x38 x43 = x43) -> x39 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x37 (x40 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x41 x43 = x40 (x38 x43) x39) -> (forall x43, x43 :e int -> x42 x43 = x41 x43) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x18 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_066e7cfa34541434eae321d879d35cea8e3c3c3bde53a65c773f411eb7d8804a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo 1 (add_SNo x17 x17)) -> (forall x17, x17 :e int -> x1 x17 = add_SNo 1 (add_SNo x17 x17)) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = add_SNo (mul_SNo 2 (mul_SNo (add_SNo 1 2) (x15 x17))) (minus_SNo 1)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_a6c79ef6c5cc95d4a66b77924c0b49aa0f26796f8503272116ecb62ea06c3668 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo x18 x19)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x1 x18 x19 = add_SNo x19 (minus_SNo x18))) -> (forall x18, x18 :e int -> x2 x18 = x18) -> (forall x18, x18 :e int -> x3 x18 = add_SNo 1 x18) -> x4 = 1 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) (x3 x18) x4) -> (forall x18, x18 :e int -> x8 x18 = x7 x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = add_SNo x18 (minus_SNo x19))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x10 x18 x19 = add_SNo x18 x19)) -> (forall x18, x18 :e int -> x11 x18 = add_SNo x18 (minus_SNo 1)) -> (forall x18, x18 :e int -> x12 x18 = add_SNo 2 x18) -> (forall x18, x18 :e int -> x13 x18 = x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) (x12 x18) (x13 x18)) -> (forall x18, x18 :e int -> x17 x18 = If_i (SNoLe x18 0) 1 (x16 x18)) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_db4c0c22965139bdc3931fbebd3d826f96858c19920becc6c072ece5c33ffbec : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15, x15 :e int -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo 1 (mul_SNo (add_SNo 2 x22) x22)) -> x1 = 2 -> x2 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> x4 = x3 x1 x2 -> (forall x22, x22 :e int -> x5 x22 = add_SNo (add_SNo x4 x22) x22) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo x22 x22) -> x12 = 1 -> x13 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23)))) -> x15 = x14 x12 x13 -> (forall x22, x22 :e int -> x16 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x17 x22 = x22) -> x18 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) x18) -> (forall x22, x22 :e int -> x21 x22 = add_SNo (mul_SNo (add_SNo 1 x15) (add_SNo (x20 x22) (minus_SNo 1))) 1) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
