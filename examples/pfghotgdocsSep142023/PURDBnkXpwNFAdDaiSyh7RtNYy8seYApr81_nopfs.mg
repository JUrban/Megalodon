Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_bf60eb76a8e08cb5ba7bb430c3c04c56da26c621320251dde7cf485a00995bd5 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> x0 x32 = mul_SNo x32 x32) -> x1 = 2 -> (forall x32, x32 :e int -> x2 x32 = add_SNo 1 x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x3 x32 x33 = If_i (SNoLe x32 0) x33 (x0 (x3 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x4 x32 = x3 x1 (x2 x32)) -> (forall x32, x32 :e int -> x5 x32 = mul_SNo x32 x32) -> x6 = 2 -> (forall x32, x32 :e int -> x7 x32 = x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x8 x32 x33 = If_i (SNoLe x32 0) x33 (x5 (x8 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x9 x32 = x8 x6 (x7 x32)) -> (forall x32, x32 :e int -> x10 x32 = add_SNo (x4 x32) (minus_SNo (x9 x32))) -> x11 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x12 x32 x33 = x33)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x13 x32 x33 = If_i (SNoLe x32 0) x33 (x10 (x13 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x14 x32 x33 = x13 x11 (x12 x32 x33))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x15 x32 x33 = add_SNo (add_SNo (x14 x32 x33) x32) x32)) -> (forall x32, x32 :e int -> x16 x32 = x32) -> x17 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x18 x32 x33 = If_i (SNoLe x32 0) x33 (x15 (x18 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> x19 x32 = x18 (x16 x32) x17) -> (forall x32, x32 :e int -> x20 x32 = x19 x32) -> (forall x32, x32 :e int -> x21 x32 = mul_SNo (add_SNo 1 (add_SNo x32 x32)) (add_SNo 1 (mul_SNo 2 (add_SNo (mul_SNo x32 x32) x32)))) -> x22 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x23 x32 x33 = x33)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x24 x32 x33 = If_i (SNoLe x32 0) x33 (x21 (x24 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x25 x32 x33 = x24 x22 (x23 x32 x33))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x26 x32 x33 = add_SNo (add_SNo (x25 x32 x33) x32) x32)) -> (forall x32, x32 :e int -> x27 x32 = x32) -> x28 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x29 x32 x33 = If_i (SNoLe x32 0) x33 (x26 (x29 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> x30 x32 = x29 (x27 x32) x28) -> (forall x32, x32 :e int -> x31 x32 = x30 x32) -> (forall x32, x32 :e int -> SNoLe 0 x32 -> x20 x32 = x31 x32))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_7385cecdf57db6e6a1cbb3907529b5d2a591168abfab7475690a3862436a9bbd : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x0 x26 x27 = mul_SNo 2 (add_SNo (add_SNo x26 x26) x27))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x1 x26 x27 = add_SNo (mul_SNo 2 (add_SNo x27 x27)) x27)) -> (forall x26, x26 :e int -> x2 x26 = x26) -> x3 = 1 -> x4 = 2 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x5 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x0 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x6 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x1 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x7 x26 = x5 (x2 x26) x3 x4) -> (forall x26, x26 :e int -> x8 x26 = x7 x26) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x9 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x10 x26 x27 = x27)) -> (forall x26, x26 :e int -> x11 x26 = x26) -> x12 = 2 -> x13 = add_SNo 1 (add_SNo 2 2) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x14 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x9 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x15 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x10 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x16 x26 = x14 (x11 x26) x12 x13) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x26 x27 = x27)) -> (forall x26, x26 :e int -> x19 x26 = x26) -> x20 = add_SNo 1 2 -> x21 = add_SNo 2 2 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x22 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x17 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x23 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x18 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x24 x26 = x22 (x19 x26) x20 x21) -> (forall x26, x26 :e int -> x25 x26 = add_SNo (mul_SNo 2 (x16 x26)) (minus_SNo (x24 x26))) -> (forall x26, x26 :e int -> SNoLe 0 x26 -> x8 x26 = x25 x26))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_673cb04338e2ad7c3a555904301698392f30e93e65b8f33198bddeecc9d1e4cc : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x33 x34 x35 x36 :e int))) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42, x42 :e int -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x0 x46 x47 = add_SNo x46 x47)) -> (forall x46, x46 :e int -> x1 x46 = x46) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x2 x46 x47 = add_SNo x47 x47)) -> x3 = 1 -> x4 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x5 x46 x47 x48 = If_i (SNoLe x46 0) x47 (x0 (x5 (add_SNo x46 (minus_SNo 1)) x47 x48) (x6 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x6 x46 x47 x48 = If_i (SNoLe x46 0) x48 (x1 (x5 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x7 x46 x47 = x5 (x2 x46 x47) x3 x4)) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x8 x46 x47 = add_SNo (x7 x46 x47) (minus_SNo x46))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x9 x46 x47 = add_SNo 1 x47)) -> x10 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x11 x46 x47 = If_i (SNoLe x46 0) x47 (x8 (x11 (add_SNo x46 (minus_SNo 1)) x47) x46))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x12 x46 x47 = x11 (x9 x46 x47) x10)) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x13 x46 x47 = add_SNo (x12 x46 x47) (minus_SNo x46))) -> (forall x46, x46 :e int -> x14 x46 = x46) -> x15 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x16 x46 x47 = If_i (SNoLe x46 0) x47 (x13 (x16 (add_SNo x46 (minus_SNo 1)) x47) x46))) -> (forall x46, x46 :e int -> x17 x46 = x16 (x14 x46) x15) -> (forall x46, x46 :e int -> x18 x46 = x17 x46) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x19 x46 x47 = add_SNo x46 x47)) -> (forall x46, x46 :e int -> x20 x46 = x46) -> (forall x46, x46 :e int -> x21 x46 = add_SNo x46 (minus_SNo 1)) -> x22 = 2 -> x23 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x24 x46 x47 x48 = If_i (SNoLe x46 0) x47 (x19 (x24 (add_SNo x46 (minus_SNo 1)) x47 x48) (x25 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x25 x46 x47 x48 = If_i (SNoLe x46 0) x48 (x20 (x24 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> x26 x46 = x24 (x21 x46) x22 x23) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x27 x46 x47 = add_SNo x46 x47)) -> (forall x46, x46 :e int -> x28 x46 = x46) -> (forall x46, x46 :e int -> x29 x46 = x46) -> x30 = 2 -> x31 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x32 x46 x47 x48 = If_i (SNoLe x46 0) x47 (x27 (x32 (add_SNo x46 (minus_SNo 1)) x47 x48) (x33 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x33 x46 x47 x48 = If_i (SNoLe x46 0) x48 (x28 (x32 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> x34 x46 = x32 (x29 x46) x30 x31) -> (forall x46, x46 :e int -> x35 x46 = mul_SNo (x26 x46) (x34 x46)) -> x36 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x37 x46 x47 = x47)) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x38 x46 x47 = If_i (SNoLe x46 0) x47 (x35 (x38 (add_SNo x46 (minus_SNo 1)) x47)))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x39 x46 x47 = x38 x36 (x37 x46 x47))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x40 x46 x47 = add_SNo (x39 x46 x47) (minus_SNo x46))) -> (forall x46, x46 :e int -> x41 x46 = x46) -> x42 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x43 x46 x47 = If_i (SNoLe x46 0) x47 (x40 (x43 (add_SNo x46 (minus_SNo 1)) x47) x46))) -> (forall x46, x46 :e int -> x44 x46 = x43 (x41 x46) x42) -> (forall x46, x46 :e int -> x45 x46 = x44 x46) -> (forall x46, x46 :e int -> SNoLe 0 x46 -> x18 x46 = x45 x46))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_a59eb934c280547241db0991e5ed8b1544591bf156954e5e3478b65809ae0b0e : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo (add_SNo x28 x28) x29)) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = x29)) -> (forall x28, x28 :e int -> x3 x28 = x28) -> x4 = 0 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x7 x28 x29 = x5 (x2 x28 x29) (x3 x28) x4)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = x7 x28 x29)) -> (forall x28, x28 :e int -> x9 x28 = x28) -> x10 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo (add_SNo x28 x28) x29)) -> (forall x28, x28 :e int -> x15 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = x29)) -> x17 = 2 -> x18 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x21 x28 x29 = x19 (x16 x28 x29) x17 x18)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = mul_SNo (x21 x28 x29) x28)) -> (forall x28, x28 :e int -> x23 x28 = add_SNo x28 (minus_SNo 1)) -> (forall x28, x28 :e int -> x24 x28 = If_i (SNoLe x28 0) 1 2) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) (x24 x28)) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f892b5e78e53c2cac61df371acb198f74b22834c7a46b8eefc22b886d2d487b6 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = mul_SNo 2 (mul_SNo x23 x24))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x1 x23 x24 = x24)) -> (forall x23, x23 :e int -> x2 x23 = x23) -> (forall x23, x23 :e int -> x3 x23 = x23) -> (forall x23, x23 :e int -> x4 x23 = x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) (x3 x23) (x4 x23)) -> (forall x23, x23 :e int -> x8 x23 = add_SNo x23 (x7 x23)) -> (forall x23, x23 :e int -> x9 x23 = add_SNo x23 x23) -> (forall x23, x23 :e int -> x10 x23 = x23) -> (forall x23, x23 :e int -> x11 x23 = x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x12 x23 x24 = If_i (SNoLe x23 0) x24 (x9 (x12 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x13 x23 = x12 (x10 x23) (x11 x23)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = mul_SNo x23 x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x15 x23 x24 = x24)) -> (forall x23, x23 :e int -> x16 x23 = add_SNo x23 (minus_SNo 2)) -> (forall x23, x23 :e int -> x17 x23 = x23) -> (forall x23, x23 :e int -> x18 x23 = x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) (x17 x23) (x18 x23)) -> (forall x23, x23 :e int -> x22 x23 = add_SNo (mul_SNo (mul_SNo (x13 x23) x23) (x21 x23)) x23) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_5291b045949a85a5ed78c80c621e259a8a4b2e647446d94ed430672580825b57 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = mul_SNo x17 x17) -> x1 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x2 x17 x18 = x18)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x4 x17 x18 = x3 x1 (x2 x17 x18))) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x5 x17 x18 = add_SNo (mul_SNo (mul_SNo (x4 x17 x18) x17) x18) x17)) -> (forall x17, x17 :e int -> x6 x17 = x17) -> x7 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x5 (x8 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x6 x17) x7) -> (forall x17, x17 :e int -> x10 x17 = x9 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = mul_SNo (add_SNo 1 (mul_SNo (mul_SNo (mul_SNo (mul_SNo x18 x18) x18) x18) x18)) x17)) -> (forall x17, x17 :e int -> x12 x17 = x17) -> x13 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) x13) -> (forall x17, x17 :e int -> x16 x17 = x15 x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_48a4275883e441575488748e44661461fccb0c11ca04963a1696e13a1d2dad72 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = add_SNo (mul_SNo (mul_SNo (mul_SNo x17 x18) x18) x18) x17)) -> (forall x17, x17 :e int -> x1 x17 = x17) -> x2 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x6 x17 x18 = mul_SNo (add_SNo 1 (add_SNo (mul_SNo x18 x18) x18)) x17)) -> (forall x17, x17 :e int -> x7 x17 = add_SNo x17 (minus_SNo 1)) -> x8 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x9 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x9 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x10 x17 = x9 (x7 x17) x8) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = mul_SNo x17 x18)) -> (forall x17, x17 :e int -> x12 x17 = x17) -> (forall x17, x17 :e int -> x13 x17 = add_SNo 1 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (x10 x17) (x15 x17)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_d5a85b34afc3d3cc933ca7e78c6796f6f864c69513187498ae85c16f98f50f47 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = add_SNo x23 (minus_SNo 1))) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) x2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (mul_SNo x22 x23) (x4 x22 x23))) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = add_SNo x23 (minus_SNo 1))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x13 x22 x23 = x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) (x13 x22 x23))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (x15 x22 x23) (mul_SNo (add_SNo 1 x23) x22))) -> (forall x22, x22 :e int -> x17 x22 = add_SNo x22 (minus_SNo 1)) -> (forall x22, x22 :e int -> x18 x22 = If_i (SNoLe x22 0) 0 1) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_752d945bb731e67dfb6b6f711afa263d82bb362ead720d609f576e591fede491 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42, x42 :e int -> x0 x42 = mul_SNo x42 x42) -> x1 = 2 -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x2 x42 x43 = x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x3 x42 x43 = If_i (SNoLe x42 0) x43 (x0 (x3 (add_SNo x42 (minus_SNo 1)) x43)))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x4 x42 x43 = x3 x1 (x2 x42 x43))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x5 x42 x43 = add_SNo (mul_SNo (mul_SNo (mul_SNo (x4 x42 x43) x43) x43) x43) x42)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x6 x42 x43 = x43)) -> (forall x42, x42 :e int -> x7 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x8 x42 x43 = If_i (SNoLe x42 0) x43 (x5 (x8 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x9 x42 x43 = x8 (x6 x42 x43) (x7 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x10 x42 x43 = x9 x42 x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x11 x42 x43 = add_SNo 1 x43)) -> (forall x42, x42 :e int -> x12 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x13 x42 x43 = If_i (SNoLe x42 0) x43 (x10 (x13 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x14 x42 x43 = x13 (x11 x42 x43) (x12 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x15 x42 x43 = x14 x42 x43)) -> (forall x42, x42 :e int -> x16 x42 = x42) -> x17 = 1 -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x18 x42 x43 = If_i (SNoLe x42 0) x43 (x15 (x18 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> x19 x42 = x18 (x16 x42) x17) -> (forall x42, x42 :e int -> x20 x42 = x19 x42) -> (forall x42, x42 :e int -> x21 x42 = mul_SNo (mul_SNo x42 x42) x42) -> x22 = 1 -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x23 x42 x43 = mul_SNo x43 x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x24 x42 x43 = If_i (SNoLe x42 0) x43 (x21 (x24 (add_SNo x42 (minus_SNo 1)) x43)))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x25 x42 x43 = x24 x22 (x23 x42 x43))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x26 x42 x43 = add_SNo (mul_SNo (x25 x42 x43) x43) x42)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x27 x42 x43 = x43)) -> (forall x42, x42 :e int -> x28 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x29 x42 x43 = If_i (SNoLe x42 0) x43 (x26 (x29 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x30 x42 x43 = x29 (x27 x42 x43) (x28 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x31 x42 x43 = x30 x42 x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x32 x42 x43 = x43)) -> (forall x42, x42 :e int -> x33 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x34 x42 x43 = If_i (SNoLe x42 0) x43 (x31 (x34 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x35 x42 x43 = x34 (x32 x42 x43) (x33 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x36 x42 x43 = x35 x42 x43)) -> (forall x42, x42 :e int -> x37 x42 = add_SNo 1 x42) -> x38 = 0 -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x39 x42 x43 = If_i (SNoLe x42 0) x43 (x36 (x39 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> x40 x42 = x39 (x37 x42) x38) -> (forall x42, x42 :e int -> x41 x42 = x40 x42) -> (forall x42, x42 :e int -> SNoLe 0 x42 -> x20 x42 = x41 x42))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_aca2126959dd1d2cf6edb997fdd326931d3999eef14c98aea2f668b79e685ed5 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo (add_SNo x28 x28) x28) -> x1 = 2 -> (forall x28, x28 :e int -> x2 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x4 x28 = x3 x1 (x2 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = mul_SNo (add_SNo 1 (add_SNo x29 x29)) (x4 x28))) -> (forall x28, x28 :e int -> x6 x28 = x28) -> x7 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = If_i (SNoLe x28 0) x29 (x5 (x8 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x9 x28 = x8 (x6 x28) x7) -> (forall x28, x28 :e int -> x10 x28 = x9 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x12 x28 x29 = add_SNo 2 x29)) -> (forall x28, x28 :e int -> x13 x28 = x28) -> x14 = 1 -> x15 = add_SNo 1 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x16 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x11 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x17 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x12 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x18 x28 = x16 (x13 x28) x14 x15) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = add_SNo 2 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x10 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_97c4a5de9bda1978067a8d7132e675e6b1912ac1fef911f88a93da11b7ab3229 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x0 x31 x32 = add_SNo (add_SNo x32 (minus_SNo x31)) (minus_SNo x31))) -> (forall x31, x31 :e int -> x1 x31 = x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x2 x31 x32 = mul_SNo 2 (add_SNo x32 x32))) -> x3 = 1 -> x4 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x5 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x0 (x5 (add_SNo x31 (minus_SNo 1)) x32 x33) (x6 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x6 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x1 (x5 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x7 x31 x32 = x5 (x2 x31 x32) x3 x4)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x8 x31 x32 = add_SNo (x7 x31 x32) x31)) -> (forall x31, x31 :e int -> x9 x31 = x31) -> x10 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x11 x31 x32 = If_i (SNoLe x31 0) x32 (x8 (x11 (add_SNo x31 (minus_SNo 1)) x32) x31))) -> (forall x31, x31 :e int -> x12 x31 = x11 (x9 x31) x10) -> (forall x31, x31 :e int -> x13 x31 = x12 x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x31 x31) x31)) (minus_SNo x32))) -> (forall x31, x31 :e int -> x15 x31 = x31) -> (forall x31, x31 :e int -> x16 x31 = add_SNo x31 (minus_SNo 1)) -> (forall x31, x31 :e int -> x17 x31 = add_SNo (If_i (SNoLe x31 0) 0 2) 1) -> x18 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) (x17 x31) x18) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x31 x31) x31)) (minus_SNo x32))) -> (forall x31, x31 :e int -> x23 x31 = x31) -> (forall x31, x31 :e int -> x24 x31 = x31) -> x25 = 1 -> x26 = 0 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) x25 x26) -> (forall x31, x31 :e int -> x30 x31 = mul_SNo (x21 x31) (x29 x31)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_edeb520ce5877916a43571aae6972ab94a929dc2e49382ab4c06738c5989d3f3 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo x17 x17) -> x2 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = add_SNo 1 (add_SNo 2 (x4 x17))) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = add_SNo 1 (add_SNo 2 (x15 x17))) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_1095aa2830040c55468f9f32907642b039d9db93805fca52e9b574263ece021f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> x0 x12 = add_SNo 1 (add_SNo x12 x12)) -> (forall x12, x12 :e int -> x1 x12 = x12) -> (forall x12, x12 :e int -> x2 x12 = add_SNo 2 (add_SNo 2 x12)) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = add_SNo (mul_SNo (x4 x12) (add_SNo 2 x12)) 1) -> (forall x12, x12 :e int -> x6 x12 = add_SNo x12 x12) -> (forall x12, x12 :e int -> x7 x12 = x12) -> (forall x12, x12 :e int -> x8 x12 = add_SNo 1 (add_SNo 2 (add_SNo 2 x12))) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo (mul_SNo (add_SNo (x10 x12) (minus_SNo 1)) (add_SNo 2 x12)) 1) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_43e1148b3ec011dae8f9d23e025b35e80a46319aef2c3185ac29a0733ee0837a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> x0 x32 = mul_SNo x32 x32) -> x1 = 2 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x2 x32 x33 = x33)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x3 x32 x33 = If_i (SNoLe x32 0) x33 (x0 (x3 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x4 x32 x33 = x3 x1 (x2 x32 x33))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x5 x32 x33 = add_SNo (mul_SNo (mul_SNo (mul_SNo (x4 x32 x33) x33) x33) x33) x32)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x6 x32 x33 = add_SNo 1 x33)) -> (forall x32, x32 :e int -> x7 x32 = x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x8 x32 x33 = If_i (SNoLe x32 0) x33 (x5 (x8 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x9 x32 x33 = x8 (x6 x32 x33) (x7 x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x10 x32 x33 = x9 x32 x33)) -> (forall x32, x32 :e int -> x11 x32 = x32) -> x12 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x13 x32 x33 = If_i (SNoLe x32 0) x33 (x10 (x13 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> x14 x32 = x13 (x11 x32) x12) -> (forall x32, x32 :e int -> x15 x32 = x14 x32) -> (forall x32, x32 :e int -> x16 x32 = mul_SNo (mul_SNo x32 x32) x32) -> x17 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x18 x32 x33 = mul_SNo x33 x33)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x32 x33 = If_i (SNoLe x32 0) x33 (x16 (x19 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x32 x33 = x19 x17 (x18 x32 x33))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x21 x32 x33 = add_SNo (mul_SNo (x20 x32 x33) x33) x32)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x22 x32 x33 = x33)) -> (forall x32, x32 :e int -> x23 x32 = x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x24 x32 x33 = If_i (SNoLe x32 0) x33 (x21 (x24 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x25 x32 x33 = x24 (x22 x32 x33) (x23 x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x26 x32 x33 = x25 x32 x33)) -> (forall x32, x32 :e int -> x27 x32 = add_SNo 1 x32) -> x28 = 0 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x29 x32 x33 = If_i (SNoLe x32 0) x33 (x26 (x29 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> x30 x32 = x29 (x27 x32) x28) -> (forall x32, x32 :e int -> x31 x32 = x30 x32) -> (forall x32, x32 :e int -> SNoLe 0 x32 -> x15 x32 = x31 x32))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_9a7fe6e2864e93be988cd7d6fbbf8ae0ea9528d0708a51ccb69875806980d4c4 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo 2 (add_SNo x22 (minus_SNo x23)))) -> (forall x22, x22 :e int -> x1 x22 = x22) -> (forall x22, x22 :e int -> x2 x22 = add_SNo 2 (add_SNo x22 x22)) -> (forall x22, x22 :e int -> x3 x22 = x22) -> x4 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = If_i (SNoLe x22 0) x23 (x2 (x5 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x6 x22 = x5 (x3 x22) x4) -> (forall x22, x22 :e int -> x7 x22 = x6 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x1 x22) (x7 x22)) -> (forall x22, x22 :e int -> x10 x22 = mul_SNo 2 (x9 x22)) -> (forall x22, x22 :e int -> x11 x22 = add_SNo (mul_SNo x22 x22) x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = add_SNo 1 (minus_SNo (x17 x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = mul_SNo (add_SNo (add_SNo (add_SNo (x20 x22) 2) x22) x22) 2) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_a2cccd0b28da95da052c4ba8859f5c2cb7bb8a5ce638d2a3a41ccd83bbe54d99 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35, x35 :e int -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = add_SNo 1 (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x1 x45 x46 = x46)) -> x2 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x4 x45 x46 = x3 (x1 x45 x46) x2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x5 x45 x46 = add_SNo (x4 x45 x46) (mul_SNo 2 (mul_SNo 2 (add_SNo x45 x45))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x6 x45 x46 = x46)) -> x7 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x8 (x6 x45 x46) x7)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = mul_SNo (add_SNo 2 x46) x45)) -> x11 = 2 -> (forall x45, x45 :e int -> x12 x45 = x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x14 x45 = x13 x11 (x12 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x15 x45 x46 = add_SNo (x9 x45 x46) (x14 x45))) -> (forall x45, x45 :e int -> x16 x45 = x45) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x19 x45 = x18 (x16 x45) x17) -> (forall x45, x45 :e int -> x20 x45 = x19 x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x21 x45 x46 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45)) x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x22 x45 x46 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo x46 x46))))) -> (forall x45, x45 :e int -> x23 x45 = x45) -> x24 = 1 -> x25 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x26 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x21 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x27 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x22 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x28 x45 = x26 (x23 x45) x24 x25) -> (forall x45, x45 :e int -> x29 x45 = x28 x45) -> x30 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x31 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x45 x46 = If_i (SNoLe x45 0) x46 (x29 (x32 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x33 x45 x46 = x32 x30 (x31 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x34 x45 x46 = mul_SNo (add_SNo 2 x46) x45)) -> x35 = 2 -> (forall x45, x45 :e int -> x36 x45 = x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x38 x45 = x37 x35 (x36 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (x33 x45 x46) (x38 x45))) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x20 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_224d7cb56505e5c6df9fdd1162af375c3a143f13baea04cda05c7d9e931ee690 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16, x16 :e int -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo x50 x50)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x1 x50 x51 = x51)) -> x2 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x3 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x3 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x4 x50 x51 = x3 (x1 x50 x51) x2)) -> (forall x50, x50 :e int -> x5 x50 = add_SNo (add_SNo x50 x50) x50) -> x6 = 2 -> (forall x50, x50 :e int -> x7 x50 = x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x5 (x8 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x9 x50 = x8 x6 (x7 x50)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x10 x50 x51 = add_SNo (x4 x50 x51) (x9 x50))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x11 x50 x51 = x51)) -> x12 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x14 x50 x51 = x13 (x11 x50 x51) x12)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = mul_SNo (add_SNo 2 x51) x50)) -> x16 = 2 -> (forall x50, x50 :e int -> x17 x50 = x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x19 x50 = x18 x16 (x17 x50)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x20 x50 x51 = add_SNo (add_SNo (x14 x50 x51) (minus_SNo x50)) (x19 x50))) -> (forall x50, x50 :e int -> x21 x50 = x50) -> x22 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x23 x50 x51 = If_i (SNoLe x50 0) x51 (x20 (x23 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x24 x50 = x23 (x21 x50) x22) -> (forall x50, x50 :e int -> x25 x50 = x24 x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x26 x50 x51 = add_SNo 1 (mul_SNo x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x27 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x28 x50 x51 = x51)) -> x29 = 1 -> x30 = mul_SNo 2 (add_SNo 2 2) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x31 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x26 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x32 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x27 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x33 x50 x51 = x31 (x28 x50 x51) x29 x30)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x34 x50 x51 = add_SNo (add_SNo (x33 x50 x51) (mul_SNo (mul_SNo (add_SNo x50 x50) 2) 2)) x50)) -> (forall x50, x50 :e int -> x35 x50 = x50) -> x36 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x37 x50 x51 = If_i (SNoLe x50 0) x51 (x34 (x37 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x38 x50 = x37 (x35 x50) x36) -> (forall x50, x50 :e int -> x39 x50 = x38 x50) -> x40 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x41 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x43 x50 x51 = x42 x40 (x41 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x44 x50 x51 = add_SNo (add_SNo (x43 x50 x51) x50) (mul_SNo (add_SNo (mul_SNo (add_SNo x50 x50) 2) x50) 2))) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = x48 x50) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x25 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c767f2d574a8bec23f795e1aa6a2ef46e408a2e83243b53ff4900e4d6b3f6610 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> x0 x35 = add_SNo (add_SNo x35 x35) x35) -> x1 = 2 -> (forall x35, x35 :e int -> x2 x35 = x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x3 x35 x36 = If_i (SNoLe x35 0) x36 (x0 (x3 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x4 x35 = x3 x1 (x2 x35)) -> (forall x35, x35 :e int -> x5 x35 = add_SNo 1 (x4 x35)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x6 x35 x36 = x36)) -> x7 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x8 x35 x36 = If_i (SNoLe x35 0) x36 (x5 (x8 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x9 x35 x36 = x8 (x6 x35 x36) x7)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x10 x35 x36 = mul_SNo x35 x36)) -> x11 = add_SNo 2 2 -> (forall x35, x35 :e int -> x12 x35 = x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x35 x36 = If_i (SNoLe x35 0) x36 (x10 (x13 (add_SNo x35 (minus_SNo 1)) x36) x35))) -> (forall x35, x35 :e int -> x14 x35 = x13 x11 (x12 x35)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x15 x35 x36 = add_SNo (add_SNo (x9 x35 x36) (x14 x35)) x35)) -> (forall x35, x35 :e int -> x16 x35 = x35) -> x17 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x18 x35 x36 = If_i (SNoLe x35 0) x36 (x15 (x18 (add_SNo x35 (minus_SNo 1)) x36) x35))) -> (forall x35, x35 :e int -> x19 x35 = x18 (x16 x35) x17) -> (forall x35, x35 :e int -> x20 x35 = x19 x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x21 x35 x36 = add_SNo 1 (mul_SNo x35 x36))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x22 x35 x36 = x36)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x23 x35 x36 = x36)) -> x24 = 1 -> x25 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2)))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x26 x35 x36 x37 = If_i (SNoLe x35 0) x36 (x21 (x26 (add_SNo x35 (minus_SNo 1)) x36 x37) (x27 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x27 x35 x36 x37 = If_i (SNoLe x35 0) x37 (x22 (x26 (add_SNo x35 (minus_SNo 1)) x36 x37) (x27 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x28 x35 x36 = x26 (x23 x35 x36) x24 x25)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x29 x35 x36 = add_SNo (add_SNo (x28 x35 x36) (mul_SNo (mul_SNo (mul_SNo x35 2) 2) 2)) x35)) -> (forall x35, x35 :e int -> x30 x35 = x35) -> x31 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x32 x35 x36 = If_i (SNoLe x35 0) x36 (x29 (x32 (add_SNo x35 (minus_SNo 1)) x36) x35))) -> (forall x35, x35 :e int -> x33 x35 = x32 (x30 x35) x31) -> (forall x35, x35 :e int -> x34 x35 = x33 x35) -> (forall x35, x35 :e int -> SNoLe 0 x35 -> x20 x35 = x34 x35)))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_87c3ef5ecb6b319b55fd8fca5eddd004ca74f9c2f33b7b236a298667a590b627 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo 1 (mul_SNo 2 (add_SNo x25 x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x1 x25 x26 = x26)) -> x2 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = x3 (x1 x25 x26) x2)) -> (forall x25, x25 :e int -> x5 x25 = add_SNo (add_SNo x25 x25) x25) -> x6 = 2 -> (forall x25, x25 :e int -> x7 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 x6 (x7 x25)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x10 x25 x26 = add_SNo (x4 x25 x26) (x9 x25))) -> (forall x25, x25 :e int -> x11 x25 = x25) -> x12 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = If_i (SNoLe x25 0) x26 (x10 (x13 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x14 x25 = x13 (x11 x25) x12) -> (forall x25, x25 :e int -> x15 x25 = x14 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x16 x25 x26 = add_SNo (mul_SNo (add_SNo 1 (mul_SNo 2 (add_SNo 2 2))) x25) x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x17 x25 x26 = add_SNo 1 (mul_SNo 2 (add_SNo x26 x26)))) -> (forall x25, x25 :e int -> x18 x25 = x25) -> x19 = 1 -> x20 = add_SNo 1 (add_SNo 2 2) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x16 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x17 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x18 x25) x19 x20) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x15 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_fc949b4cc2fe71a22d9009ed2c8d400b8413537dbc2680f0011e80e486a7ad60 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x0 x43 x44 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43)) (mul_SNo x44 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x1 x43 x44 = add_SNo x44 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x2 x43 x44 = x44)) -> x3 = 0 -> x4 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x5 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x0 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x6 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x1 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x7 x43 x44 = x5 (x2 x43 x44) x3 x4)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x8 x43 x44 = add_SNo (add_SNo (x7 x43 x44) (mul_SNo 2 (add_SNo x43 x43))) x43)) -> (forall x43, x43 :e int -> x9 x43 = x43) -> x10 = 0 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x11 x43 x44 = If_i (SNoLe x43 0) x44 (x8 (x11 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x12 x43 = x11 (x9 x43) x10) -> (forall x43, x43 :e int -> x13 x43 = mul_SNo (x12 x43) 2) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x14 x43 x44 = mul_SNo x43 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x15 x43 x44 = x44)) -> (forall x43, x43 :e int -> x16 x43 = x43) -> x17 = 1 -> x18 = add_SNo 2 (add_SNo 2 2) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x19 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x14 (x19 (add_SNo x43 (minus_SNo 1)) x44 x45) (x20 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x20 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x15 (x19 (add_SNo x43 (minus_SNo 1)) x44 x45) (x20 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x21 x43 = x19 (x16 x43) x17 x18) -> (forall x43, x43 :e int -> x22 x43 = mul_SNo x43 x43) -> x23 = 1 -> (forall x43, x43 :e int -> x24 x43 = add_SNo x43 x43) -> (forall x43, x43 :e int -> x25 x43 = add_SNo x43 (minus_SNo 1)) -> x26 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x27 x43 x44 = If_i (SNoLe x43 0) x44 (x24 (x27 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x28 x43 = x27 (x25 x43) x26) -> (forall x43, x43 :e int -> x29 x43 = x28 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x30 x43 x44 = If_i (SNoLe x43 0) x44 (x22 (x30 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x31 x43 = x30 x23 (x29 x43)) -> (forall x43, x43 :e int -> x32 x43 = add_SNo (x21 x43) (minus_SNo (x31 x43))) -> x33 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x34 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x35 x43 x44 = If_i (SNoLe x43 0) x44 (x32 (x35 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x36 x43 x44 = x35 x33 (x34 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x37 x43 x44 = add_SNo (add_SNo (add_SNo (add_SNo (add_SNo (x36 x43 x44) x43) x43) x43) x43) x43)) -> (forall x43, x43 :e int -> x38 x43 = x43) -> x39 = 0 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x37 (x40 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x41 x43 = x40 (x38 x43) x39) -> (forall x43, x43 :e int -> x42 x43 = x41 x43) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x13 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
