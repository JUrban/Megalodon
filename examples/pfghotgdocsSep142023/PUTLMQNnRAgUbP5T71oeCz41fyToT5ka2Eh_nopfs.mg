Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_1cb2470bcd88b67fcd32dda1b018639903c044d2d9453a67baa62892ea84f7e9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> x0 x23 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x23 x23)) x23)) -> (forall x23, x23 :e int -> x1 x23 = mul_SNo (add_SNo 1 2) (add_SNo 1 x23)) -> x2 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x3 x23 x24 = If_i (SNoLe x23 0) x24 (x0 (x3 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x4 x23 = x3 (x1 x23) x2) -> (forall x23, x23 :e int -> x5 x23 = x4 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x6 x23 x24 = mul_SNo x23 x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x7 x23 x24 = x24)) -> (forall x23, x23 :e int -> x8 x23 = add_SNo 1 x23) -> x9 = 1 -> x10 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2)))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x11 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x6 (x11 (add_SNo x23 (minus_SNo 1)) x24 x25) (x12 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x12 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x7 (x11 (add_SNo x23 (minus_SNo 1)) x24 x25) (x12 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x13 x23 = x11 (x8 x23) x9 x10) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = mul_SNo x23 x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x15 x23 x24 = x24)) -> (forall x23, x23 :e int -> x16 x23 = add_SNo 1 x23) -> x17 = 1 -> x18 = mul_SNo 2 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) x17 x18) -> (forall x23, x23 :e int -> x22 x23 = mul_SNo (x13 x23) (x21 x23)) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x5 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_de87cd9c6a706610c23637ed3b7cf96c5b80228509db2ce52c97882f78cba0a5 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x33 x34 x35 x36 :e int))) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> x0 x36 = mul_SNo x36 x36) -> x1 = 1 -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x2 x36 x37 = add_SNo x36 x37)) -> (forall x36, x36 :e int -> x3 x36 = x36) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x4 x36 x37 = x37)) -> x5 = 1 -> x6 = 2 -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x7 x36 x37 x38 = If_i (SNoLe x36 0) x37 (x2 (x7 (add_SNo x36 (minus_SNo 1)) x37 x38) (x8 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x8 x36 x37 x38 = If_i (SNoLe x36 0) x38 (x3 (x7 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x9 x36 x37 = x7 (x4 x36 x37) x5 x6)) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x10 x36 x37 = x9 x36 x37)) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x11 x36 x37 = If_i (SNoLe x36 0) x37 (x0 (x11 (add_SNo x36 (minus_SNo 1)) x37)))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x12 x36 x37 = x11 x1 (x10 x36 x37))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x13 x36 x37 = add_SNo (x12 x36 x37) x36)) -> (forall x36, x36 :e int -> x14 x36 = x36) -> x15 = 1 -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x16 x36 x37 = If_i (SNoLe x36 0) x37 (x13 (x16 (add_SNo x36 (minus_SNo 1)) x37) x36))) -> (forall x36, x36 :e int -> x17 x36 = x16 (x14 x36) x15) -> (forall x36, x36 :e int -> x18 x36 = x17 x36) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x19 x36 x37 = add_SNo x36 x37)) -> (forall x36, x36 :e int -> x20 x36 = x36) -> (forall x36, x36 :e int -> x21 x36 = x36) -> x22 = 1 -> x23 = 2 -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x24 x36 x37 x38 = If_i (SNoLe x36 0) x37 (x19 (x24 (add_SNo x36 (minus_SNo 1)) x37 x38) (x25 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x25 x36 x37 x38 = If_i (SNoLe x36 0) x38 (x20 (x24 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> x26 x36 = x24 (x21 x36) x22 x23) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x27 x36 x37 = add_SNo x36 x37)) -> (forall x36, x36 :e int -> x28 x36 = x36) -> (forall x36, x36 :e int -> x29 x36 = x36) -> x30 = add_SNo 1 2 -> x31 = 1 -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x32 x36 x37 x38 = If_i (SNoLe x36 0) x37 (x27 (x32 (add_SNo x36 (minus_SNo 1)) x37 x38) (x33 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x33 x36 x37 x38 = If_i (SNoLe x36 0) x38 (x28 (x32 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> x34 x36 = x32 (x29 x36) x30 x31) -> (forall x36, x36 :e int -> x35 x36 = add_SNo (mul_SNo (x26 x36) (x34 x36)) (minus_SNo 2)) -> (forall x36, x36 :e int -> SNoLe 0 x36 -> x18 x36 = x35 x36))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b58afd8c5a5e509d2f2fdd936df211bdfedfa71de4d97d2da2ab7cca5d45a710 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = mul_SNo x38 x38) -> x1 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x2 x38 x39 = add_SNo x38 x39)) -> (forall x38, x38 :e int -> x3 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x4 x38 x39 = x39)) -> x5 = 1 -> x6 = 0 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x7 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x2 (x7 (add_SNo x38 (minus_SNo 1)) x39 x40) (x8 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x8 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x3 (x7 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x9 x38 x39 = x7 (x4 x38 x39) x5 x6)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x10 x38 x39 = x9 x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x11 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x11 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x12 x38 x39 = x11 x1 (x10 x38 x39))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = add_SNo (x12 x38 x39) x38)) -> (forall x38, x38 :e int -> x14 x38 = x38) -> x15 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x16 x38 x39 = If_i (SNoLe x38 0) x39 (x13 (x16 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> x17 x38 = x16 (x14 x38) x15) -> (forall x38, x38 :e int -> x18 x38 = x17 x38) -> (forall x38, x38 :e int -> x19 x38 = mul_SNo x38 x38) -> x20 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x21 x38 x39 = add_SNo x38 x39)) -> (forall x38, x38 :e int -> x22 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x23 x38 x39 = add_SNo x39 (minus_SNo 1))) -> x24 = 1 -> x25 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x26 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x21 (x26 (add_SNo x38 (minus_SNo 1)) x39 x40) (x27 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x27 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x22 (x26 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x28 x38 x39 = x26 (x23 x38 x39) x24 x25)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = x28 x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = If_i (SNoLe x38 0) x39 (x19 (x30 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x31 x38 x39 = x30 x20 (x29 x38 x39))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x32 x38 x39 = add_SNo (x31 x38 x39) x38)) -> (forall x38, x38 :e int -> x33 x38 = x38) -> x34 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x35 x38 x39 = If_i (SNoLe x38 0) x39 (x32 (x35 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> x36 x38 = x35 (x33 x38) x34) -> (forall x38, x38 :e int -> x37 x38 = x36 x38) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x18 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6e2f41a6f3c2305629e4078a77f8918e3c77cbd48fbe74013887c4e65e70c5d3 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = mul_SNo (mul_SNo x38 x38) x38) -> x1 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x2 x38 x39 = add_SNo x38 x39)) -> (forall x38, x38 :e int -> x3 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x4 x38 x39 = x39)) -> x5 = 0 -> x6 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x7 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x2 (x7 (add_SNo x38 (minus_SNo 1)) x39 x40) (x8 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x8 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x3 (x7 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x9 x38 x39 = x7 (x4 x38 x39) x5 x6)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x10 x38 x39 = x9 x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x11 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x11 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x12 x38 x39 = x11 x1 (x10 x38 x39))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = add_SNo (x12 x38 x39) x38)) -> (forall x38, x38 :e int -> x14 x38 = x38) -> x15 = 0 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x16 x38 x39 = If_i (SNoLe x38 0) x39 (x13 (x16 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> x17 x38 = x16 (x14 x38) x15) -> (forall x38, x38 :e int -> x18 x38 = x17 x38) -> (forall x38, x38 :e int -> x19 x38 = mul_SNo (mul_SNo x38 x38) x38) -> x20 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x21 x38 x39 = add_SNo x38 x39)) -> (forall x38, x38 :e int -> x22 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x23 x38 x39 = add_SNo x39 (minus_SNo 2))) -> x24 = 1 -> x25 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x26 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x21 (x26 (add_SNo x38 (minus_SNo 1)) x39 x40) (x27 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x27 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x22 (x26 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x28 x38 x39 = x26 (x23 x38 x39) x24 x25)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = x28 x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = If_i (SNoLe x38 0) x39 (x19 (x30 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x31 x38 x39 = x30 x20 (x29 x38 x39))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x32 x38 x39 = add_SNo (x31 x38 x39) x38)) -> (forall x38, x38 :e int -> x33 x38 = x38) -> x34 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x35 x38 x39 = If_i (SNoLe x38 0) x39 (x32 (x35 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> x36 x38 = x35 (x33 x38) x34) -> (forall x38, x38 :e int -> x37 x38 = add_SNo (x36 x38) (minus_SNo 1)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x18 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e8069b9b4f324668741dd1639800ca51ebdbe689bd39f0f94beeaa4750196d32 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> x0 x12 = add_SNo (add_SNo x12 (minus_SNo 1)) x12) -> (forall x12, x12 :e int -> x1 x12 = x12) -> (forall x12, x12 :e int -> x2 x12 = add_SNo x12 x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = add_SNo (x4 x12) (minus_SNo x12)) -> (forall x12, x12 :e int -> x6 x12 = add_SNo x12 x12) -> (forall x12, x12 :e int -> x7 x12 = x12) -> (forall x12, x12 :e int -> x8 x12 = add_SNo (add_SNo x12 (minus_SNo 1)) x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo 1 (add_SNo (x10 x12) (minus_SNo x12))) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_46ae3529fbe60b427fc555941c057a6371cbca2a7574a0cade4478666d87e03c : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo (mul_SNo x28 x29) x28)) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x3 x28 = x28) -> (forall x28, x28 :e int -> x4 x28 = x28) -> x5 = 2 -> x6 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x7 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x2 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30) (x8 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x8 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x3 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x9 x28 = x7 (x4 x28) x5 x6) -> (forall x28, x28 :e int -> x10 x28 = If_i (SNoLe x28 0) 1 (x9 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x1 x28) (x10 x28)) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> x15 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x17 x28 = x28) -> (forall x28, x28 :e int -> x18 x28 = x28) -> x19 = 2 -> x20 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x21 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x16 (x21 (add_SNo x28 (minus_SNo 1)) x29 x30) (x22 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x22 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x17 (x21 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x23 x28 = x21 (x18 x28) x19 x20) -> (forall x28, x28 :e int -> x24 x28 = x23 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x15 x28) (x24 x28)) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (If_i (SNoLe x28 0) 1 (x26 x28)) (add_SNo 1 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5a5513d1e5e904e63ded4fe8462439c8038512a0f7a67cad79df344f0ef9fe06 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x3 x28 = x28) -> (forall x28, x28 :e int -> x4 x28 = x28) -> x5 = 2 -> x6 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x7 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x2 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30) (x8 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x8 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x3 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x9 x28 = x7 (x4 x28) x5 x6) -> (forall x28, x28 :e int -> x10 x28 = x9 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x1 x28) (x10 x28)) -> (forall x28, x28 :e int -> x13 x28 = If_i (SNoLe x28 0) 1 (x12 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x15 x28 = x28) -> (forall x28, x28 :e int -> x16 x28 = x28) -> x17 = 2 -> x18 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x21 x28 = x19 (x16 x28) x17 x18) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> x23 x28 = x28) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (If_i (SNoLe x28 0) 1 (x21 x28)) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e0014145571e6408ae89b8d1d9da9843b035fd6be3adadaa5f9f873f999bea5a : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x0 x42 x43 = add_SNo x42 x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x1 x42 x43 = add_SNo x43 (minus_SNo 2))) -> (forall x42, x42 :e int -> x2 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x3 x42 x43 = If_i (SNoLe x42 0) x43 (x0 (x3 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x4 x42 x43 = x3 (x1 x42 x43) (x2 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x5 x42 x43 = x4 x42 x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x6 x42 x43 = x43)) -> (forall x42, x42 :e int -> x7 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x8 x42 x43 = If_i (SNoLe x42 0) x43 (x5 (x8 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x9 x42 x43 = x8 (x6 x42 x43) (x7 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x10 x42 x43 = add_SNo (x9 x42 x43) x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x11 x42 x43 = add_SNo x43 (minus_SNo 2))) -> (forall x42, x42 :e int -> x12 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x13 x42 x43 = If_i (SNoLe x42 0) x43 (x10 (x13 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x14 x42 x43 = x13 (x11 x42 x43) (x12 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x15 x42 x43 = x14 x42 x43)) -> (forall x42, x42 :e int -> x16 x42 = x42) -> x17 = 1 -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x18 x42 x43 = If_i (SNoLe x42 0) x43 (x15 (x18 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> x19 x42 = x18 (x16 x42) x17) -> (forall x42, x42 :e int -> x20 x42 = add_SNo (mul_SNo (add_SNo (x19 x42) x42) 2) (minus_SNo (If_i (SNoLe x42 0) 1 2))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x21 x42 x43 = add_SNo x42 x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x22 x42 x43 = x43)) -> (forall x42, x42 :e int -> x23 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x24 x42 x43 = If_i (SNoLe x42 0) x43 (x21 (x24 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x25 x42 x43 = x24 (x22 x42 x43) (x23 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x26 x42 x43 = x25 x42 x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x27 x42 x43 = add_SNo x43 (minus_SNo 2))) -> (forall x42, x42 :e int -> x28 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x29 x42 x43 = If_i (SNoLe x42 0) x43 (x26 (x29 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x30 x42 x43 = x29 (x27 x42 x43) (x28 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x31 x42 x43 = add_SNo (x30 x42 x43) x43)) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x32 x42 x43 = add_SNo x43 (minus_SNo 2))) -> (forall x42, x42 :e int -> x33 x42 = x42) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x34 x42 x43 = If_i (SNoLe x42 0) x43 (x31 (x34 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x35 x42 x43 = x34 (x32 x42 x43) (x33 x42))) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x36 x42 x43 = x35 x42 x43)) -> (forall x42, x42 :e int -> x37 x42 = x42) -> x38 = 1 -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x39 x42 x43 = If_i (SNoLe x42 0) x43 (x36 (x39 (add_SNo x42 (minus_SNo 1)) x43) x42))) -> (forall x42, x42 :e int -> x40 x42 = x39 (x37 x42) x38) -> (forall x42, x42 :e int -> x41 x42 = add_SNo (mul_SNo (add_SNo (x40 x42) x42) 2) (minus_SNo (If_i (SNoLe x42 0) 1 2))) -> (forall x42, x42 :e int -> SNoLe 0 x42 -> x20 x42 = x41 x42))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_d8c4539bc33bb38a7f1ae0de0ba8d18ada97367472d92f7a5617aa464c0f8b3c : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x0 x15 x16 = add_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x1 x15 x16 = mul_SNo (add_SNo 2 (add_SNo 2 x16)) 2)) -> (forall x15, x15 :e int -> x2 x15 = add_SNo 2 x15) -> (forall x15, x15 :e int -> x3 x15 = x15) -> x4 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x5 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x0 (x5 (add_SNo x15 (minus_SNo 1)) x16 x17) (x6 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x6 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x1 (x5 (add_SNo x15 (minus_SNo 1)) x16 x17) (x6 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x7 x15 = x5 (x2 x15) (x3 x15) x4) -> (forall x15, x15 :e int -> x8 x15 = x7 x15) -> (forall x15, x15 :e int -> x9 x15 = add_SNo x15 x15) -> (forall x15, x15 :e int -> x10 x15 = x15) -> x11 = add_SNo 1 2 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x12 x15 x16 = If_i (SNoLe x15 0) x16 (x9 (x12 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x13 x15 = x12 (x10 x15) x11) -> (forall x15, x15 :e int -> x14 x15 = add_SNo (add_SNo (mul_SNo (mul_SNo (add_SNo (mul_SNo (add_SNo (x13 x15) (minus_SNo 2)) 2) (minus_SNo x15)) 2) (add_SNo 1 2)) (minus_SNo 1)) (minus_SNo x15)) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x8 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_d87eb81e4a9955f116a79ee4077dacdbff0f6f1ac63cfb8253e5a06b31ac6232 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x0 x15 x16 = add_SNo (mul_SNo x15 x16) x16)) -> x1 = 2 -> (forall x15, x15 :e int -> x2 x15 = x15) -> x3 = 1 -> (forall x15, x15 :e int -> x4 x15 = x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x5 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x0 (x5 (add_SNo x15 (minus_SNo 1)) x16 x17) (x6 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x6 x15 x16 x17 = If_i (SNoLe x15 0) x17 x1))) -> (forall x15, x15 :e int -> x7 x15 = x5 (x2 x15) x3 (x4 x15)) -> (forall x15, x15 :e int -> x8 x15 = x7 x15) -> (forall x15, x15 :e int -> x9 x15 = add_SNo x15 x15) -> (forall x15, x15 :e int -> x10 x15 = x15) -> (forall x15, x15 :e int -> x11 x15 = add_SNo 1 (If_i (SNoLe x15 0) 2 x15)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x12 x15 x16 = If_i (SNoLe x15 0) x16 (x9 (x12 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x13 x15 = x12 (x10 x15) (x11 x15)) -> (forall x15, x15 :e int -> x14 x15 = add_SNo (x13 x15) (minus_SNo 2)) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x8 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_037694b9dbe93a341b04c6bf070f1b6b9b78bc5b3007e6353a4b89fd8d719f4a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo x17 x17) -> x2 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = add_SNo (add_SNo (x4 x17) (minus_SNo 2)) (minus_SNo 2)) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = add_SNo (add_SNo (x15 x17) (minus_SNo 2)) (minus_SNo 2)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_8c1f14740568866c59b316bb381a0bfb7bc1724fe2c7905e7419347c00f41329 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = add_SNo 2 (add_SNo x17 x18))) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x1 x17 x18 = mul_SNo 2 (add_SNo x18 x18))) -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x4 x17 x18 = x3 (x1 x17 x18) (x2 x17))) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x5 x17 x18 = x4 x17 x18)) -> (forall x17, x17 :e int -> x6 x17 = add_SNo 1 x17) -> x7 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x5 (x8 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x6 x17) x7) -> (forall x17, x17 :e int -> x10 x17 = mul_SNo (mul_SNo (add_SNo (x9 x17) x17) 2) 2) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = add_SNo (mul_SNo (add_SNo (mul_SNo (add_SNo 1 x18) (add_SNo 2 2)) 1) (mul_SNo 2 x18)) x17)) -> (forall x17, x17 :e int -> x12 x17 = add_SNo x17 1) -> x13 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) x13) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (mul_SNo (add_SNo (x15 x17) x17) 2) 2) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_2ff89499c6b5809677f36e814eefd5089f403416283d74e17c878b75082d0ca6 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> x0 x12 = add_SNo 2 (add_SNo x12 x12)) -> (forall x12, x12 :e int -> x1 x12 = x12) -> (forall x12, x12 :e int -> x2 x12 = add_SNo (mul_SNo x12 x12) x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = add_SNo 1 (x4 x12)) -> (forall x12, x12 :e int -> x6 x12 = add_SNo x12 x12) -> (forall x12, x12 :e int -> x7 x12 = x12) -> (forall x12, x12 :e int -> x8 x12 = add_SNo 2 (add_SNo (mul_SNo x12 x12) x12)) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo (x10 x12) (minus_SNo 1)) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_27da55f39562cad495bd407431f579f7cdbcb5d0723b83372ab155f9fdf96f9d : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = add_SNo (add_SNo x17 x17) x18)) -> (forall x17, x17 :e int -> x1 x17 = x17) -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) (x2 x17)) -> (forall x17, x17 :e int -> x5 x17 = mul_SNo (add_SNo 1 (add_SNo 2 x17)) (x4 x17)) -> x6 = 1 -> (forall x17, x17 :e int -> x7 x17 = add_SNo 1 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x5 (x8 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x9 x17 = x8 x6 (x7 x17)) -> (forall x17, x17 :e int -> x10 x17 = x9 x17) -> (forall x17, x17 :e int -> x11 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x12 x17 = x17) -> x13 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) x13) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (mul_SNo (add_SNo 2 (add_SNo 2 x17)) (add_SNo (x15 x17) (minus_SNo 1))) (add_SNo 1 (add_SNo 2 x17))) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_594fc8fcef66d2c61ace1c609d6f96f0e71a75a3fd8cb4c9711788bfe0f31b26 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = mul_SNo 2 (add_SNo (mul_SNo x33 x34) x33))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x1 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x2 x33 = x33) -> x3 = 1 -> x4 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x5 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x0 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x6 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x1 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x7 x33 = x5 (x2 x33) x3 x4) -> (forall x33, x33 :e int -> x8 x33 = add_SNo 1 (add_SNo x33 x33)) -> (forall x33, x33 :e int -> x9 x33 = x33) -> x10 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = If_i (SNoLe x33 0) x34 (x8 (x11 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x12 x33 = x11 (x9 x33) x10) -> (forall x33, x33 :e int -> x13 x33 = mul_SNo (x7 x33) (x12 x33)) -> (forall x33, x33 :e int -> x14 x33 = mul_SNo (add_SNo (add_SNo x33 (minus_SNo 1)) x33) x33) -> x15 = 1 -> (forall x33, x33 :e int -> x16 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> x17 x33 = x33) -> x18 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = If_i (SNoLe x33 0) x34 (x16 (x19 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x20 x33 = x19 (x17 x33) x18) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x14 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x15 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo (add_SNo 1 x34) x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x26 x33 = x33) -> x27 = 1 -> x28 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x13 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_620bd836d7518903a388fbe6207ef90897df6b56f0494827f1153aec2781e694 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x0 x7 x8 = add_SNo x7 x8)) -> (forall x7, x7 :e int -> x1 x7 = mul_SNo x7 (mul_SNo x7 x7)) -> (forall x7, x7 :e int -> x2 x7 = add_SNo (mul_SNo x7 x7) x7) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x3 x7 x8 = If_i (SNoLe x7 0) x8 (x0 (x3 (add_SNo x7 (minus_SNo 1)) x8) x7))) -> (forall x7, x7 :e int -> x4 x7 = x3 (x1 x7) (x2 x7)) -> (forall x7, x7 :e int -> x5 x7 = mul_SNo 2 (x4 x7)) -> (forall x7, x7 :e int -> x6 x7 = mul_SNo (add_SNo 2 (mul_SNo (add_SNo 2 (add_SNo (mul_SNo (mul_SNo (mul_SNo x7 x7) x7) x7) x7)) x7)) x7) -> (forall x7, x7 :e int -> SNoLe 0 x7 -> x5 x7 = x6 x7)))))))).
Admitted.
Theorem missingprop_e306ed899b4b5b7812f904f6959de0498af96b31b837f94bd0ca3ac910c1addd : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x0 x7 x8 = add_SNo x7 x8)) -> (forall x7, x7 :e int -> x1 x7 = mul_SNo x7 x7) -> (forall x7, x7 :e int -> x2 x7 = x7) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x3 x7 x8 = If_i (SNoLe x7 0) x8 (x0 (x3 (add_SNo x7 (minus_SNo 1)) x8) x7))) -> (forall x7, x7 :e int -> x4 x7 = x3 (x1 x7) (x2 x7)) -> (forall x7, x7 :e int -> x5 x7 = mul_SNo 2 (x4 x7)) -> (forall x7, x7 :e int -> x6 x7 = mul_SNo (add_SNo 2 (add_SNo (mul_SNo (mul_SNo x7 x7) x7) x7)) x7) -> (forall x7, x7 :e int -> SNoLe 0 x7 -> x5 x7 = x6 x7)))))))).
Admitted.
Theorem missingprop_9fdeca67ccbaa166a1f1bc924c8d0b9a7b6ab3b81a06dedcdcf5d0664da46f77 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x3 x28 = x28) -> (forall x28, x28 :e int -> x4 x28 = x28) -> x5 = 0 -> x6 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x7 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x2 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30) (x8 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x8 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x3 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x9 x28 = x7 (x4 x28) x5 x6) -> (forall x28, x28 :e int -> x10 x28 = x9 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x1 x28) (x10 x28)) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> x15 x28 = add_SNo x28 (minus_SNo 1)) -> x16 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x18 x28 = x17 (x15 x28) x16) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = add_SNo x28 (minus_SNo 2)) -> (forall x28, x28 :e int -> x22 x28 = x28) -> (forall x28, x28 :e int -> x23 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) (x22 x28) (x23 x28)) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_bbcbba9ca609947c22f8922da5332af185c15f25f3d97617ea53b5d09c4d1ef0 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x3 x28 = x28) -> (forall x28, x28 :e int -> x4 x28 = x28) -> x5 = 1 -> x6 = 0 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x7 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x2 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30) (x8 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x8 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x3 (x7 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x9 x28 = x7 (x4 x28) x5 x6) -> (forall x28, x28 :e int -> x10 x28 = x9 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x1 x28) (x10 x28)) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> x15 x28 = x28) -> x16 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x18 x28 = x17 (x15 x28) x16) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = add_SNo x28 (minus_SNo 1)) -> x22 = 1 -> x23 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_34d4588c37e1251372ca27a8bcff89c6f5391ea1ec62dc60974a9b12fb498aa9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = mul_SNo (add_SNo 1 2) (add_SNo x17 (minus_SNo 1))) -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) (x2 x17)) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo (mul_SNo x17 x17) x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = add_SNo x17 (minus_SNo 1)) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (x15 x17) x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
