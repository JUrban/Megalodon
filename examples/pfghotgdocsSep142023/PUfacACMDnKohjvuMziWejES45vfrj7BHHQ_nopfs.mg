Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
Theorem missingprop_0854ffdd4c0bb6c6e989524e8b9b143eca8a973ce6c901dcb1f76e9ca3035c87 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x0 x7 x8 = add_SNo (add_SNo x7 x8) x8)) -> (forall x7, x7 :e int -> x1 x7 = mul_SNo x7 x7) -> (forall x7, x7 :e int -> x2 x7 = x7) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x3 x7 x8 = If_i (SNoLe x7 0) x8 (x0 (x3 (add_SNo x7 (minus_SNo 1)) x8) x7))) -> (forall x7, x7 :e int -> x4 x7 = x3 (x1 x7) (x2 x7)) -> (forall x7, x7 :e int -> x5 x7 = mul_SNo (x4 x7) x7) -> (forall x7, x7 :e int -> x6 x7 = mul_SNo (add_SNo 1 (add_SNo (mul_SNo (mul_SNo x7 x7) x7) x7)) (mul_SNo x7 x7)) -> (forall x7, x7 :e int -> SNoLe 0 x7 -> x5 x7 = x6 x7)))))))).
Admitted.
Theorem missingprop_8c3f804a2a3990b65a3ed1db11f3448f106c95f4319c83fe71fbbb24b4200c56 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = add_SNo (mul_SNo (add_SNo 1 (add_SNo x21 x21)) (mul_SNo x20 x21)) (minus_SNo x20))) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x6 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> x7 x20 = x20) -> (forall x20, x20 :e int -> x8 x20 = add_SNo 1 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x9 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x10 x20 = x9 (x7 x20) (x8 x20)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo 2 x21)) -> (forall x20, x20 :e int -> x13 x20 = add_SNo x20 (minus_SNo 1)) -> x14 = 1 -> x15 = add_SNo 1 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (x10 x20) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_25d20d3c8724cd34aee4e84335b2f9deb257abe41bb1854fdf0111d7c78a49ff : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x1 x25 x26 = x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x2 x25 x26 = add_SNo x26 (minus_SNo 1))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = x3 (x1 x25 x26) (x2 x25 x26))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = add_SNo (x4 x25 x26) x25)) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = mul_SNo (add_SNo x25 (minus_SNo 1)) x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = add_SNo x26 (minus_SNo 1))) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 1 -> (forall x25, x25 :e int -> x15 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x18 x25 = x16 (x13 x25) x14 (x15 x25)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x19 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> x20 x25 = x25) -> (forall x25, x25 :e int -> x21 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x20 x25) (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (x18 x25) (x23 x25)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_9126d34a9be2f0912dbf51c9da4f541f634840753f30811f1d0afc45feb9980a : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = mul_SNo (add_SNo (mul_SNo 2 (mul_SNo x23 x24)) (minus_SNo x23)) (mul_SNo (mul_SNo (add_SNo 1 x24) x24) x24))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x1 x23 x24 = add_SNo x24 x24)) -> (forall x23, x23 :e int -> x2 x23 = x23) -> x3 = 1 -> x4 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) x3 x4) -> (forall x23, x23 :e int -> x8 x23 = x7 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x9 x23 x24 = mul_SNo (mul_SNo (add_SNo (mul_SNo (mul_SNo x24 x24) x24) (minus_SNo x24)) x24) x23)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x10 x23 x24 = add_SNo x24 x24)) -> (forall x23, x23 :e int -> x11 x23 = x23) -> x12 = 1 -> x13 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x14 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x9 (x14 (add_SNo x23 (minus_SNo 1)) x24 x25) (x15 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x15 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x10 (x14 (add_SNo x23 (minus_SNo 1)) x24 x25) (x15 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x16 x23 = x14 (x11 x23) x12 x13) -> (forall x23, x23 :e int -> x17 x23 = add_SNo 1 (add_SNo x23 x23)) -> (forall x23, x23 :e int -> x18 x23 = x23) -> x19 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x20 x23 x24 = If_i (SNoLe x23 0) x24 (x17 (x20 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x21 x23 = x20 (x18 x23) x19) -> (forall x23, x23 :e int -> x22 x23 = mul_SNo (x16 x23) (x21 x23)) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_bbb664c5b19c27098eb9b96e42cccc0a7d14108ba1da302943bd1f915f01953d : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 2 x21) x20)) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = add_SNo (x4 x20) (minus_SNo x20)) -> (forall x20, x20 :e int -> x6 x20 = add_SNo 1 x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = add_SNo (x9 x20) (minus_SNo 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = add_SNo 1 x20) -> x14 = 1 -> x15 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (x18 x20) (minus_SNo 2)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_9542d5652fcdc8ea2395ec241453fb42a865d2cbd438040c587cb58a51becd95 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x0 x30 x31 = mul_SNo 2 (mul_SNo x30 x31))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x1 x30 x31 = x31)) -> x2 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x3 x30 x31 = If_i (SNoLe x30 0) x31 (x0 (x3 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x4 x30 x31 = x3 (x1 x30 x31) x2)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x5 x30 x31 = add_SNo (add_SNo (mul_SNo 2 (mul_SNo x30 x31)) (x4 x30 x31)) x30)) -> (forall x30, x30 :e int -> x6 x30 = x30) -> x7 = 1 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x8 x30 x31 = If_i (SNoLe x30 0) x31 (x5 (x8 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x9 x30 = x8 (x6 x30) x7) -> (forall x30, x30 :e int -> x10 x30 = x9 x30) -> (forall x30, x30 :e int -> x11 x30 = add_SNo x30 x30) -> (forall x30, x30 :e int -> x12 x30 = x30) -> x13 = 2 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x14 x30 x31 = If_i (SNoLe x30 0) x31 (x11 (x14 (add_SNo x30 (minus_SNo 1)) x31)))) -> (forall x30, x30 :e int -> x15 x30 = x14 (x12 x30) x13) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x16 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> x17 x30 = x30) -> (forall x30, x30 :e int -> x18 x30 = add_SNo 1 x30) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x19 x30 x31 = If_i (SNoLe x30 0) x31 (x16 (x19 (add_SNo x30 (minus_SNo 1)) x31) x30))) -> (forall x30, x30 :e int -> x20 x30 = x19 (x17 x30) (x18 x30)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x21 x30 x31 = mul_SNo x30 x31)) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x22 x30 x31 = add_SNo 2 x31)) -> (forall x30, x30 :e int -> x23 x30 = x30) -> x24 = 1 -> x25 = add_SNo 1 2 -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x26 x30 x31 x32 = If_i (SNoLe x30 0) x31 (x21 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x27 x30 x31 x32 = If_i (SNoLe x30 0) x32 (x22 (x26 (add_SNo x30 (minus_SNo 1)) x31 x32) (x27 (add_SNo x30 (minus_SNo 1)) x31 x32))))) -> (forall x30, x30 :e int -> x28 x30 = x26 (x23 x30) x24 x25) -> (forall x30, x30 :e int -> x29 x30 = add_SNo (mul_SNo (x15 x30) (x20 x30)) (minus_SNo (x28 x30))) -> (forall x30, x30 :e int -> SNoLe 0 x30 -> x10 x30 = x29 x30))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_2faa5ade5b6880e7ce7bc847d968a92bf094d81562200ec9bf2e2962694283fe : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x15 x15) x15)) x15) -> (forall x15, x15 :e int -> x1 x15 = add_SNo x15 1) -> (forall x15, x15 :e int -> x2 x15 = add_SNo 2 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) (x2 x15)) -> (forall x15, x15 :e int -> x5 x15 = mul_SNo (mul_SNo (add_SNo 1 x15) (x4 x15)) x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = add_SNo 1 x15) -> (forall x15, x15 :e int -> x9 x15 = add_SNo 1 x15) -> x10 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) (x9 x15) x10) -> (forall x15, x15 :e int -> x14 x15 = mul_SNo (mul_SNo (x13 x15) (add_SNo 2 x15)) x15) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_1ebd95133902cc38c438a7af6d04656a109ee8d5b145f67711d0bd2909a4b48c : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo (add_SNo x15 x15) x15) -> (forall x15, x15 :e int -> x1 x15 = add_SNo x15 x15) -> (forall x15, x15 :e int -> x2 x15 = x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) (x2 x15)) -> (forall x15, x15 :e int -> x5 x15 = mul_SNo (add_SNo x15 (minus_SNo 1)) (x4 x15)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> (forall x15, x15 :e int -> x9 x15 = x15) -> x10 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) (x9 x15) x10) -> (forall x15, x15 :e int -> x14 x15 = mul_SNo (add_SNo x15 (minus_SNo 1)) (x13 x15)) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_aebc9186798002c82b79241475bc0bcd591810cfb28a6b32959c75e5fd7e100f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo (add_SNo x17 x17) x17) -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) (x2 x17)) -> (forall x17, x17 :e int -> x5 x17 = mul_SNo (add_SNo x17 (minus_SNo 1)) (x4 x17)) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo (mul_SNo x17 x17) x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = add_SNo x17 (minus_SNo 1)) -> x10 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (add_SNo (mul_SNo x17 x17) (minus_SNo x17)) (x15 x17)) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_0b719fabf83dca96bfc814572274745d31c206910a52e5d6d9135ada4f7c8b85 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = mul_SNo 2 (add_SNo (add_SNo x15 x15) x15)) -> (forall x15, x15 :e int -> x1 x15 = x15) -> (forall x15, x15 :e int -> x2 x15 = x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) (x2 x15)) -> (forall x15, x15 :e int -> x5 x15 = mul_SNo (add_SNo x15 (minus_SNo 1)) (x4 x15)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> (forall x15, x15 :e int -> x9 x15 = x15) -> x10 = add_SNo 2 (add_SNo 2 2) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) (x9 x15) x10) -> (forall x15, x15 :e int -> x14 x15 = mul_SNo (add_SNo x15 (minus_SNo 1)) (x13 x15)) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_5cb89eb152232c868af652a825e50b55dcf78ae6ea1d14e8eb73632b8a6dcb28 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo (mul_SNo 2 (add_SNo x15 x15)) x15) -> (forall x15, x15 :e int -> x1 x15 = x15) -> (forall x15, x15 :e int -> x2 x15 = x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) (x2 x15)) -> (forall x15, x15 :e int -> x5 x15 = mul_SNo (mul_SNo (x4 x15) x15) x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> (forall x15, x15 :e int -> x9 x15 = x15) -> x10 = add_SNo 1 (add_SNo 2 2) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) (x9 x15) x10) -> (forall x15, x15 :e int -> x14 x15 = mul_SNo (mul_SNo x15 x15) (x13 x15)) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_f752acc4bc6ffa6ba090ae24fb03d6ac4f0a36dee3d3caa450d0c1f4217ab26c : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) (x2 x17)) -> (forall x17, x17 :e int -> x5 x17 = mul_SNo (mul_SNo (x4 x17) x17) x17) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> (forall x17, x17 :e int -> x10 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) (x10 x17)) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (x15 x17) x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_e37fd3ca6c6e9423c97b3b5949488e933dfb9bda94ec8cc2c0a5efd9e2ca9c54 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = add_SNo (mul_SNo (add_SNo 2 x21) x20) (minus_SNo 1))) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = add_SNo 1 x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 2 (mul_SNo x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 2 -> x15 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (mul_SNo (add_SNo 1 2) (x18 x20)) 1) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_ef1094e54ef84da0768fe1d444e9acb9368bc6ad25084c4a50dd206e9f681c04 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = add_SNo 2 (minus_SNo (mul_SNo (add_SNo 2 x21) x20)))) -> x1 = 2 -> (forall x20, x20 :e int -> x2 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 x1 (x2 x20)) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = add_SNo 1 x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo (mul_SNo x20 x21) (minus_SNo 2))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 2 -> x15 = mul_SNo 2 (add_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (x18 x20) (add_SNo 1 2)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_03c2823402420bb7fbc2a3f0e52e398c9f6be3c042d0678ae62492863d59be98 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37, x37 :e int -> x0 x37 = add_SNo 0 (minus_SNo x37)) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x1 x37 x38 = x38)) -> x2 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x3 x37 x38 = If_i (SNoLe x37 0) x38 (x0 (x3 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x4 x37 x38 = x3 (x1 x37 x38) x2)) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x5 x37 x38 = add_SNo (mul_SNo (add_SNo 2 x38) x37) (x4 x37 x38))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x6 x37 x38 = x38)) -> x7 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x8 x37 x38 = If_i (SNoLe x37 0) x38 (x5 (x8 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x9 x37 x38 = x8 (x6 x37 x38) x7)) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x10 x37 x38 = add_SNo (x9 x37 x38) x37)) -> (forall x37, x37 :e int -> x11 x37 = x37) -> x12 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x13 x37 x38 = If_i (SNoLe x37 0) x38 (x10 (x13 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> x14 x37 = x13 (x11 x37) x12) -> (forall x37, x37 :e int -> x15 x37 = x14 x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x16 x37 x38 = add_SNo 1 (minus_SNo (mul_SNo x37 x38)))) -> (forall x37, x37 :e int -> x17 x37 = add_SNo 2 x37) -> x18 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x19 x37 x38 = If_i (SNoLe x37 0) x38 (x16 (x19 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> x20 x37 = x19 (x17 x37) x18) -> (forall x37, x37 :e int -> x21 x37 = add_SNo 0 (minus_SNo x37)) -> (forall x37, x37 :e int -> x22 x37 = x37) -> x23 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x24 x37 x38 = If_i (SNoLe x37 0) x38 (x21 (x24 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x25 x37 = x24 (x22 x37) x23) -> (forall x37, x37 :e int -> x26 x37 = mul_SNo (x20 x37) (x25 x37)) -> x27 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x28 x37 x38 = x38)) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x29 x37 x38 = If_i (SNoLe x37 0) x38 (x26 (x29 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x30 x37 x38 = x29 x27 (x28 x37 x38))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x31 x37 x38 = add_SNo (x30 x37 x38) x37)) -> (forall x37, x37 :e int -> x32 x37 = x37) -> x33 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x34 x37 x38 = If_i (SNoLe x37 0) x38 (x31 (x34 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> x35 x37 = x34 (x32 x37) x33) -> (forall x37, x37 :e int -> x36 x37 = x35 x37) -> (forall x37, x37 :e int -> SNoLe 0 x37 -> x15 x37 = x36 x37)))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_a1d4d23e964a7e1bef3dd5a362d5ffe232584f84fbbadc5f6ed1f65120b4f102 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x0 x34 x35 = add_SNo x34 x35)) -> (forall x34, x34 :e int -> x1 x34 = x34) -> (forall x34, x34 :e int -> x2 x34 = mul_SNo 2 (add_SNo x34 x34)) -> x3 = 0 -> x4 = 1 -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x5 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x0 (x5 (add_SNo x34 (minus_SNo 1)) x35 x36) (x6 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x6 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x1 (x5 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> x7 x34 = x5 (x2 x34) x3 x4) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x8 x34 x35 = add_SNo x34 x35)) -> (forall x34, x34 :e int -> x9 x34 = x34) -> (forall x34, x34 :e int -> x10 x34 = add_SNo x34 x34) -> x11 = 0 -> x12 = 2 -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x8 (x13 (add_SNo x34 (minus_SNo 1)) x35 x36) (x14 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x14 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x9 (x13 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> x15 x34 = x13 (x10 x34) x11 x12) -> (forall x34, x34 :e int -> x16 x34 = add_SNo (x7 x34) (minus_SNo (x15 x34))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x17 x34 x35 = add_SNo (add_SNo x34 x34) x35)) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x18 x34 x35 = add_SNo x34 x35)) -> (forall x34, x34 :e int -> x19 x34 = add_SNo x34 (minus_SNo 1)) -> x20 = add_SNo 1 2 -> x21 = 1 -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x22 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x17 (x22 (add_SNo x34 (minus_SNo 1)) x35 x36) (x23 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x23 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x18 (x22 (add_SNo x34 (minus_SNo 1)) x35 x36) (x23 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> x24 x34 = x22 (x19 x34) x20 x21) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x34 x35 = add_SNo x34 x35)) -> (forall x34, x34 :e int -> x26 x34 = x34) -> (forall x34, x34 :e int -> x27 x34 = add_SNo x34 x34) -> x28 = 0 -> x29 = 1 -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x30 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x25 (x30 (add_SNo x34 (minus_SNo 1)) x35 x36) (x31 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x31 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x26 (x30 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> x32 x34 = x30 (x27 x34) x28 x29) -> (forall x34, x34 :e int -> x33 x34 = mul_SNo (add_SNo (x24 x34) (minus_SNo 2)) (x32 x34)) -> (forall x34, x34 :e int -> SNoLe 0 x34 -> x16 x34 = x33 x34))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_74a94ab35e34c1d689cf0fa793e50824986dda6e0d50dde54f4c8e6d1744609f : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x1 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x2 x33 = x33) -> x3 = 1 -> x4 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x5 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x0 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x6 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x1 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x7 x33 = x5 (x2 x33) x3 x4) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> x9 x33 = x33) -> x10 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = If_i (SNoLe x33 0) x34 (x8 (x11 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x12 x33 = x11 (x9 x33) x10) -> (forall x33, x33 :e int -> x13 x33 = add_SNo (x7 x33) (minus_SNo (x12 x33))) -> (forall x33, x33 :e int -> x14 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> x15 x33 = add_SNo x33 (minus_SNo 1)) -> x16 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x17 x33 x34 = If_i (SNoLe x33 0) x34 (x14 (x17 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x18 x33 = x17 (x15 x33) x16) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x20 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x21 x33 = add_SNo x33 (minus_SNo 2)) -> x22 = 1 -> x23 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x19 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x20 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x26 x33 = x24 (x21 x33) x22 x23) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x27 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> x28 x33 = x33) -> x29 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) x29) -> (forall x33, x33 :e int -> x32 x33 = add_SNo (mul_SNo (x18 x33) (x26 x33)) (minus_SNo (x31 x33))) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x13 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_68ad82e446ec26d6d6a77a7d01318ef74b25cd57f41b1243a8e05e4f64a7288c : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5, x5 :e int -> (forall x6, x6 :e int -> (forall x7 : set -> set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> x7 x8 x9 x10 :e int))) -> (forall x8 : set -> set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> x8 x9 x10 x11 :e int))) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> x0 x31 = add_SNo (mul_SNo 2 (add_SNo x31 x31)) x31) -> (forall x31, x31 :e int -> x1 x31 = add_SNo 1 x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x2 x31 x32 = add_SNo x31 x32)) -> (forall x31, x31 :e int -> x3 x31 = x31) -> (forall x31, x31 :e int -> x4 x31 = x31) -> x5 = 1 -> x6 = 2 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x7 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x2 (x7 (add_SNo x31 (minus_SNo 1)) x32 x33) (x8 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x8 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x3 (x7 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x9 x31 = x7 (x4 x31) x5 x6) -> (forall x31, x31 :e int -> x10 x31 = x9 x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x11 x31 x32 = If_i (SNoLe x31 0) x32 (x0 (x11 (add_SNo x31 (minus_SNo 1)) x32)))) -> (forall x31, x31 :e int -> x12 x31 = x11 (x1 x31) (x10 x31)) -> (forall x31, x31 :e int -> x13 x31 = x12 x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = add_SNo x31 x32)) -> (forall x31, x31 :e int -> x15 x31 = x31) -> (forall x31, x31 :e int -> x16 x31 = x31) -> x17 = 1 -> x18 = 2 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) x17 x18) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x23 x31 x32 = x32)) -> (forall x31, x31 :e int -> x24 x31 = x31) -> x25 = add_SNo 1 (add_SNo 2 2) -> x26 = add_SNo 1 (add_SNo 2 2) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) x25 x26) -> (forall x31, x31 :e int -> x30 x31 = mul_SNo (x21 x31) (x29 x31)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_59d431c501b1fc5f8efc4f1829efab3f1bc3f67d2f013644b35368fb797b77b1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x0 x12 x13 = mul_SNo (add_SNo 2 x13) x12)) -> (forall x12, x12 :e int -> x1 x12 = add_SNo 2 x12) -> x2 = 2 -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) x2) -> (forall x12, x12 :e int -> x5 x12 = x4 x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x6 x12 x13 = mul_SNo x12 x13)) -> (forall x12, x12 :e int -> x7 x12 = add_SNo 2 (add_SNo 2 x12)) -> x8 = 1 -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) x8) -> (forall x12, x12 :e int -> x11 x12 = x10 x12) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_b7049b6e475659909ee5d2652a849d6be4e701c21d56ee7e6bc6dd74a6531048 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo (add_SNo x28 x28) x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = add_SNo 1 x29)) -> x2 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x4 x28 x29 = x3 (x1 x28 x29) x2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (add_SNo (x4 x28 x29) x28) x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x6 x28 x29 = x29)) -> (forall x28, x28 :e int -> x7 x28 = x28) -> x8 = 1 -> (forall x28, x28 :e int -> x9 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 (x9 x28)) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x15 x28 x29 = x29)) -> (forall x28, x28 :e int -> x16 x28 = x28) -> x17 = add_SNo 1 2 -> x18 = add_SNo 1 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x21 x28 = x19 (x16 x28) x17 x18) -> (forall x28, x28 :e int -> x22 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x23 x28 = x28) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = add_SNo (mul_SNo (add_SNo 1 (x21 x28)) (add_SNo (x26 x28) (minus_SNo 1))) 1) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
