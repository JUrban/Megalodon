Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
Theorem missingprop_f48dd9ff885994fae33607524702236d47d5f160e5f91d2008e8790ce14757d8 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x1 x25 x26 = add_SNo 2 x26)) -> (forall x25, x25 :e int -> x2 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = x3 (x1 x25 x26) (x2 x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = add_SNo 1 (x4 x25 x26))) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = add_SNo 2 (mul_SNo x25 x26))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = add_SNo x26 x26)) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 0 -> x15 = add_SNo 2 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x18 x25 = x16 (x13 x25) x14 x15) -> (forall x25, x25 :e int -> x19 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x20 x25 = x25) -> x21 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x20 x25) x21) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (mul_SNo (x18 x25) (x23 x25)) 1) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_52bf0c939509c866e2bdc2708bcc7a3de23d0c27de37de3626bf89b22a525cef : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo (mul_SNo (add_SNo x18 x19) x19) x18)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x1 x18 x19 = x19)) -> (forall x18, x18 :e int -> x2 x18 = x18) -> x3 = 1 -> x4 = add_SNo (mul_SNo (add_SNo 2 2) 2) 1 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) x3 x4) -> (forall x18, x18 :e int -> x8 x18 = mul_SNo (add_SNo (x7 x18) 2) (add_SNo 2 2)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = mul_SNo x18 x19)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x10 x18 x19 = x19)) -> (forall x18, x18 :e int -> x11 x18 = x18) -> x12 = 2 -> x13 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) x12 x13) -> (forall x18, x18 :e int -> x17 x18 = mul_SNo (add_SNo (mul_SNo (add_SNo 1 (add_SNo 2 2)) (add_SNo (x16 x18) (minus_SNo 1))) (minus_SNo 2)) (add_SNo 2 2)) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_a4417d343f9d2043708cf521aa05bfd51485d8a8f890c6ab23f21bb3b9c054b4 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo 1 (mul_SNo 2 (mul_SNo (add_SNo 1 (add_SNo 2 2)) (add_SNo 2 x20)))) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = add_SNo (mul_SNo 2 x20) x20) -> x6 = 2 -> x7 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> x9 = x8 x6 x7 -> (forall x20, x20 :e int -> x10 x20 = mul_SNo (x4 x20) x9) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = add_SNo 1 2 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (mul_SNo (mul_SNo 2 (mul_SNo (add_SNo 1 (add_SNo 2 2)) (add_SNo (x18 x20) (minus_SNo 2)))) 2) (minus_SNo 2)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_cb696d3d01b6f0e535a8fcf9c1ae90a447d97770e171d2146b40d1ee76196a9e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x20 x20)) x20)) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = mul_SNo (add_SNo 2 x20) x20) -> x6 = 2 -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> x9 = x8 x6 x7 -> (forall x20, x20 :e int -> x10 x20 = mul_SNo (add_SNo (mul_SNo 2 (x4 x20)) (minus_SNo 2)) x9) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 2 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo 2 (mul_SNo (add_SNo 1 2) (mul_SNo (add_SNo 1 (add_SNo 2 2)) (add_SNo (x18 x20) (minus_SNo 1))))) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_634ccd297bfc0219ba69ccf6d6c3f9d01492ed2c5a9d247bdd450b65a2786260 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x20 x20)) x20)) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = mul_SNo (add_SNo 2 x20) x20) -> x6 = 2 -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21)))) -> x9 = x8 x6 x7 -> (forall x20, x20 :e int -> x10 x20 = mul_SNo (add_SNo (x4 x20) (minus_SNo 1)) x9) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 2 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (add_SNo 1 2) (mul_SNo (add_SNo 1 (add_SNo 2 2)) (add_SNo (x18 x20) (minus_SNo 1)))) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_2dcb2fc5406f316681be86250f033e76ac87fc1566ad5a0ce564f4d65fab1fed : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x0 x12 x13 = add_SNo x12 x13)) -> (forall x12, x12 :e int -> x1 x12 = add_SNo (mul_SNo (add_SNo 1 2) (add_SNo 1 (add_SNo x12 x12))) x12) -> x2 = 0 -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) x2) -> (forall x12, x12 :e int -> x5 x12 = mul_SNo 2 (x4 x12)) -> (forall x12, x12 :e int -> x6 x12 = add_SNo (mul_SNo x12 x12) x12) -> x7 = 1 -> (forall x12, x12 :e int -> x8 x12 = add_SNo (mul_SNo (add_SNo 1 2) (add_SNo 1 (add_SNo x12 x12))) x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 x7 (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = x10 x12) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_1222d36467aef3c3cb5f61e5675ae96fbe810357d9c5af23df801208d1798bf1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo 1 (mul_SNo (add_SNo 2 x29) x28))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = x29)) -> x3 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x4 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x7 x28 x29 = x5 (x2 x28 x29) x3 (x4 x28 x29))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = add_SNo (x7 x28 x29) x28)) -> (forall x28, x28 :e int -> x9 x28 = x28) -> x10 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo 1 (mul_SNo x28 x29))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x15 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = x29)) -> x17 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x18 x28 x29 = add_SNo 2 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x21 x28 x29 = x19 (x16 x28 x29) x17 (x18 x28 x29))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = add_SNo (x21 x28 x29) x28)) -> (forall x28, x28 :e int -> x23 x28 = x28) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_2b905eb9f51eba534e3df209ad6cd82685d9876e4372f623ca603042738bd8cc : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo x28 x28) -> x1 = add_SNo 2 (add_SNo 2 2) -> (forall x28, x28 :e int -> x2 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x4 x28 = x3 x1 (x2 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (x4 x28) x29)) -> (forall x28, x28 :e int -> x6 x28 = x28) -> (forall x28, x28 :e int -> x7 x28 = add_SNo x28 x28) -> x8 = 0 -> x9 = add_SNo 1 (add_SNo 2 2) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 x9) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> x14 x28 = mul_SNo (mul_SNo x28 x28) x28) -> x15 = 1 -> x16 = add_SNo 2 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> x18 = x17 x15 x16 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo (mul_SNo x18 x28) x29)) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = add_SNo x28 x28) -> x22 = 0 -> x23 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x26 x28) (add_SNo 1 (add_SNo 2 2))) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c1c263686751c50ab25c68e053554e7b505f25882ea6fc16532d2259c421aacd : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x39 x40 x41 x42 :e int))) -> (forall x40 : set -> set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x40 x41 x42 x43 :e int))) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set -> set, (forall x47, x47 :e int -> (forall x48, x48 :e int -> x46 x47 x48 :e int)) -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49, x49 :e int -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set, (forall x52, x52 :e int -> x51 x52 :e int) -> (forall x52 : set -> set, (forall x53, x53 :e int -> x52 x53 :e int) -> (forall x53, x53 :e int -> x0 x53 = add_SNo (add_SNo x53 x53) x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x1 x53 x54 = add_SNo x54 x54)) -> x2 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x3 x53 x54 = If_i (SNoLe x53 0) x54 (x0 (x3 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x4 x53 x54 = x3 (x1 x53 x54) x2)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x5 x53 x54 = add_SNo (x4 x53 x54) (mul_SNo 2 (add_SNo (add_SNo x53 x53) x53)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x6 x53 x54 = x54)) -> x7 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x8 x53 x54 = If_i (SNoLe x53 0) x54 (x5 (x8 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x9 x53 x54 = x8 (x6 x53 x54) x7)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x10 x53 x54 = add_SNo (x9 x53 x54) (mul_SNo 2 (add_SNo (add_SNo x53 x53) x53)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x11 x53 x54 = x54)) -> x12 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x13 x53 x54 = If_i (SNoLe x53 0) x54 (x10 (x13 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x14 x53 x54 = x13 (x11 x53 x54) x12)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x15 x53 x54 = add_SNo (x14 x53 x54) (mul_SNo 2 (add_SNo x53 x53)))) -> (forall x53, x53 :e int -> x16 x53 = x53) -> x17 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x18 x53 x54 = If_i (SNoLe x53 0) x54 (x15 (x18 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x19 x53 = x18 (x16 x53) x17) -> (forall x53, x53 :e int -> x20 x53 = x19 x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x21 x53 x54 = add_SNo (add_SNo (add_SNo x53 x53) x53) x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x22 x53 x54 = add_SNo x54 x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x23 x53 x54 = x54)) -> x24 = 1 -> x25 = 2 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x26 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x21 (x26 (add_SNo x53 (minus_SNo 1)) x54 x55) (x27 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x27 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x22 (x26 (add_SNo x53 (minus_SNo 1)) x54 x55) (x27 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x28 x53 x54 = x26 (x23 x53 x54) x24 x25)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x29 x53 x54 = add_SNo (add_SNo (x28 x53 x54) x53) x53)) -> (forall x53, x53 :e int -> x30 x53 = x53) -> x31 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x32 x53 x54 = If_i (SNoLe x53 0) x54 (x29 (x32 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x33 x53 = x32 (x30 x53) x31) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x34 x53 x54 = mul_SNo x53 x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x35 x53 x54 = x54)) -> (forall x53, x53 :e int -> x36 x53 = x53) -> x37 = 1 -> x38 = add_SNo 1 2 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x39 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x34 (x39 (add_SNo x53 (minus_SNo 1)) x54 x55) (x40 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x40 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x35 (x39 (add_SNo x53 (minus_SNo 1)) x54 x55) (x40 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> x41 x53 = x39 (x36 x53) x37 x38) -> (forall x53, x53 :e int -> x42 x53 = mul_SNo (x33 x53) (x41 x53)) -> x43 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x44 x53 x54 = x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x45 x53 x54 = If_i (SNoLe x53 0) x54 (x42 (x45 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x46 x53 x54 = x45 x43 (x44 x53 x54))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x47 x53 x54 = add_SNo (x46 x53 x54) (mul_SNo 2 (add_SNo x53 x53)))) -> (forall x53, x53 :e int -> x48 x53 = x53) -> x49 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x50 x53 x54 = If_i (SNoLe x53 0) x54 (x47 (x50 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x51 x53 = x50 (x48 x53) x49) -> (forall x53, x53 :e int -> x52 x53 = x51 x53) -> (forall x53, x53 :e int -> SNoLe 0 x53 -> x20 x53 = x52 x53)))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c1eade51ade77a3a32dd217f4fe21fa8c3f129f8db803b1bce4a644c8fb40b60 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo (mul_SNo 2 (add_SNo 2 x20)) x20) -> (forall x20, x20 :e int -> x1 x20 = add_SNo 2 (add_SNo x20 x20)) -> x2 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = add_SNo (x4 x20) (minus_SNo 2)) -> (forall x20, x20 :e int -> x6 x20 = mul_SNo x20 x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = x21)) -> (forall x20, x20 :e int -> x10 x20 = x20) -> x11 = add_SNo 1 2 -> x12 = add_SNo 1 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x13 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x8 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x14 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x9 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x15 x20 = x13 (x10 x20) x11 x12) -> (forall x20, x20 :e int -> x16 x20 = mul_SNo 2 (x15 x20)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 x7 (x16 x20)) -> (forall x20, x20 :e int -> x19 x20 = add_SNo (add_SNo (x18 x20) (minus_SNo 2)) (minus_SNo 2)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_64345b087f51db6a3b7e4fb5891780d6639cb728bf1b7b69b2f6e3279571dfa9 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3, x3 :e int -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = add_SNo (add_SNo x23 x24) x24)) -> (forall x23, x23 :e int -> x1 x23 = x23) -> x2 = add_SNo 2 2 -> x3 = 2 -> (forall x23, x23 :e int -> x4 x23 = x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 x2 x3 (x4 x23)) -> (forall x23, x23 :e int -> x8 x23 = x7 x23) -> (forall x23, x23 :e int -> x9 x23 = x23) -> x10 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x11 x23 x24 = If_i (SNoLe x23 0) x24 (x8 (x11 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x12 x23 = x11 (x9 x23) x10) -> (forall x23, x23 :e int -> x13 x23 = add_SNo (x12 x23) 1) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = add_SNo 2 (mul_SNo x23 x24))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x15 x23 x24 = x24)) -> (forall x23, x23 :e int -> x16 x23 = x23) -> x17 = 2 -> x18 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) x17 x18) -> (forall x23, x23 :e int -> x22 x23 = add_SNo (mul_SNo 2 (x21 x23)) (minus_SNo 1)) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x13 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_abda45fccec74ace491f4046fbfea94dd01f6716ee6e14356cf59ff0ab801918 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x0 x15 x16 = mul_SNo (add_SNo 2 (add_SNo 2 (add_SNo 2 x16))) x15)) -> (forall x15, x15 :e int -> x1 x15 = x15) -> x2 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16) x15))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) x2) -> (forall x15, x15 :e int -> x5 x15 = x4 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = add_SNo 1 x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> x9 = 1 -> x10 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) x9 x10) -> (forall x15, x15 :e int -> x14 x15 = x13 x15) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_6cdacab7d20c07c73cfa1ad2d8ddfb46ddcaa709198d63a38c70bbd4326670d6 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = mul_SNo (add_SNo 1 x25) (add_SNo x25 x26))) -> x1 = 2 -> x2 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> x4 = x3 x1 x2 -> (forall x25, x25 :e int -> x5 x25 = add_SNo 1 (mul_SNo x4 x25)) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = add_SNo 1 (mul_SNo x25 x26))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = x26)) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 1 -> (forall x25, x25 :e int -> x15 x25 = add_SNo (mul_SNo x25 x25) x25) -> x16 = 1 -> x17 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x18 x25 x26 = If_i (SNoLe x25 0) x26 (x15 (x18 (add_SNo x25 (minus_SNo 1)) x26)))) -> x19 = x18 x16 x17 -> x20 = x19 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x13 x25) x14 x20) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6393d94950b85b7732a90d5c435150cad39df595f72e71ec9b7ade2de907def0 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = add_SNo (mul_SNo (add_SNo 2 x26) x25) x25)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x1 x25 x26 = x26)) -> x2 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x4 x25 x26 = x3 (x1 x25 x26) x2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = add_SNo (x4 x25 x26) (mul_SNo (add_SNo 2 (add_SNo 2 x26)) x25))) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = add_SNo 1 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = x26)) -> x14 = 1 -> x15 = add_SNo 2 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x18 x25 x26 = x16 (x13 x25 x26) x14 x15)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x19 x25 x26 = add_SNo (x18 x25 x26) (mul_SNo (add_SNo 2 (add_SNo 2 x26)) x25))) -> (forall x25, x25 :e int -> x20 x25 = x25) -> x21 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x20 x25) x21) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_045949c69c53e6e7c3dc7984287e9fe0cfa066df24c3c0bd30a319b7054c01c8 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = x22) -> (forall x22, x22 :e int -> x2 x22 = add_SNo 2 (add_SNo x22 x22)) -> (forall x22, x22 :e int -> x3 x22 = x22) -> x4 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = If_i (SNoLe x22 0) x23 (x2 (x5 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x6 x22 = x5 (x3 x22) x4) -> (forall x22, x22 :e int -> x7 x22 = add_SNo 1 (x6 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x8 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x1 x22) (x7 x22)) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> x11 x22 = add_SNo (mul_SNo 2 (mul_SNo 2 (mul_SNo x22 x22))) (minus_SNo x22)) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = x17 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_500d8ebbf9d439e397a8c7e543555f4dc0c7633b56a3b9a5a63c0b248acf5cc4 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x28 x28)) x28)) -> x1 = 2 -> (forall x28, x28 :e int -> x2 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x4 x28 = x3 x1 (x2 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (add_SNo (x4 x28) (minus_SNo x28)) x29)) -> (forall x28, x28 :e int -> x6 x28 = add_SNo 0 (minus_SNo x28)) -> (forall x28, x28 :e int -> x7 x28 = x28) -> x8 = 0 -> x9 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 x9) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> x14 x28 = mul_SNo x28 x28) -> x15 = 1 -> x16 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> x18 = x17 x15 x16 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo (mul_SNo (add_SNo x18 (minus_SNo 1)) x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = add_SNo x28 (minus_SNo 1)) -> (forall x28, x28 :e int -> x22 x28 = If_i (SNoLe x28 0) 0 1) -> x23 = 0 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) (x22 x28) x23) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_03b960e3a6df254110e99dad9748022e5b77519b78e7c70c1eafa595b632c1d0 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo (mul_SNo 2 (add_SNo x15 x15)) x15) -> (forall x15, x15 :e int -> x1 x15 = x15) -> (forall x15, x15 :e int -> x2 x15 = add_SNo 1 (add_SNo x15 x15)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) (x2 x15)) -> (forall x15, x15 :e int -> x5 x15 = x4 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> (forall x15, x15 :e int -> x9 x15 = add_SNo 1 (add_SNo x15 x15)) -> x10 = add_SNo 1 (add_SNo 2 2) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) (x9 x15) x10) -> (forall x15, x15 :e int -> x14 x15 = x13 x15) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_76db349f21daf973f48076ec8f75cdcf52895325003b1e170223f319d2d27888 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = mul_SNo (add_SNo 2 x29) x28)) -> x1 = 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = mul_SNo (add_SNo x4 (minus_SNo x29)) x28)) -> x6 = 2 -> (forall x28, x28 :e int -> x7 x28 = x28) -> x8 = 1 -> x9 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 x6))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 x9) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x15 x28 x29 = x29)) -> (forall x28, x28 :e int -> x16 x28 = add_SNo x28 (minus_SNo 1)) -> x17 = 1 -> x18 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x21 x28 = x19 (x16 x28) x17 x18) -> (forall x28, x28 :e int -> x22 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x23 x28 = add_SNo x28 (minus_SNo 1)) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (mul_SNo (x21 x28) (If_i (SNoLe x28 0) 1 (add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2)))) (minus_SNo 1)))) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_d2e9f1fb6e567add1e2881058249f1659d2f4f4b35c734f46ed57f4c9a36aca8 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = mul_SNo (add_SNo 2 x34) x33)) -> x1 = 2 -> (forall x33, x33 :e int -> x2 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x4 x33 = x3 x1 (x2 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x5 x33 x34 = add_SNo (add_SNo (x4 x33) (minus_SNo x33)) (mul_SNo x34 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x6 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x7 x33 x34 = x34)) -> x8 = 1 -> x9 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x10 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x5 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x11 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x6 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x12 x33 x34 = x10 (x7 x33 x34) x8 x9)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = add_SNo (add_SNo (add_SNo (x12 x33 x34) x33) x33) x33)) -> (forall x33, x33 :e int -> x14 x33 = x33) -> x15 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = If_i (SNoLe x33 0) x34 (x13 (x16 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x17 x33 = x16 (x14 x33) x15) -> (forall x33, x33 :e int -> x18 x33 = x17 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = add_SNo (add_SNo (add_SNo (mul_SNo x34 x34) x33) x33) x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x20 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = x34)) -> x22 = 1 -> x23 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x19 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x20 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x26 x33 x34 = x24 (x21 x33 x34) x22 x23)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x27 x33 x34 = add_SNo (add_SNo (x26 x33 x34) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33))) x33)) -> (forall x33, x33 :e int -> x28 x33 = x33) -> x29 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) x29) -> (forall x33, x33 :e int -> x32 x33 = x31 x33) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x18 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e054e3c17b96bed9bcfd5067f499a35193ad9ca648beb577d3e9f7e60b9913e2 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = x23)) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) x2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (add_SNo (mul_SNo x22 x23) (x4 x22 x23)) x22)) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = add_SNo x23 (minus_SNo 1))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x13 x22 x23 = x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) (x13 x22 x23))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (mul_SNo (add_SNo (x15 x22 x23) x22) (add_SNo 1 x23)) x22)) -> (forall x22, x22 :e int -> x17 x22 = add_SNo x22 (minus_SNo 1)) -> (forall x22, x22 :e int -> x18 x22 = If_i (SNoLe x22 0) 0 1) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
