Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
Definition False : prop :=
 (forall x0 : prop, x0).
Definition not : prop -> prop :=
 (fun x0 : prop => x0 -> False).
Axiom missingprop_f13a30ba835f65312d22677f30914dbd0f54e77f0c22600b1ea45a7dba53ed05 : (forall x0 : set -> prop, forall x1 x2 x3 x4 x5 x6, (forall x7 : set -> prop, x7 x1 -> x7 x2 -> x7 x3 -> x7 x4 -> x7 x5 -> x7 x6 -> (forall x8, x0 x8 -> x7 x8)) -> x0 x1 -> x0 x2 -> x0 x3 -> x0 x4 -> x0 x5 -> x0 x6 -> (forall x7 : set -> set -> set -> set -> prop, (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x2 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x3 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x4 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x3 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x4 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x4 x9 x3))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x3))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x3))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x4))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x4))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x5))) -> (forall x8, x0 x8 -> not (x7 x1 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x2 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x3 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x2 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x3 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x3 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x4 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x4 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x4 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x5 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x5 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x6 x8)) -> (forall x8 : set -> set -> set -> set -> prop, (forall x9 x10 x11 x12, x0 x9 -> x0 x10 -> x0 x11 -> x0 x12 -> x8 x9 x10 x11 x12 -> x8 x11 x12 x9 x10) -> (forall x9 x10, x0 x9 -> x0 x10 -> x8 x9 x10 x6 x6) -> (forall x9, x0 x9 -> x8 x5 x5 x6 x9) -> (forall x9, x0 x9 -> x8 x5 x6 x6 x9) -> x8 x1 x1 x1 x3 -> x8 x1 x1 x1 x5 -> x8 x1 x1 x2 x1 -> x8 x1 x1 x2 x2 -> x8 x1 x1 x2 x5 -> x8 x1 x1 x3 x3 -> x8 x1 x1 x3 x4 -> x8 x1 x1 x3 x5 -> x8 x1 x1 x4 x2 -> x8 x1 x1 x4 x3 -> x8 x1 x1 x4 x5 -> x8 x1 x1 x5 x3 -> x8 x1 x1 x5 x4 -> x8 x1 x1 x6 x1 -> x8 x1 x1 x6 x3 -> x8 x1 x1 x6 x4 -> x8 x1 x2 x1 x4 -> x8 x1 x2 x1 x6 -> x8 x1 x2 x2 x1 -> x8 x1 x2 x2 x2 -> x8 x1 x2 x2 x6 -> x8 x1 x2 x3 x3 -> x8 x1 x2 x3 x4 -> x8 x1 x2 x3 x6 -> x8 x1 x2 x4 x1 -> x8 x1 x2 x4 x4 -> x8 x1 x2 x4 x6 -> x8 x1 x2 x5 x3 -> x8 x1 x2 x5 x4 -> x8 x1 x2 x6 x2 -> x8 x1 x2 x6 x3 -> x8 x1 x2 x6 x4 -> x8 x1 x3 x1 x6 -> x8 x1 x3 x2 x3 -> x8 x1 x3 x2 x4 -> x8 x1 x3 x2 x5 -> x8 x1 x3 x3 x1 -> x8 x1 x3 x3 x2 -> x8 x1 x3 x3 x5 -> x8 x1 x3 x4 x1 -> x8 x1 x3 x4 x4 -> x8 x1 x3 x4 x6 -> x8 x1 x3 x5 x1 -> x8 x1 x3 x5 x2 -> x8 x1 x3 x6 x1 -> x8 x1 x3 x6 x2 -> x8 x1 x3 x6 x3 -> x8 x1 x4 x1 x5 -> x8 x1 x4 x2 x3 -> x8 x1 x4 x2 x4 -> x8 x1 x4 x2 x6 -> x8 x1 x4 x3 x1 -> x8 x1 x4 x3 x2 -> x8 x1 x4 x3 x6 -> x8 x1 x4 x4 x2 -> x8 x1 x4 x4 x3 -> x8 x1 x4 x4 x5 -> x8 x1 x4 x5 x1 -> x8 x1 x4 x5 x2 -> x8 x1 x4 x6 x1 -> x8 x1 x4 x6 x2 -> x8 x1 x4 x6 x4 -> x8 x1 x5 x2 x2 -> x8 x1 x5 x2 x3 -> x8 x1 x5 x3 x1 -> x8 x1 x5 x3 x4 -> x8 x1 x5 x3 x5 -> x8 x1 x5 x3 x6 -> x8 x1 x5 x4 x1 -> x8 x1 x5 x4 x4 -> x8 x1 x5 x4 x5 -> x8 x1 x5 x4 x6 -> x8 x1 x5 x5 x2 -> x8 x1 x5 x5 x3 -> x8 x1 x5 x6 x5 -> x8 x1 x6 x2 x1 -> x8 x1 x6 x2 x4 -> x8 x1 x6 x3 x2 -> x8 x1 x6 x3 x3 -> x8 x1 x6 x3 x5 -> x8 x1 x6 x3 x6 -> x8 x1 x6 x4 x2 -> x8 x1 x6 x4 x3 -> x8 x1 x6 x4 x5 -> x8 x1 x6 x4 x6 -> x8 x1 x6 x5 x1 -> x8 x1 x6 x5 x4 -> x8 x1 x6 x6 x5 -> x8 x2 x1 x2 x3 -> x8 x2 x1 x2 x6 -> x8 x2 x1 x3 x1 -> x8 x2 x1 x3 x5 -> x8 x2 x1 x4 x2 -> x8 x2 x1 x4 x3 -> x8 x2 x1 x4 x4 -> x8 x2 x1 x4 x5 -> x8 x2 x1 x5 x2 -> x8 x2 x1 x5 x3 -> x8 x2 x1 x5 x6 -> x8 x2 x1 x6 x2 -> x8 x2 x2 x2 x4 -> x8 x2 x2 x2 x5 -> x8 x2 x2 x3 x2 -> x8 x2 x2 x3 x6 -> x8 x2 x2 x4 x1 -> x8 x2 x2 x4 x3 -> x8 x2 x2 x4 x4 -> x8 x2 x2 x4 x6 -> x8 x2 x2 x5 x1 -> x8 x2 x2 x5 x4 -> x8 x2 x2 x5 x5 -> x8 x2 x2 x6 x1 -> x8 x2 x3 x2 x6 -> x8 x2 x3 x3 x3 -> x8 x2 x3 x3 x5 -> x8 x2 x3 x4 x1 -> x8 x2 x3 x4 x2 -> x8 x2 x3 x4 x4 -> x8 x2 x3 x4 x6 -> x8 x2 x3 x5 x1 -> x8 x2 x3 x5 x4 -> x8 x2 x3 x5 x6 -> x8 x2 x3 x6 x4 -> x8 x2 x4 x2 x5 -> x8 x2 x4 x3 x4 -> x8 x2 x4 x3 x6 -> x8 x2 x4 x4 x1 -> x8 x2 x4 x4 x2 -> x8 x2 x4 x4 x3 -> x8 x2 x4 x4 x5 -> x8 x2 x4 x5 x2 -> x8 x2 x4 x5 x3 -> x8 x2 x4 x5 x5 -> x8 x2 x4 x6 x3 -> x8 x2 x5 x2 x6 -> x8 x2 x5 x3 x2 -> x8 x2 x5 x3 x4 -> x8 x2 x5 x4 x5 -> x8 x2 x5 x4 x6 -> x8 x2 x5 x5 x6 -> x8 x2 x5 x6 x2 -> x8 x2 x5 x6 x4 -> x8 x2 x5 x6 x5 -> x8 x2 x6 x3 x1 -> x8 x2 x6 x3 x3 -> x8 x2 x6 x4 x5 -> x8 x2 x6 x4 x6 -> x8 x2 x6 x5 x5 -> x8 x2 x6 x6 x1 -> x8 x2 x6 x6 x3 -> x8 x2 x6 x6 x5 -> x8 x3 x1 x3 x2 -> x8 x3 x1 x3 x5 -> x8 x3 x1 x4 x2 -> x8 x3 x1 x4 x3 -> x8 x3 x1 x4 x6 -> x8 x3 x1 x5 x3 -> x8 x3 x1 x5 x4 -> x8 x3 x1 x6 x3 -> x8 x3 x1 x6 x5 -> x8 x3 x2 x3 x6 -> x8 x3 x2 x4 x1 -> x8 x3 x2 x4 x4 -> x8 x3 x2 x4 x5 -> x8 x3 x2 x5 x3 -> x8 x3 x2 x5 x4 -> x8 x3 x2 x6 x4 -> x8 x3 x2 x6 x5 -> x8 x3 x3 x3 x4 -> x8 x3 x3 x3 x5 -> x8 x3 x3 x4 x1 -> x8 x3 x3 x4 x4 -> x8 x3 x3 x4 x5 -> x8 x3 x3 x5 x1 -> x8 x3 x3 x5 x2 -> x8 x3 x3 x6 x1 -> x8 x3 x3 x6 x5 -> x8 x3 x4 x3 x6 -> x8 x3 x4 x4 x2 -> x8 x3 x4 x4 x3 -> x8 x3 x4 x4 x6 -> x8 x3 x4 x5 x1 -> x8 x3 x4 x5 x2 -> x8 x3 x4 x6 x2 -> x8 x3 x4 x6 x5 -> x8 x3 x5 x1 x6 -> x8 x3 x5 x3 x6 -> x8 x3 x5 x5 x2 -> x8 x3 x5 x5 x4 -> x8 x3 x6 x5 x1 -> x8 x3 x6 x5 x3 -> x8 x4 x1 x4 x2 -> x8 x4 x1 x4 x5 -> x8 x4 x1 x5 x3 -> x8 x4 x1 x5 x6 -> x8 x4 x1 x6 x1 -> x8 x4 x1 x6 x2 -> x8 x4 x1 x6 x5 -> x8 x4 x2 x4 x6 -> x8 x4 x2 x5 x4 -> x8 x4 x2 x5 x5 -> x8 x4 x2 x6 x1 -> x8 x4 x2 x6 x2 -> x8 x4 x2 x6 x5 -> x8 x4 x3 x4 x4 -> x8 x4 x3 x4 x6 -> x8 x4 x3 x5 x1 -> x8 x4 x3 x5 x6 -> x8 x4 x3 x6 x3 -> x8 x4 x3 x6 x4 -> x8 x4 x3 x6 x5 -> x8 x4 x4 x4 x5 -> x8 x4 x4 x5 x2 -> x8 x4 x4 x5 x5 -> x8 x4 x4 x6 x3 -> x8 x4 x4 x6 x4 -> x8 x4 x4 x6 x5 -> x8 x4 x5 x1 x6 -> x8 x4 x5 x2 x6 -> x8 x4 x5 x6 x2 -> x8 x4 x5 x6 x3 -> x8 x4 x6 x6 x1 -> x8 x4 x6 x6 x4 -> x8 x5 x1 x5 x3 -> x8 x5 x1 x5 x4 -> x8 x5 x1 x5 x6 -> x8 x5 x1 x6 x1 -> x8 x5 x1 x6 x2 -> x8 x5 x2 x5 x3 -> x8 x5 x2 x5 x4 -> x8 x5 x2 x5 x5 -> x8 x5 x2 x6 x1 -> x8 x5 x2 x6 x2 -> x8 x5 x3 x5 x6 -> x8 x5 x3 x6 x3 -> x8 x5 x3 x6 x4 -> x8 x5 x4 x5 x5 -> x8 x5 x4 x6 x3 -> x8 x5 x4 x6 x4 -> x8 x5 x5 x2 x6 -> x8 x6 x1 x6 x4 -> x8 x6 x2 x6 x3 -> x8 x6 x5 x1 x6 -> x8 x6 x5 x2 x6 -> x8 x6 x5 x5 x6 -> (forall x9, x0 x9 -> (forall x10, x0 x10 -> (forall x11, x0 x11 -> x7 x1 x1 x9 x1 -> x7 x9 x1 x10 x11 -> not (x8 x1 x1 x9 x1) -> not (x8 x1 x1 x10 x11) -> not (x8 x9 x1 x10 x11) -> (forall x12 : prop, (x9 = x3 -> x10 = x1 -> x11 = x2 -> x12) -> (x9 = x3 -> x10 = x1 -> x11 = x6 -> x12) -> (x9 = x3 -> x10 = x2 -> x11 = x3 -> x12) -> (x9 = x3 -> x10 = x2 -> x11 = x4 -> x12) -> (x9 = x3 -> x10 = x3 -> x11 = x6 -> x12) -> (x9 = x3 -> x10 = x4 -> x11 = x1 -> x12) -> (x9 = x3 -> x10 = x4 -> x11 = x4 -> x12) -> (x9 = x3 -> x10 = x5 -> x11 = x1 -> x12) -> (x9 = x3 -> x10 = x5 -> x11 = x2 -> x12) -> (x9 = x3 -> x10 = x5 -> x11 = x5 -> x12) -> (x9 = x3 -> x10 = x5 -> x11 = x6 -> x12) -> (x9 = x3 -> x10 = x6 -> x11 = x2 -> x12) -> (x9 = x4 -> x10 = x1 -> x11 = x4 -> x12) -> (x9 = x4 -> x10 = x1 -> x11 = x6 -> x12) -> (x9 = x4 -> x10 = x2 -> x11 = x6 -> x12) -> (x9 = x4 -> x10 = x3 -> x11 = x6 -> x12) -> (x9 = x4 -> x10 = x4 -> x11 = x4 -> x12) -> (x9 = x4 -> x10 = x4 -> x11 = x6 -> x12) -> (x9 = x4 -> x10 = x5 -> x11 = x1 -> x12) -> (x9 = x4 -> x10 = x5 -> x11 = x2 -> x12) -> (x9 = x4 -> x10 = x5 -> x11 = x5 -> x12) -> (x9 = x5 -> x10 = x1 -> x11 = x2 -> x12) -> (x9 = x5 -> x10 = x2 -> x11 = x4 -> x12) -> (x9 = x5 -> x10 = x2 -> x11 = x6 -> x12) -> (x9 = x5 -> x10 = x3 -> x11 = x2 -> x12) -> (x9 = x5 -> x10 = x4 -> x11 = x4 -> x12) -> (x9 = x5 -> x10 = x4 -> x11 = x6 -> x12) -> (x9 = x5 -> x10 = x5 -> x11 = x2 -> x12) -> (x9 = x5 -> x10 = x5 -> x11 = x5 -> x12) -> (x9 = x5 -> x10 = x6 -> x11 = x5 -> x12) -> x12))))))).
Axiom FalseE : False -> (forall x0 : prop, x0).
Theorem missingprop_4a57fd0e577f966349a65cf7fcad6e0636b7fb493c6eb4c49db64816b7882b2f : (forall x0 : set -> prop, forall x1 x2 x3 x4 x5 x6, (forall x7 : set -> prop, x7 x1 -> x7 x2 -> x7 x3 -> x7 x4 -> x7 x5 -> x7 x6 -> (forall x8, x0 x8 -> x7 x8)) -> x0 x1 -> x0 x2 -> x0 x3 -> x0 x4 -> x0 x5 -> x0 x6 -> (forall x7 : set -> set -> set -> set -> prop, (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x2 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x3 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x4 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x1))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x3 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x4 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x2))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x4 x9 x3))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x3))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x3))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x5 x9 x4))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x4))) -> (forall x8, x0 x8 -> (forall x9, x0 x9 -> not (x7 x8 x6 x9 x5))) -> (forall x8, x0 x8 -> not (x7 x1 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x2 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x3 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x1 x8)) -> (forall x8, x0 x8 -> not (x7 x2 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x3 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x2 x8)) -> (forall x8, x0 x8 -> not (x7 x3 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x3 x8)) -> (forall x8, x0 x8 -> not (x7 x4 x8 x4 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x4 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x4 x8)) -> (forall x8, x0 x8 -> not (x7 x5 x8 x5 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x5 x8)) -> (forall x8, x0 x8 -> not (x7 x6 x8 x6 x8)) -> (forall x8 : set -> set -> set -> set -> prop, (forall x9 x10 x11 x12, x0 x9 -> x0 x10 -> x0 x11 -> x0 x12 -> x8 x9 x10 x11 x12 -> x8 x11 x12 x9 x10) -> (forall x9 x10, x0 x9 -> x0 x10 -> x8 x9 x10 x6 x6) -> (forall x9, x0 x9 -> x8 x5 x5 x6 x9) -> (forall x9, x0 x9 -> x8 x5 x6 x6 x9) -> x8 x1 x1 x1 x3 -> x8 x1 x1 x1 x5 -> x8 x1 x1 x2 x1 -> x8 x1 x1 x2 x2 -> x8 x1 x1 x2 x5 -> x8 x1 x1 x3 x3 -> x8 x1 x1 x3 x4 -> x8 x1 x1 x3 x5 -> x8 x1 x1 x4 x2 -> x8 x1 x1 x4 x3 -> x8 x1 x1 x4 x5 -> x8 x1 x1 x5 x3 -> x8 x1 x1 x5 x4 -> x8 x1 x1 x6 x1 -> x8 x1 x1 x6 x3 -> x8 x1 x1 x6 x4 -> x8 x1 x2 x1 x4 -> x8 x1 x2 x1 x6 -> x8 x1 x2 x2 x1 -> x8 x1 x2 x2 x2 -> x8 x1 x2 x2 x6 -> x8 x1 x2 x3 x3 -> x8 x1 x2 x3 x4 -> x8 x1 x2 x3 x6 -> x8 x1 x2 x4 x1 -> x8 x1 x2 x4 x4 -> x8 x1 x2 x4 x6 -> x8 x1 x2 x5 x3 -> x8 x1 x2 x5 x4 -> x8 x1 x2 x6 x2 -> x8 x1 x2 x6 x3 -> x8 x1 x2 x6 x4 -> x8 x1 x3 x1 x6 -> x8 x1 x3 x2 x3 -> x8 x1 x3 x2 x4 -> x8 x1 x3 x2 x5 -> x8 x1 x3 x3 x1 -> x8 x1 x3 x3 x2 -> x8 x1 x3 x3 x5 -> x8 x1 x3 x4 x1 -> x8 x1 x3 x4 x4 -> x8 x1 x3 x4 x6 -> x8 x1 x3 x5 x1 -> x8 x1 x3 x5 x2 -> x8 x1 x3 x6 x1 -> x8 x1 x3 x6 x2 -> x8 x1 x3 x6 x3 -> x8 x1 x4 x1 x5 -> x8 x1 x4 x2 x3 -> x8 x1 x4 x2 x4 -> x8 x1 x4 x2 x6 -> x8 x1 x4 x3 x1 -> x8 x1 x4 x3 x2 -> x8 x1 x4 x3 x6 -> x8 x1 x4 x4 x2 -> x8 x1 x4 x4 x3 -> x8 x1 x4 x4 x5 -> x8 x1 x4 x5 x1 -> x8 x1 x4 x5 x2 -> x8 x1 x4 x6 x1 -> x8 x1 x4 x6 x2 -> x8 x1 x4 x6 x4 -> x8 x1 x5 x2 x2 -> x8 x1 x5 x2 x3 -> x8 x1 x5 x3 x1 -> x8 x1 x5 x3 x4 -> x8 x1 x5 x3 x5 -> x8 x1 x5 x3 x6 -> x8 x1 x5 x4 x1 -> x8 x1 x5 x4 x4 -> x8 x1 x5 x4 x5 -> x8 x1 x5 x4 x6 -> x8 x1 x5 x5 x2 -> x8 x1 x5 x5 x3 -> x8 x1 x5 x6 x5 -> x8 x1 x6 x2 x1 -> x8 x1 x6 x2 x4 -> x8 x1 x6 x3 x2 -> x8 x1 x6 x3 x3 -> x8 x1 x6 x3 x5 -> x8 x1 x6 x3 x6 -> x8 x1 x6 x4 x2 -> x8 x1 x6 x4 x3 -> x8 x1 x6 x4 x5 -> x8 x1 x6 x4 x6 -> x8 x1 x6 x5 x1 -> x8 x1 x6 x5 x4 -> x8 x1 x6 x6 x5 -> x8 x2 x1 x2 x3 -> x8 x2 x1 x2 x6 -> x8 x2 x1 x3 x1 -> x8 x2 x1 x3 x5 -> x8 x2 x1 x4 x2 -> x8 x2 x1 x4 x3 -> x8 x2 x1 x4 x4 -> x8 x2 x1 x4 x5 -> x8 x2 x1 x5 x2 -> x8 x2 x1 x5 x3 -> x8 x2 x1 x5 x6 -> x8 x2 x1 x6 x2 -> x8 x2 x2 x2 x4 -> x8 x2 x2 x2 x5 -> x8 x2 x2 x3 x2 -> x8 x2 x2 x3 x6 -> x8 x2 x2 x4 x1 -> x8 x2 x2 x4 x3 -> x8 x2 x2 x4 x4 -> x8 x2 x2 x4 x6 -> x8 x2 x2 x5 x1 -> x8 x2 x2 x5 x4 -> x8 x2 x2 x5 x5 -> x8 x2 x2 x6 x1 -> x8 x2 x3 x2 x6 -> x8 x2 x3 x3 x3 -> x8 x2 x3 x3 x5 -> x8 x2 x3 x4 x1 -> x8 x2 x3 x4 x2 -> x8 x2 x3 x4 x4 -> x8 x2 x3 x4 x6 -> x8 x2 x3 x5 x1 -> x8 x2 x3 x5 x4 -> x8 x2 x3 x5 x6 -> x8 x2 x3 x6 x4 -> x8 x2 x4 x2 x5 -> x8 x2 x4 x3 x4 -> x8 x2 x4 x3 x6 -> x8 x2 x4 x4 x1 -> x8 x2 x4 x4 x2 -> x8 x2 x4 x4 x3 -> x8 x2 x4 x4 x5 -> x8 x2 x4 x5 x2 -> x8 x2 x4 x5 x3 -> x8 x2 x4 x5 x5 -> x8 x2 x4 x6 x3 -> x8 x2 x5 x2 x6 -> x8 x2 x5 x3 x2 -> x8 x2 x5 x3 x4 -> x8 x2 x5 x4 x5 -> x8 x2 x5 x4 x6 -> x8 x2 x5 x5 x6 -> x8 x2 x5 x6 x2 -> x8 x2 x5 x6 x4 -> x8 x2 x5 x6 x5 -> x8 x2 x6 x3 x1 -> x8 x2 x6 x3 x3 -> x8 x2 x6 x4 x5 -> x8 x2 x6 x4 x6 -> x8 x2 x6 x5 x5 -> x8 x2 x6 x6 x1 -> x8 x2 x6 x6 x3 -> x8 x2 x6 x6 x5 -> x8 x3 x1 x3 x2 -> x8 x3 x1 x3 x5 -> x8 x3 x1 x4 x2 -> x8 x3 x1 x4 x3 -> x8 x3 x1 x4 x6 -> x8 x3 x1 x5 x3 -> x8 x3 x1 x5 x4 -> x8 x3 x1 x6 x3 -> x8 x3 x1 x6 x5 -> x8 x3 x2 x3 x6 -> x8 x3 x2 x4 x1 -> x8 x3 x2 x4 x4 -> x8 x3 x2 x4 x5 -> x8 x3 x2 x5 x3 -> x8 x3 x2 x5 x4 -> x8 x3 x2 x6 x4 -> x8 x3 x2 x6 x5 -> x8 x3 x3 x3 x4 -> x8 x3 x3 x3 x5 -> x8 x3 x3 x4 x1 -> x8 x3 x3 x4 x4 -> x8 x3 x3 x4 x5 -> x8 x3 x3 x5 x1 -> x8 x3 x3 x5 x2 -> x8 x3 x3 x6 x1 -> x8 x3 x3 x6 x5 -> x8 x3 x4 x3 x6 -> x8 x3 x4 x4 x2 -> x8 x3 x4 x4 x3 -> x8 x3 x4 x4 x6 -> x8 x3 x4 x5 x1 -> x8 x3 x4 x5 x2 -> x8 x3 x4 x6 x2 -> x8 x3 x4 x6 x5 -> x8 x3 x5 x1 x6 -> x8 x3 x5 x3 x6 -> x8 x3 x5 x5 x2 -> x8 x3 x5 x5 x4 -> x8 x3 x6 x5 x1 -> x8 x3 x6 x5 x3 -> x8 x4 x1 x4 x2 -> x8 x4 x1 x4 x5 -> x8 x4 x1 x5 x3 -> x8 x4 x1 x5 x6 -> x8 x4 x1 x6 x1 -> x8 x4 x1 x6 x2 -> x8 x4 x1 x6 x5 -> x8 x4 x2 x4 x6 -> x8 x4 x2 x5 x4 -> x8 x4 x2 x5 x5 -> x8 x4 x2 x6 x1 -> x8 x4 x2 x6 x2 -> x8 x4 x2 x6 x5 -> x8 x4 x3 x4 x4 -> x8 x4 x3 x4 x6 -> x8 x4 x3 x5 x1 -> x8 x4 x3 x5 x6 -> x8 x4 x3 x6 x3 -> x8 x4 x3 x6 x4 -> x8 x4 x3 x6 x5 -> x8 x4 x4 x4 x5 -> x8 x4 x4 x5 x2 -> x8 x4 x4 x5 x5 -> x8 x4 x4 x6 x3 -> x8 x4 x4 x6 x4 -> x8 x4 x4 x6 x5 -> x8 x4 x5 x1 x6 -> x8 x4 x5 x2 x6 -> x8 x4 x5 x6 x2 -> x8 x4 x5 x6 x3 -> x8 x4 x6 x6 x1 -> x8 x4 x6 x6 x4 -> x8 x5 x1 x5 x3 -> x8 x5 x1 x5 x4 -> x8 x5 x1 x5 x6 -> x8 x5 x1 x6 x1 -> x8 x5 x1 x6 x2 -> x8 x5 x2 x5 x3 -> x8 x5 x2 x5 x4 -> x8 x5 x2 x5 x5 -> x8 x5 x2 x6 x1 -> x8 x5 x2 x6 x2 -> x8 x5 x3 x5 x6 -> x8 x5 x3 x6 x3 -> x8 x5 x3 x6 x4 -> x8 x5 x4 x5 x5 -> x8 x5 x4 x6 x3 -> x8 x5 x4 x6 x4 -> x8 x5 x5 x2 x6 -> x8 x6 x1 x6 x4 -> x8 x6 x2 x6 x3 -> x8 x6 x5 x1 x6 -> x8 x6 x5 x2 x6 -> x8 x6 x5 x5 x6 -> (x1 = x2 -> (forall x9 : prop, x9)) -> (x1 = x3 -> (forall x9 : prop, x9)) -> (x1 = x4 -> (forall x9 : prop, x9)) -> (x1 = x5 -> (forall x9 : prop, x9)) -> (x1 = x6 -> (forall x9 : prop, x9)) -> (x2 = x3 -> (forall x9 : prop, x9)) -> (x2 = x4 -> (forall x9 : prop, x9)) -> (x2 = x5 -> (forall x9 : prop, x9)) -> (x2 = x6 -> (forall x9 : prop, x9)) -> (x3 = x4 -> (forall x9 : prop, x9)) -> (x3 = x5 -> (forall x9 : prop, x9)) -> (x3 = x6 -> (forall x9 : prop, x9)) -> (x4 = x5 -> (forall x9 : prop, x9)) -> (x4 = x6 -> (forall x9 : prop, x9)) -> (x5 = x6 -> (forall x9 : prop, x9)) -> (forall x9, x0 x9 -> (forall x10, x0 x10 -> x7 x1 x1 x4 x1 -> x7 x4 x1 x9 x10 -> not (x8 x1 x1 x4 x1) -> not (x8 x1 x1 x9 x10) -> not (x8 x4 x1 x9 x10) -> (forall x11, x0 x11 -> (forall x12, x0 x12 -> x7 x9 x10 x11 x12 -> not (x8 x1 x1 x11 x12) -> not (x8 x4 x1 x11 x12) -> not (x8 x9 x10 x11 x12) -> (forall x13 : prop, (x9 = x1 -> x10 = x4 -> x11 = x1 -> x12 = x6 -> x13) -> (x9 = x1 -> x10 = x4 -> x11 = x4 -> x12 = x4 -> x13) -> (x9 = x1 -> x10 = x4 -> x11 = x4 -> x12 = x6 -> x13) -> (x9 = x1 -> x10 = x4 -> x11 = x5 -> x12 = x5 -> x13) -> (x9 = x1 -> x10 = x6 -> x11 = x2 -> x12 = x6 -> x13) -> (x9 = x2 -> x10 = x6 -> x11 = x3 -> x12 = x6 -> x13) -> (x9 = x3 -> x10 = x6 -> x11 = x4 -> x12 = x6 -> x13) -> (x9 = x4 -> x10 = x4 -> x11 = x1 -> x12 = x6 -> x13) -> (x9 = x4 -> x10 = x4 -> x11 = x2 -> x12 = x6 -> x13) -> (x9 = x4 -> x10 = x4 -> x11 = x3 -> x12 = x6 -> x13) -> (x9 = x4 -> x10 = x4 -> x11 = x4 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x1 -> x11 = x2 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x1 -> x11 = x4 -> x12 = x4 -> x13) -> (x9 = x5 -> x10 = x1 -> x11 = x4 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x1 -> x11 = x5 -> x12 = x2 -> x13) -> (x9 = x5 -> x10 = x1 -> x11 = x5 -> x12 = x5 -> x13) -> (x9 = x5 -> x10 = x2 -> x11 = x1 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x2 -> x11 = x2 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x2 -> x11 = x3 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x2 -> x11 = x4 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x5 -> x11 = x1 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x5 -> x11 = x3 -> x12 = x6 -> x13) -> (x9 = x5 -> x10 = x5 -> x11 = x4 -> x12 = x6 -> x13) -> x13)))))))).
admit.
Qed.
