Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
Theorem missingprop_cefeef2947286179b9ae0e41abf60189c96850d14ddcb2e3e8e0ae9a7f11741b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> x0 x35 = add_SNo (add_SNo x35 x35) x35) -> x1 = 2 -> (forall x35, x35 :e int -> x2 x35 = x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x3 x35 x36 = If_i (SNoLe x35 0) x36 (x0 (x3 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x4 x35 = x3 x1 (x2 x35)) -> (forall x35, x35 :e int -> x5 x35 = mul_SNo 2 (x4 x35)) -> (forall x35, x35 :e int -> x6 x35 = x35) -> x7 = add_SNo 1 2 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x8 x35 x36 = If_i (SNoLe x35 0) x36 (x5 (x8 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x9 x35 = x8 (x6 x35) x7) -> (forall x35, x35 :e int -> x10 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x11 x35 = add_SNo x35 x35) -> x12 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x35 x36 = If_i (SNoLe x35 0) x36 (x10 (x13 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x14 x35 = x13 (x11 x35) x12) -> (forall x35, x35 :e int -> x15 x35 = add_SNo (x9 x35) (x14 x35)) -> (forall x35, x35 :e int -> x16 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x17 x35 = x35) -> x18 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x19 x35 x36 = If_i (SNoLe x35 0) x36 (x16 (x19 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x20 x35 = x19 (x17 x35) x18) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x21 x35 x36 = mul_SNo x35 x36)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x22 x35 x36 = x36)) -> (forall x35, x35 :e int -> x23 x35 = x35) -> x24 = add_SNo 1 2 -> x25 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x26 x35 x36 x37 = If_i (SNoLe x35 0) x36 (x21 (x26 (add_SNo x35 (minus_SNo 1)) x36 x37) (x27 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x27 x35 x36 x37 = If_i (SNoLe x35 0) x37 (x22 (x26 (add_SNo x35 (minus_SNo 1)) x36 x37) (x27 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> x28 x35 = x26 (x23 x35) x24 x25) -> (forall x35, x35 :e int -> x29 x35 = add_SNo x35 x35) -> (forall x35, x35 :e int -> x30 x35 = x35) -> x31 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x32 x35 x36 = If_i (SNoLe x35 0) x36 (x29 (x32 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x33 x35 = x32 (x30 x35) x31) -> (forall x35, x35 :e int -> x34 x35 = mul_SNo (add_SNo (x20 x35) (x28 x35)) (x33 x35)) -> (forall x35, x35 :e int -> SNoLe 0 x35 -> x15 x35 = x34 x35)))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_fe508630c7e69a9fed94634fab2c11a7a6e84fdbd1819b6d2796183f3b5c0bc1 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = add_SNo (add_SNo x33 x33) x33) -> (forall x33, x33 :e int -> x1 x33 = x33) -> x2 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x4 x33 = x3 (x1 x33) x2) -> (forall x33, x33 :e int -> x5 x33 = mul_SNo x33 x33) -> x6 = 2 -> x7 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> x9 = x8 x6 x7 -> (forall x33, x33 :e int -> x10 x33 = add_SNo (mul_SNo x9 x33) x33) -> (forall x33, x33 :e int -> x11 x33 = x33) -> x12 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = If_i (SNoLe x33 0) x34 (x10 (x13 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x14 x33 = x13 (x11 x33) x12) -> (forall x33, x33 :e int -> x15 x33 = add_SNo (x4 x33) (x14 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x17 x33 x34 = x34)) -> (forall x33, x33 :e int -> x18 x33 = x33) -> x19 = 1 -> x20 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x21 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x16 (x21 (add_SNo x33 (minus_SNo 1)) x34 x35) (x22 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x22 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x17 (x21 (add_SNo x33 (minus_SNo 1)) x34 x35) (x22 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x23 x33 = x21 (x18 x33) x19 x20) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = x33) -> x27 = 1 -> x28 = add_SNo 1 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = add_SNo (mul_SNo 2 (x23 x33)) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x15 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_455454a8277b7f0b112d64e6419c9ca89e021d6063831172c0c0bf9a45380f09 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> x0 x31 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x31 x31)) x31)) (minus_SNo 1)) -> (forall x31, x31 :e int -> x1 x31 = add_SNo 1 (add_SNo x31 x31)) -> x2 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x3 x31 x32 = If_i (SNoLe x31 0) x32 (x0 (x3 (add_SNo x31 (minus_SNo 1)) x32)))) -> (forall x31, x31 :e int -> x4 x31 = x3 (x1 x31) x2) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x5 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x6 x31 x32 = x32)) -> (forall x31, x31 :e int -> x7 x31 = x31) -> x8 = 2 -> x9 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x10 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x5 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x11 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x6 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x12 x31 = x10 (x7 x31) x8 x9) -> (forall x31, x31 :e int -> x13 x31 = add_SNo (add_SNo (x4 x31) (minus_SNo 1)) (minus_SNo (x12 x31))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x15 x31 x32 = x32)) -> (forall x31, x31 :e int -> x16 x31 = x31) -> x17 = 2 -> x18 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) x17 x18) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = add_SNo 1 (mul_SNo x31 x32))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x23 x31 x32 = x32)) -> (forall x31, x31 :e int -> x24 x31 = x31) -> x25 = 1 -> x26 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) x25 x26) -> (forall x31, x31 :e int -> x30 x31 = add_SNo (mul_SNo (add_SNo (mul_SNo 2 (mul_SNo 2 (x21 x31))) (minus_SNo 1)) (x29 x31)) (minus_SNo 1)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5e5875ba51a374f5e3317f3ac094a42f4936be3cb387f59b50ce38e56ba38d3d : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x33 x34 x35 x36 :e int))) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x40 x41 x42 x43 :e int))) -> (forall x41 : set -> set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x41 x42 x43 x44 :e int))) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> x0 x44 = add_SNo 2 (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x44 x44)) x44))) -> (forall x44, x44 :e int -> x1 x44 = add_SNo x44 x44) -> x2 = 2 -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x3 x44 x45 = If_i (SNoLe x44 0) x45 (x0 (x3 (add_SNo x44 (minus_SNo 1)) x45)))) -> (forall x44, x44 :e int -> x4 x44 = x3 (x1 x44) x2) -> (forall x44, x44 :e int -> x5 x44 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x44 x44)) x44)) -> (forall x44, x44 :e int -> x6 x44 = x44) -> x7 = 1 -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x8 x44 x45 = If_i (SNoLe x44 0) x45 (x5 (x8 (add_SNo x44 (minus_SNo 1)) x45)))) -> (forall x44, x44 :e int -> x9 x44 = x8 (x6 x44) x7) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x10 x44 x45 = mul_SNo x44 x45)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x11 x44 x45 = x45)) -> (forall x44, x44 :e int -> x12 x44 = x44) -> x13 = 1 -> x14 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x15 x44 x45 x46 = If_i (SNoLe x44 0) x45 (x10 (x15 (add_SNo x44 (minus_SNo 1)) x45 x46) (x16 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x16 x44 x45 x46 = If_i (SNoLe x44 0) x46 (x11 (x15 (add_SNo x44 (minus_SNo 1)) x45 x46) (x16 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> x17 x44 = x15 (x12 x44) x13 x14) -> (forall x44, x44 :e int -> x18 x44 = add_SNo (mul_SNo (mul_SNo (add_SNo (x4 x44) (minus_SNo (x9 x44))) 2) 2) (x17 x44)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x19 x44 x45 = mul_SNo x44 x45)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x20 x44 x45 = x45)) -> (forall x44, x44 :e int -> x21 x44 = x44) -> x22 = 2 -> x23 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x24 x44 x45 x46 = If_i (SNoLe x44 0) x45 (x19 (x24 (add_SNo x44 (minus_SNo 1)) x45 x46) (x25 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x25 x44 x45 x46 = If_i (SNoLe x44 0) x46 (x20 (x24 (add_SNo x44 (minus_SNo 1)) x45 x46) (x25 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> x26 x44 = x24 (x21 x44) x22 x23) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x27 x44 x45 = add_SNo 1 (mul_SNo x44 x45))) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x28 x44 x45 = x45)) -> (forall x44, x44 :e int -> x29 x44 = x44) -> x30 = 1 -> x31 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x44 x45 x46 = If_i (SNoLe x44 0) x45 (x27 (x32 (add_SNo x44 (minus_SNo 1)) x45 x46) (x33 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x33 x44 x45 x46 = If_i (SNoLe x44 0) x46 (x28 (x32 (add_SNo x44 (minus_SNo 1)) x45 x46) (x33 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> x34 x44 = x32 (x29 x44) x30 x31) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x35 x44 x45 = mul_SNo x44 x45)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x36 x44 x45 = x45)) -> (forall x44, x44 :e int -> x37 x44 = x44) -> x38 = 1 -> x39 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x40 x44 x45 x46 = If_i (SNoLe x44 0) x45 (x35 (x40 (add_SNo x44 (minus_SNo 1)) x45 x46) (x41 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x41 x44 x45 x46 = If_i (SNoLe x44 0) x46 (x36 (x40 (add_SNo x44 (minus_SNo 1)) x45 x46) (x41 (add_SNo x44 (minus_SNo 1)) x45 x46))))) -> (forall x44, x44 :e int -> x42 x44 = x40 (x37 x44) x38 x39) -> (forall x44, x44 :e int -> x43 x44 = add_SNo (add_SNo (mul_SNo (add_SNo (mul_SNo 2 (mul_SNo 2 (x26 x44))) (minus_SNo 1)) (x34 x44)) (minus_SNo 1)) (minus_SNo (x42 x44))) -> (forall x44, x44 :e int -> SNoLe 0 x44 -> x18 x44 = x43 x44))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_bd81af9fb5aa00de7bc69bf684d7a1def45bc11074031843db0f13ad0a70d4f3 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo 1 (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x28 x28)) x28))) -> (forall x28, x28 :e int -> x1 x28 = add_SNo x28 x28) -> x2 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x4 x28 = x3 (x1 x28) x2) -> (forall x28, x28 :e int -> x5 x28 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x28 x28)) x28)) -> (forall x28, x28 :e int -> x6 x28 = x28) -> x7 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = If_i (SNoLe x28 0) x29 (x5 (x8 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x9 x28 = x8 (x6 x28) x7) -> (forall x28, x28 :e int -> x10 x28 = mul_SNo (add_SNo (x4 x28) (x9 x28)) (add_SNo 1 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x12 x28 x29 = x29)) -> (forall x28, x28 :e int -> x13 x28 = x28) -> x14 = add_SNo 1 2 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x16 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x11 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x17 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x12 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x18 x28 = x16 (x13 x28) x14 x15) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo 1 (mul_SNo x28 x29))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (add_SNo 1 (add_SNo 2 (x18 x28))) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x10 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_dea00677c4f0ea803cd5ef98b506ea257f88a0c84a7be838b2bb78061db33994 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x33 x34 x35 x36 :e int))) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> x0 x36 = add_SNo 1 (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x36 x36)) x36))) -> (forall x36, x36 :e int -> x1 x36 = add_SNo x36 x36) -> x2 = 1 -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x3 x36 x37 = If_i (SNoLe x36 0) x37 (x0 (x3 (add_SNo x36 (minus_SNo 1)) x37)))) -> (forall x36, x36 :e int -> x4 x36 = x3 (x1 x36) x2) -> (forall x36, x36 :e int -> x5 x36 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x36 x36)) x36)) -> (forall x36, x36 :e int -> x6 x36 = x36) -> x7 = 2 -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x8 x36 x37 = If_i (SNoLe x36 0) x37 (x5 (x8 (add_SNo x36 (minus_SNo 1)) x37)))) -> (forall x36, x36 :e int -> x9 x36 = x8 (x6 x36) x7) -> (forall x36, x36 :e int -> x10 x36 = add_SNo (x4 x36) (mul_SNo 2 (x9 x36))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x11 x36 x37 = add_SNo 1 (mul_SNo x36 x37))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x12 x36 x37 = x37)) -> (forall x36, x36 :e int -> x13 x36 = x36) -> x14 = 1 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x16 x36 x37 x38 = If_i (SNoLe x36 0) x37 (x11 (x16 (add_SNo x36 (minus_SNo 1)) x37 x38) (x17 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x17 x36 x37 x38 = If_i (SNoLe x36 0) x38 (x12 (x16 (add_SNo x36 (minus_SNo 1)) x37 x38) (x17 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> x18 x36 = x16 (x13 x36) x14 x15) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x19 x36 x37 = mul_SNo x36 x37)) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x20 x36 x37 = x37)) -> (forall x36, x36 :e int -> x21 x36 = x36) -> x22 = 1 -> x23 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x24 x36 x37 x38 = If_i (SNoLe x36 0) x37 (x19 (x24 (add_SNo x36 (minus_SNo 1)) x37 x38) (x25 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x25 x36 x37 x38 = If_i (SNoLe x36 0) x38 (x20 (x24 (add_SNo x36 (minus_SNo 1)) x37 x38) (x25 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> x26 x36 = x24 (x21 x36) x22 x23) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x27 x36 x37 = mul_SNo x36 x37)) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x28 x36 x37 = x37)) -> (forall x36, x36 :e int -> x29 x36 = x36) -> x30 = 2 -> x31 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x32 x36 x37 x38 = If_i (SNoLe x36 0) x37 (x27 (x32 (add_SNo x36 (minus_SNo 1)) x37 x38) (x33 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x33 x36 x37 x38 = If_i (SNoLe x36 0) x38 (x28 (x32 (add_SNo x36 (minus_SNo 1)) x37 x38) (x33 (add_SNo x36 (minus_SNo 1)) x37 x38))))) -> (forall x36, x36 :e int -> x34 x36 = x32 (x29 x36) x30 x31) -> (forall x36, x36 :e int -> x35 x36 = add_SNo (add_SNo (mul_SNo (add_SNo 1 (x18 x36)) (add_SNo 1 (x26 x36))) (minus_SNo 1)) (x34 x36)) -> (forall x36, x36 :e int -> SNoLe 0 x36 -> x10 x36 = x35 x36))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_7d9a4cc3ca88e279096f4c55d31ba338ccd273ab7f9da442117afadc7bfab402 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = mul_SNo x25 x25) -> x1 = 2 -> x2 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> x4 = x3 x1 x2 -> (forall x25, x25 :e int -> x5 x25 = add_SNo 1 (mul_SNo x4 x25)) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = add_SNo 1 (mul_SNo x25 x26))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = x26)) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 1 -> (forall x25, x25 :e int -> x15 x25 = mul_SNo x25 x25) -> x16 = 2 -> x17 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x18 x25 x26 = If_i (SNoLe x25 0) x26 (x15 (x18 (add_SNo x25 (minus_SNo 1)) x26)))) -> x19 = x18 x16 x17 -> x20 = x19 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x13 x25) x14 x20) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_074549d033f0b962b29d8bc46c72c501cce75c4b80d009fa4770e634ff840705 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo 1 (mul_SNo (add_SNo 2 x28) x28)) -> x1 = 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> x5 x28 = add_SNo (mul_SNo x4 x28) (minus_SNo x28)) -> (forall x28, x28 :e int -> x6 x28 = x28) -> x7 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = If_i (SNoLe x28 0) x29 (x5 (x8 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x9 x28 = x8 (x6 x28) x7) -> (forall x28, x28 :e int -> x10 x28 = x9 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x12 x28 x29 = x29)) -> (forall x28, x28 :e int -> x13 x28 = x28) -> x14 = 1 -> x15 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x16 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x11 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x17 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x12 (x16 (add_SNo x28 (minus_SNo 1)) x29 x30) (x17 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x18 x28 = x16 (x13 x28) x14 x15) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x10 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_483fe0908b5f5e4df4055e92b4a8ce3a0ffc0e5b5b28420bf888cec21578e08b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = x29)) -> x3 = 0 -> (forall x28, x28 :e int -> x4 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x7 x28 x29 = x5 (x2 x28 x29) x3 (x4 x28))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = x7 x28 x29)) -> (forall x28, x28 :e int -> x9 x28 = x28) -> x10 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x15 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = add_SNo x29 (minus_SNo 1))) -> x17 = 2 -> x18 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x21 x28 x29 = x19 (x16 x28 x29) x17 x18)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = mul_SNo x28 (x21 x28 x29))) -> (forall x28, x28 :e int -> x23 x28 = add_SNo x28 (minus_SNo 2)) -> x24 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_0e3c31a11e3d0eb94f878016621b18db67001935cda1345b7395adc7767e799e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> x0 x12 = add_SNo 1 (add_SNo x12 x12)) -> (forall x12, x12 :e int -> x1 x12 = add_SNo 1 x12) -> (forall x12, x12 :e int -> x2 x12 = x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = x4 x12) -> (forall x12, x12 :e int -> x6 x12 = add_SNo x12 x12) -> (forall x12, x12 :e int -> x7 x12 = x12) -> (forall x12, x12 :e int -> x8 x12 = add_SNo 1 x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo (mul_SNo 2 (x10 x12)) (minus_SNo 1)) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_839d46c72c5972680b5dd440395c2484b86fde5b4f3845d7c600661bef0fa1ec : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x0 x12 x13 = add_SNo x12 x13)) -> (forall x12, x12 :e int -> x1 x12 = mul_SNo 2 (add_SNo 2 (add_SNo x12 x12))) -> x2 = 2 -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13) x12))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) x2) -> (forall x12, x12 :e int -> x5 x12 = mul_SNo 2 (x4 x12)) -> (forall x12, x12 :e int -> x6 x12 = add_SNo (mul_SNo x12 x12) x12) -> x7 = 1 -> (forall x12, x12 :e int -> x8 x12 = mul_SNo 2 (add_SNo 2 (add_SNo x12 x12))) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 x7 (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo 2 (add_SNo 2 (x10 x12))) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_738105d4410bff02af88f08566fcc95167bd885cfeaa0f353843fd2645287547 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = add_SNo (mul_SNo x25 x26) x25)) -> x1 = add_SNo 2 2 -> (forall x25, x25 :e int -> x2 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x4 x25 = x3 x1 (x2 x25)) -> (forall x25, x25 :e int -> x5 x25 = add_SNo (x4 x25) x25) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = add_SNo 1 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> x11 x25 = mul_SNo (add_SNo (add_SNo x25 x25) x25) x25) -> x12 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = x26)) -> (forall x25, x25 :e int -> x15 x25 = x25) -> x16 = 1 -> x17 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x13 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x19 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x14 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x20 x25 = x18 (x15 x25) x16 x17) -> (forall x25, x25 :e int -> x21 x25 = x20 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 x12 (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f8fd144caa1e281ad2ae706d35ba405155b9c9d8e669f474e3681135640477f1 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x20 x20) x20)) x20) -> (forall x20, x20 :e int -> x1 x20 = add_SNo (add_SNo x20 x20) x20) -> x2 = add_SNo 1 (add_SNo 2 2) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = mul_SNo (add_SNo (mul_SNo 2 (add_SNo x20 x20)) x20) (mul_SNo x20 x20)) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = x21)) -> (forall x20, x20 :e int -> x10 x20 = x20) -> x11 = 1 -> x12 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x13 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x8 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x14 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x9 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x15 x20 = x13 (x10 x20) x11 x12) -> (forall x20, x20 :e int -> x16 x20 = x15 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 x7 (x16 x20)) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_974f3eb6a8b8decbf1695844ce086194834eaf51107c33eb3c07bb677cfd04c1 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo (add_SNo x17 x17) x17) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = add_SNo (x4 x17) (minus_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (mul_SNo x17 x17)) x17)))) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo (mul_SNo x17 x17) x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (add_SNo (add_SNo (x15 x17) (minus_SNo (mul_SNo 2 (mul_SNo x17 x17)))) (minus_SNo x17)) 2) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_a2170791469de67172ea24940c29723d7f6e3eb03ed22158f8884cc0b1c68946 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x1 x25 = x25) -> (forall x25, x25 :e int -> x2 x25 = add_SNo (mul_SNo 2 (add_SNo 2 x25)) x25) -> (forall x25, x25 :e int -> x3 x25 = x25) -> x4 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = If_i (SNoLe x25 0) x26 (x2 (x5 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x6 x25 = x5 (x3 x25) x4) -> (forall x25, x25 :e int -> x7 x25 = add_SNo 1 (x6 x25)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x1 x25) (x7 x25)) -> (forall x25, x25 :e int -> x10 x25 = x9 x25) -> (forall x25, x25 :e int -> x11 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x12 x25 = x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x13 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = x26)) -> (forall x25, x25 :e int -> x15 x25 = x25) -> x16 = 2 -> x17 = add_SNo 1 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x13 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x19 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x14 (x18 (add_SNo x25 (minus_SNo 1)) x26 x27) (x19 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x20 x25 = x18 (x15 x25) x16 x17) -> (forall x25, x25 :e int -> x21 x25 = add_SNo (mul_SNo 2 (x20 x25)) (minus_SNo 1)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x11 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x12 x25) (x21 x25)) -> (forall x25, x25 :e int -> x24 x25 = x23 x25) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_131c01e3784e5411e50ad82b470f4d3958bc2c38ff9ea1e4028dc22466457966 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> x0 x23 = mul_SNo 2 (add_SNo 2 x23)) -> x1 = 2 -> x2 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x3 x23 x24 = If_i (SNoLe x23 0) x24 (x0 (x3 (add_SNo x23 (minus_SNo 1)) x24)))) -> x4 = x3 x1 x2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x5 x23 x24 = add_SNo (mul_SNo x4 x24) x23)) -> (forall x23, x23 :e int -> x6 x23 = x23) -> (forall x23, x23 :e int -> x7 x23 = x23) -> x8 = 1 -> x9 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x10 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x5 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25) (x11 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x11 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x6 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x12 x23 = x10 (x7 x23) x8 x9) -> (forall x23, x23 :e int -> x13 x23 = x12 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x24 x24)) x24))) x23)) -> (forall x23, x23 :e int -> x15 x23 = x23) -> (forall x23, x23 :e int -> x16 x23 = x23) -> x17 = 1 -> x18 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) x17 x18) -> (forall x23, x23 :e int -> x22 x23 = x21 x23) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x13 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_7dfe0d8c75decbca6ff6dabfbca5dc0836f7434a073098d0ccd613408f979a00 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = mul_SNo x28 x28) -> x1 = 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (mul_SNo x4 x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x6 x28 = x28) -> (forall x28, x28 :e int -> x7 x28 = x28) -> x8 = add_SNo 2 2 -> (forall x28, x28 :e int -> x9 x28 = add_SNo 1 (add_SNo x28 x28)) -> x10 = 2 -> x11 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x12 x28 x29 = If_i (SNoLe x28 0) x29 (x9 (x12 (add_SNo x28 (minus_SNo 1)) x29)))) -> x13 = x12 x10 x11 -> x14 = x13 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x15 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x15 (add_SNo x28 (minus_SNo 1)) x29 x30) (x16 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x16 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x15 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x17 x28 = x15 (x7 x28) x8 x14) -> (forall x28, x28 :e int -> x18 x28 = x17 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo (mul_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = add_SNo 2 2 -> x23 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x18 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_ff3e3cf95a392e299fece66ba5d3dbb50c1c40d4cc60782a93e213e8e280a3d4 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> x0 x23 = mul_SNo x23 x23) -> x1 = 2 -> x2 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x3 x23 x24 = If_i (SNoLe x23 0) x24 (x0 (x3 (add_SNo x23 (minus_SNo 1)) x24)))) -> x4 = x3 x1 x2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x5 x23 x24 = add_SNo (mul_SNo x4 x23) x24)) -> (forall x23, x23 :e int -> x6 x23 = add_SNo 0 (minus_SNo x23)) -> (forall x23, x23 :e int -> x7 x23 = x23) -> x8 = add_SNo 2 2 -> x9 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x10 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x5 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25) (x11 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x11 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x6 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x12 x23 = x10 (x7 x23) x8 x9) -> (forall x23, x23 :e int -> x13 x23 = x12 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = add_SNo (mul_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) x23) (minus_SNo x24))) -> (forall x23, x23 :e int -> x15 x23 = x23) -> (forall x23, x23 :e int -> x16 x23 = x23) -> x17 = add_SNo 2 2 -> x18 = add_SNo 0 (minus_SNo 1) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) x17 x18) -> (forall x23, x23 :e int -> x22 x23 = x21 x23) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x13 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_b6ed1f87dce045881c3a3808c8fbc3522619b2f112d783e02ce450db2b520449 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = mul_SNo x28 x28) -> x1 = 2 -> x2 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> x4 = x3 x1 x2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (mul_SNo x4 x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x6 x28 = x28) -> (forall x28, x28 :e int -> x7 x28 = x28) -> (forall x28, x28 :e int -> x8 x28 = add_SNo 1 (add_SNo x28 x28)) -> x9 = 2 -> x10 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29)))) -> x12 = x11 x9 x10 -> x13 = x12 -> x14 = add_SNo 2 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x15 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x15 (add_SNo x28 (minus_SNo 1)) x29 x30) (x16 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x16 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x6 (x15 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x17 x28 = x15 (x7 x28) x13 x14) -> (forall x28, x28 :e int -> x18 x28 = x17 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = add_SNo (mul_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) x28) (minus_SNo x29))) -> (forall x28, x28 :e int -> x20 x28 = x28) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> x23 = add_SNo 2 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x18 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_04f797d1915c7dc343399fff2c951b60ffa34876b8b99794f74c0b014b135c8b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x0 x32 x33 = add_SNo 1 (minus_SNo (mul_SNo x32 x33)))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x1 x32 x33 = add_SNo x33 (minus_SNo 2))) -> x2 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x3 x32 x33 = If_i (SNoLe x32 0) x33 (x0 (x3 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x4 x32 x33 = x3 (x1 x32 x33) x2)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x5 x32 x33 = add_SNo (x4 x32 x33) x32)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x6 x32 x33 = x33)) -> (forall x32, x32 :e int -> x7 x32 = x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x8 x32 x33 = If_i (SNoLe x32 0) x33 (x5 (x8 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x9 x32 x33 = x8 (x6 x32 x33) (x7 x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x10 x32 x33 = x9 x32 x33)) -> (forall x32, x32 :e int -> x11 x32 = x32) -> x12 = 0 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x13 x32 x33 = If_i (SNoLe x32 0) x33 (x10 (x13 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> x14 x32 = x13 (x11 x32) x12) -> (forall x32, x32 :e int -> x15 x32 = x14 x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x16 x32 x33 = add_SNo 1 (minus_SNo (mul_SNo x32 x33)))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x17 x32 x33 = add_SNo x33 (minus_SNo 1))) -> x18 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x32 x33 = If_i (SNoLe x32 0) x33 (x16 (x19 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x32 x33 = x19 (x17 x32 x33) x18)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x21 x32 x33 = add_SNo (x20 x32 x33) x32)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x22 x32 x33 = add_SNo x33 (minus_SNo 1))) -> x23 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x24 x32 x33 = If_i (SNoLe x32 0) x33 (x21 (x24 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x25 x32 x33 = x24 (x22 x32 x33) x23)) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x26 x32 x33 = add_SNo (x25 x32 x33) x32)) -> (forall x32, x32 :e int -> x27 x32 = x32) -> x28 = 0 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x29 x32 x33 = If_i (SNoLe x32 0) x33 (x26 (x29 (add_SNo x32 (minus_SNo 1)) x33) x32))) -> (forall x32, x32 :e int -> x30 x32 = x29 (x27 x32) x28) -> (forall x32, x32 :e int -> x31 x32 = x30 x32) -> (forall x32, x32 :e int -> SNoLe 0 x32 -> x15 x32 = x31 x32))))))))))))))))))))))))))))))))).
Admitted.
