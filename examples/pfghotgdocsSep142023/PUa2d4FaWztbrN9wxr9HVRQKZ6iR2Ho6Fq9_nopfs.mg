Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_088300fdcb981e194aef6e496956fdd5c1e7c636685efc6e5ad00cb57a76263e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = x17) -> (forall x17, x17 :e int -> x2 x17 = mul_SNo x17 x17) -> x3 = 2 -> x4 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x5 x17 x18 = If_i (SNoLe x17 0) x18 (x2 (x5 (add_SNo x17 (minus_SNo 1)) x18)))) -> x6 = x5 x3 x4 -> (forall x17, x17 :e int -> x7 x17 = add_SNo 2 (add_SNo (mul_SNo 2 x6) x17)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x8 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x1 x17) (x7 x17)) -> (forall x17, x17 :e int -> x10 x17 = x9 x17) -> (forall x17, x17 :e int -> x11 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x12 x17 = x17) -> (forall x17, x17 :e int -> x13 x17 = add_SNo 2 (add_SNo (mul_SNo 2 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) x17)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = x15 x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_75bbedf7f8a19d784447677f761e0289e100c5185b364d7f5d40039e11347fd3 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x0 x31 x32 = add_SNo x31 x32)) -> (forall x31, x31 :e int -> x1 x31 = x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x2 x31 x32 = add_SNo x32 x32)) -> x3 = 0 -> x4 = 2 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x5 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x0 (x5 (add_SNo x31 (minus_SNo 1)) x32 x33) (x6 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x6 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x1 (x5 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x7 x31 x32 = x5 (x2 x31 x32) x3 x4)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x8 x31 x32 = add_SNo (x7 x31 x32) (minus_SNo x31))) -> (forall x31, x31 :e int -> x9 x31 = x31) -> x10 = 0 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x11 x31 x32 = If_i (SNoLe x31 0) x32 (x8 (x11 (add_SNo x31 (minus_SNo 1)) x32) x31))) -> (forall x31, x31 :e int -> x12 x31 = x11 (x9 x31) x10) -> (forall x31, x31 :e int -> x13 x31 = x12 x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = add_SNo x31 x32)) -> (forall x31, x31 :e int -> x15 x31 = x31) -> (forall x31, x31 :e int -> x16 x31 = add_SNo x31 (minus_SNo 2)) -> x17 = 2 -> x18 = 2 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) x17 x18) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = add_SNo x31 x32)) -> (forall x31, x31 :e int -> x23 x31 = x31) -> (forall x31, x31 :e int -> x24 x31 = add_SNo x31 (minus_SNo 2)) -> (forall x31, x31 :e int -> x25 x31 = If_i (SNoLe (add_SNo x31 (minus_SNo 1)) 0) x31 2) -> x26 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) (x25 x31) x26) -> (forall x31, x31 :e int -> x30 x31 = mul_SNo (x21 x31) (x29 x31)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_c388ae3dabb58b3cbff978b771981caf668df08f3a3b69e2622359a85e12b34b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = add_SNo (mul_SNo 2 (mul_SNo x25 x26)) x25)) -> (forall x25, x25 :e int -> x1 x25 = x25) -> x2 = 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x4 x25 = x3 (x1 x25) x2) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x5 x25 x26 = mul_SNo 2 (mul_SNo x25 x26))) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = add_SNo (x4 x25) (minus_SNo (x9 x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = add_SNo 2 x26)) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 2 -> x15 = add_SNo 1 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x18 x25 = x16 (x13 x25) x14 x15) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x19 x25 x26 = mul_SNo (add_SNo x26 x26) x25)) -> (forall x25, x25 :e int -> x20 x25 = x25) -> x21 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x20 x25) x21) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (x18 x25) (minus_SNo (x23 x25))) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e432d3c1f5a6541dc4a95f4bd572d71c59683f8717b3c2adbbbcc161e8be6034 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x1 x22 x23 = add_SNo x23 (minus_SNo 1))) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 (x1 x22 x23) x2)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (mul_SNo x22 x23) (x4 x22 x23))) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x12 x22 x23 = add_SNo x23 (minus_SNo 1))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x13 x22 x23 = x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 (x12 x22 x23) (x13 x22 x23))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (x15 x22 x23) (mul_SNo (add_SNo 1 x23) x22))) -> (forall x22, x22 :e int -> x17 x22 = add_SNo x22 (minus_SNo 1)) -> (forall x22, x22 :e int -> x18 x22 = If_i (SNoLe x22 0) 1 2) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_f4229bfbdbfdc4a87a2173fcc332adada2af460cd21382824339f1e7017ceb3a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> x0 x23 = mul_SNo x23 x23) -> x1 = 2 -> x2 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x3 x23 x24 = If_i (SNoLe x23 0) x24 (x0 (x3 (add_SNo x23 (minus_SNo 1)) x24)))) -> x4 = x3 x1 x2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x5 x23 x24 = add_SNo (mul_SNo x4 x23) (minus_SNo x24))) -> (forall x23, x23 :e int -> x6 x23 = x23) -> (forall x23, x23 :e int -> x7 x23 = x23) -> x8 = 1 -> x9 = 0 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x10 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x5 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25) (x11 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x11 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x6 (x10 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x12 x23 = x10 (x7 x23) x8 x9) -> (forall x23, x23 :e int -> x13 x23 = x12 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = add_SNo (mul_SNo (add_SNo 2 2) (mul_SNo 2 (add_SNo x23 x23))) (minus_SNo x24))) -> (forall x23, x23 :e int -> x15 x23 = x23) -> (forall x23, x23 :e int -> x16 x23 = add_SNo x23 (minus_SNo 1)) -> (forall x23, x23 :e int -> x17 x23 = If_i (SNoLe x23 0) 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> x18 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) (x17 x23) x18) -> (forall x23, x23 :e int -> x22 x23 = x21 x23) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x13 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_117f652d6ab4b28aadaddf1e1d5ba2a35deeea51475caf9929c1b890191ab991 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = add_SNo (add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x23 x23)) x23)) (minus_SNo 2)) (minus_SNo x24))) -> (forall x23, x23 :e int -> x1 x23 = x23) -> (forall x23, x23 :e int -> x2 x23 = add_SNo x23 x23) -> x3 = add_SNo 2 2 -> x4 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) x3 x4) -> (forall x23, x23 :e int -> x8 x23 = add_SNo (x7 x23) 1) -> (forall x23, x23 :e int -> x9 x23 = mul_SNo (add_SNo (add_SNo x23 x23) x23) x23) -> x10 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x11 x23 x24 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x23 x23)) x23)) (minus_SNo x24))) -> (forall x23, x23 :e int -> x12 x23 = x23) -> (forall x23, x23 :e int -> x13 x23 = x23) -> x14 = 1 -> x15 = add_SNo 0 (minus_SNo 1) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x16 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x11 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25) (x17 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x17 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x12 (x16 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x18 x23 = x16 (x13 x23) x14 x15) -> (forall x23, x23 :e int -> x19 x23 = x18 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x20 x23 x24 = If_i (SNoLe x23 0) x24 (x9 (x20 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x21 x23 = x20 x10 (x19 x23)) -> (forall x23, x23 :e int -> x22 x23 = add_SNo (x21 x23) 2) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_68424c9cb1b6c0d294aaf46becea7a4202e04d53c7151527f40229f4accdf655 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = x22) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x4 x22 = x3 (x1 x22) x2) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = add_SNo (x4 x22) (x9 x22)) -> (forall x22, x22 :e int -> x11 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x12 x22 = add_SNo x22 (minus_SNo 1)) -> x13 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x15 x22 = x14 (x12 x22) x13) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> x17 x22 = add_SNo x22 (minus_SNo 1)) -> (forall x22, x22 :e int -> x18 x22 = x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = add_SNo (x15 x22) (x20 x22)) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_2c4d9554f961530e68d1b394cbc42f04c009394fcfaad41c188f1c73fd5e0e0b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo x18 x19)) -> (forall x18, x18 :e int -> x1 x18 = add_SNo 2 x18) -> (forall x18, x18 :e int -> x2 x18 = x18) -> (forall x18, x18 :e int -> x3 x18 = x18) -> x4 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) (x3 x18) x4) -> (forall x18, x18 :e int -> x8 x18 = add_SNo 1 (add_SNo (x7 x18) (minus_SNo x18))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = add_SNo x18 x19)) -> (forall x18, x18 :e int -> x10 x18 = x18) -> (forall x18, x18 :e int -> x11 x18 = x18) -> (forall x18, x18 :e int -> x12 x18 = add_SNo 2 x18) -> x13 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) (x12 x18) x13) -> (forall x18, x18 :e int -> x17 x18 = add_SNo (add_SNo (x16 x18) (minus_SNo 1)) (minus_SNo x18)) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_3e91cc3c282ed3acbb68ff315f91f9b47494c0d3034868b785e4b1cb992e5bd4 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x0 x15 x16 = add_SNo (mul_SNo (add_SNo x15 x16) x16) x15)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x1 x15 x16 = add_SNo 2 x16)) -> (forall x15, x15 :e int -> x2 x15 = x15) -> x3 = 1 -> x4 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x5 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x0 (x5 (add_SNo x15 (minus_SNo 1)) x16 x17) (x6 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x6 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x1 (x5 (add_SNo x15 (minus_SNo 1)) x16 x17) (x6 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x7 x15 = x5 (x2 x15) x3 x4) -> (forall x15, x15 :e int -> x8 x15 = x7 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x9 x15 x16 = add_SNo 2 (mul_SNo 2 (mul_SNo x15 x16)))) -> (forall x15, x15 :e int -> x10 x15 = add_SNo x15 (minus_SNo 1)) -> x11 = 2 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x12 x15 x16 = If_i (SNoLe x15 0) x16 (x9 (x12 (add_SNo x15 (minus_SNo 1)) x16) x15))) -> (forall x15, x15 :e int -> x13 x15 = x12 (x10 x15) x11) -> (forall x15, x15 :e int -> x14 x15 = add_SNo (mul_SNo (add_SNo (x13 x15) (minus_SNo 1)) (add_SNo x15 x15)) 1) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x8 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_775e1595fccb4461079940d2b39c355c5981eef6a4f326c2711bd439038652f7 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x0 x15 x16 = mul_SNo (add_SNo (add_SNo (add_SNo x16 (minus_SNo 2)) x16) x16) x15)) -> (forall x15, x15 :e int -> x1 x15 = x15) -> x2 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16) x15))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) x2) -> (forall x15, x15 :e int -> x5 x15 = x4 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = add_SNo 1 (add_SNo 2 x16))) -> (forall x15, x15 :e int -> x8 x15 = add_SNo x15 (minus_SNo 1)) -> x9 = 1 -> x10 = add_SNo 2 2 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) x9 x10) -> (forall x15, x15 :e int -> x14 x15 = x13 x15) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_777abb210f463504c59417ec27b33c15ff3bf41b85a923b9380cb40f04f96abe : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x1 x20 x21 = x21)) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x4 x20 x21 = x3 (x1 x20 x21) x2)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x5 x20 x21 = add_SNo (x4 x20 x21) x20)) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 0 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = add_SNo 1 (mul_SNo x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo x21 (minus_SNo 1))) -> (forall x20, x20 :e int -> x13 x20 = add_SNo x20 (minus_SNo 1)) -> (forall x20, x20 :e int -> x14 x20 = If_i (SNoLe x20 0) 0 1) -> (forall x20, x20 :e int -> x15 x20 = x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) (x14 x20) (x15 x20)) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_47b3b57dd395d3e0d5b1df5c0d54f60b234970bb242a5be80156dd4fbdc2eb39 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = mul_SNo (mul_SNo x22 x22) x22) -> x1 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x2 x22 x23 = x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x4 x22 x23 = x3 x1 (x2 x22 x23))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = add_SNo (x4 x22 x23) x22)) -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x5 (x8 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo (mul_SNo x22 x22) x22) -> x12 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x13 x22 x23 = mul_SNo (mul_SNo x23 x23) x23)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x14 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x15 x22 x23 = x14 x12 (x13 x22 x23))) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = add_SNo (x15 x22 x23) x22)) -> (forall x22, x22 :e int -> x17 x22 = x22) -> x18 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) x18) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_2a9990f0accf9f16d4794103b3a5807dadaec5df1d89792c1b30eb6a22cb1ceb : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x0 x26 x27 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x26 x26)) (mul_SNo x27 x27)) x26)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x1 x26 x27 = add_SNo (add_SNo x27 x27) x27)) -> (forall x26, x26 :e int -> x2 x26 = x26) -> x3 = 2 -> x4 = 2 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x5 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x0 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x6 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x1 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x7 x26 = x5 (x2 x26) x3 x4) -> (forall x26, x26 :e int -> x8 x26 = x7 x26) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x9 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x10 x26 x27 = x27)) -> (forall x26, x26 :e int -> x11 x26 = x26) -> x12 = 1 -> x13 = add_SNo 1 (add_SNo 2 2) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x14 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x9 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x15 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x10 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x16 x26 = x14 (x11 x26) x12 x13) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x26 x27 = mul_SNo x26 x27)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x18 x26 x27 = x27)) -> (forall x26, x26 :e int -> x19 x26 = x26) -> x20 = 1 -> x21 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x22 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x17 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x23 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x18 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x24 x26 = x22 (x19 x26) x20 x21) -> (forall x26, x26 :e int -> x25 x26 = add_SNo (x16 x26) (x24 x26)) -> (forall x26, x26 :e int -> SNoLe 0 x26 -> x8 x26 = x25 x26))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_9669e973df1939389ecd3a9238fa325fa0db22a1908dd9a309072b3dc01b4507 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo (add_SNo (add_SNo x28 (minus_SNo x29)) x28) x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = add_SNo x29 x29)) -> (forall x28, x28 :e int -> x2 x28 = add_SNo x28 x28) -> x3 = 2 -> x4 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x7 x28 = x5 (x2 x28) x3 x4) -> (forall x28, x28 :e int -> x8 x28 = x7 x28) -> (forall x28, x28 :e int -> x9 x28 = mul_SNo x28 x28) -> x10 = 1 -> (forall x28, x28 :e int -> x11 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x12 x28 = x28) -> x13 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = If_i (SNoLe x28 0) x29 (x11 (x14 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x15 x28 = x14 (x12 x28) x13) -> (forall x28, x28 :e int -> x16 x28 = x15 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x9 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x18 x28 = x17 x10 (x16 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = add_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x8 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_70df801d8ccfd8b63613642e437d15828a35e9f3a4054a63960c225b0afde037 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo (mul_SNo 2 (add_SNo x28 x28)) x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = mul_SNo 2 (add_SNo (add_SNo x29 x29) x29))) -> (forall x28, x28 :e int -> x2 x28 = x28) -> x3 = 2 -> x4 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x7 x28 = x5 (x2 x28) x3 x4) -> (forall x28, x28 :e int -> x8 x28 = x7 x28) -> (forall x28, x28 :e int -> x9 x28 = mul_SNo x28 x28) -> x10 = 1 -> (forall x28, x28 :e int -> x11 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x12 x28 = x28) -> x13 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = If_i (SNoLe x28 0) x29 (x11 (x14 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x15 x28 = x14 (x12 x28) x13) -> (forall x28, x28 :e int -> x16 x28 = x15 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x9 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x18 x28 = x17 x10 (x16 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = 1 -> x23 = add_SNo 2 (add_SNo 2 2) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = add_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x8 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_300002268675eab0faa7f76edebe7cd670e79c3ba9446c11fc62bf28779a8468 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x38 x39 x40 x41 :e int))) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x0 x41 x42 = add_SNo (mul_SNo 2 (add_SNo (add_SNo (add_SNo (mul_SNo x42 x42) x41) x41) x41)) x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x1 x41 x42 = add_SNo (add_SNo x42 x42) x42)) -> (forall x41, x41 :e int -> x2 x41 = x41) -> x3 = 2 -> x4 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x5 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x0 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43) (x6 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x6 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x1 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43) (x6 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x7 x41 = x5 (x2 x41) x3 x4) -> (forall x41, x41 :e int -> x8 x41 = add_SNo x41 x41) -> (forall x41, x41 :e int -> x9 x41 = add_SNo (add_SNo x41 x41) x41) -> x10 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x11 x41 x42 = If_i (SNoLe x41 0) x42 (x8 (x11 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x12 x41 = x11 (x9 x41) x10) -> (forall x41, x41 :e int -> x13 x41 = add_SNo (x7 x41) (x12 x41)) -> (forall x41, x41 :e int -> x14 x41 = mul_SNo (mul_SNo x41 x41) x41) -> x15 = 1 -> (forall x41, x41 :e int -> x16 x41 = add_SNo x41 x41) -> (forall x41, x41 :e int -> x17 x41 = x41) -> x18 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x19 x41 x42 = If_i (SNoLe x41 0) x42 (x16 (x19 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x20 x41 = x19 (x17 x41) x18) -> (forall x41, x41 :e int -> x21 x41 = x20 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x22 x41 x42 = If_i (SNoLe x41 0) x42 (x14 (x22 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x23 x41 = x22 x15 (x21 x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x24 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x25 x41 x42 = x42)) -> (forall x41, x41 :e int -> x26 x41 = x41) -> x27 = 1 -> x28 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x29 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x24 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x30 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x25 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x31 x41 = x29 (x26 x41) x27 x28) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x32 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x33 x41 x42 = x42)) -> (forall x41, x41 :e int -> x34 x41 = x41) -> x35 = 1 -> x36 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x37 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x32 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x38 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x33 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x39 x41 = x37 (x34 x41) x35 x36) -> (forall x41, x41 :e int -> x40 x41 = add_SNo (add_SNo (x23 x41) (x31 x41)) (x39 x41)) -> (forall x41, x41 :e int -> SNoLe 0 x41 -> x13 x41 = x40 x41)))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_557cd58fe76826a56e7aef033648a49af5a84ffcc3e2c0b1bba437ec7df22c21 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x0 x39 x40 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x39 x39)) x39) x40)) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x1 x39 x40 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)) x40)) -> (forall x39, x39 :e int -> x2 x39 = x39) -> x3 = 2 -> x4 = 2 -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x5 x39 x40 x41 = If_i (SNoLe x39 0) x40 (x0 (x5 (add_SNo x39 (minus_SNo 1)) x40 x41) (x6 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x39 x40 x41 = If_i (SNoLe x39 0) x41 (x1 (x5 (add_SNo x39 (minus_SNo 1)) x40 x41) (x6 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> x7 x39 = x5 (x2 x39) x3 x4) -> (forall x39, x39 :e int -> x8 x39 = add_SNo (add_SNo x39 x39) x39) -> (forall x39, x39 :e int -> x9 x39 = add_SNo x39 x39) -> x10 = 1 -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x11 x39 x40 = If_i (SNoLe x39 0) x40 (x8 (x11 (add_SNo x39 (minus_SNo 1)) x40)))) -> (forall x39, x39 :e int -> x12 x39 = x11 (x9 x39) x10) -> (forall x39, x39 :e int -> x13 x39 = add_SNo (x7 x39) (x12 x39)) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x14 x39 x40 = mul_SNo x39 x40)) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x15 x39 x40 = x40)) -> (forall x39, x39 :e int -> x16 x39 = x39) -> x17 = 1 -> x18 = add_SNo 1 (add_SNo 2 2) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x19 x39 x40 x41 = If_i (SNoLe x39 0) x40 (x14 (x19 (add_SNo x39 (minus_SNo 1)) x40 x41) (x20 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x20 x39 x40 x41 = If_i (SNoLe x39 0) x41 (x15 (x19 (add_SNo x39 (minus_SNo 1)) x40 x41) (x20 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> x21 x39 = x19 (x16 x39) x17 x18) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x22 x39 x40 = mul_SNo x39 x40)) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x23 x39 x40 = x40)) -> (forall x39, x39 :e int -> x24 x39 = x39) -> x25 = 1 -> x26 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x39 x40 x41 = If_i (SNoLe x39 0) x40 (x22 (x27 (add_SNo x39 (minus_SNo 1)) x40 x41) (x28 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x28 x39 x40 x41 = If_i (SNoLe x39 0) x41 (x23 (x27 (add_SNo x39 (minus_SNo 1)) x40 x41) (x28 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> x29 x39 = x27 (x24 x39) x25 x26) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x30 x39 x40 = mul_SNo x39 x40)) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x31 x39 x40 = x40)) -> (forall x39, x39 :e int -> x32 x39 = x39) -> x33 = 1 -> x34 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x35 x39 x40 x41 = If_i (SNoLe x39 0) x40 (x30 (x35 (add_SNo x39 (minus_SNo 1)) x40 x41) (x36 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x36 x39 x40 x41 = If_i (SNoLe x39 0) x41 (x31 (x35 (add_SNo x39 (minus_SNo 1)) x40 x41) (x36 (add_SNo x39 (minus_SNo 1)) x40 x41))))) -> (forall x39, x39 :e int -> x37 x39 = x35 (x32 x39) x33 x34) -> (forall x39, x39 :e int -> x38 x39 = add_SNo (add_SNo (x21 x39) (x29 x39)) (x37 x39)) -> (forall x39, x39 :e int -> SNoLe 0 x39 -> x13 x39 = x38 x39)))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_607fbc552e3d60a3aae2f80b5139430e1ae3ce90137ccba4e241b0433a1e1a38 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x38 x39 x40 x41 :e int))) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x0 x41 x42 = add_SNo (add_SNo (add_SNo x41 (minus_SNo x42)) x41) x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x1 x41 x42 = add_SNo x42 x42)) -> (forall x41, x41 :e int -> x2 x41 = add_SNo x41 x41) -> x3 = 2 -> x4 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x5 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x0 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43) (x6 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x6 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x1 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43) (x6 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x7 x41 = x5 (x2 x41) x3 x4) -> (forall x41, x41 :e int -> x8 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x41 x41)) x41) x41) -> (forall x41, x41 :e int -> x9 x41 = x41) -> x10 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x11 x41 x42 = If_i (SNoLe x41 0) x42 (x8 (x11 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x12 x41 = x11 (x9 x41) x10) -> (forall x41, x41 :e int -> x13 x41 = add_SNo (x7 x41) (x12 x41)) -> (forall x41, x41 :e int -> x14 x41 = mul_SNo x41 x41) -> x15 = 1 -> (forall x41, x41 :e int -> x16 x41 = add_SNo x41 x41) -> (forall x41, x41 :e int -> x17 x41 = x41) -> x18 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x19 x41 x42 = If_i (SNoLe x41 0) x42 (x16 (x19 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x20 x41 = x19 (x17 x41) x18) -> (forall x41, x41 :e int -> x21 x41 = x20 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x22 x41 x42 = If_i (SNoLe x41 0) x42 (x14 (x22 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x23 x41 = x22 x15 (x21 x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x24 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x25 x41 x42 = x42)) -> (forall x41, x41 :e int -> x26 x41 = x41) -> x27 = 1 -> x28 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x29 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x24 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x30 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x25 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x31 x41 = x29 (x26 x41) x27 x28) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x32 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x33 x41 x42 = x42)) -> (forall x41, x41 :e int -> x34 x41 = x41) -> x35 = 1 -> x36 = add_SNo 2 (add_SNo 2 2) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x37 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x32 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x38 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x33 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x39 x41 = x37 (x34 x41) x35 x36) -> (forall x41, x41 :e int -> x40 x41 = add_SNo (add_SNo (x23 x41) (x31 x41)) (x39 x41)) -> (forall x41, x41 :e int -> SNoLe 0 x41 -> x13 x41 = x40 x41)))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_cff890710c1d6ccf386b90048149eee9e53c93052d61f6cf3b1233623ee1a476 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x38 x39 x40 x41 :e int))) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x0 x41 x42 = add_SNo (add_SNo (add_SNo x41 (minus_SNo x42)) x41) x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x1 x41 x42 = add_SNo x42 x42)) -> (forall x41, x41 :e int -> x2 x41 = add_SNo x41 x41) -> x3 = 2 -> x4 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x5 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x0 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43) (x6 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x6 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x1 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43) (x6 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x7 x41 = x5 (x2 x41) x3 x4) -> (forall x41, x41 :e int -> x8 x41 = add_SNo (mul_SNo 2 (add_SNo x41 x41)) x41) -> (forall x41, x41 :e int -> x9 x41 = x41) -> x10 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x11 x41 x42 = If_i (SNoLe x41 0) x42 (x8 (x11 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x12 x41 = x11 (x9 x41) x10) -> (forall x41, x41 :e int -> x13 x41 = add_SNo (x7 x41) (x12 x41)) -> (forall x41, x41 :e int -> x14 x41 = mul_SNo x41 x41) -> x15 = 1 -> (forall x41, x41 :e int -> x16 x41 = add_SNo x41 x41) -> (forall x41, x41 :e int -> x17 x41 = x41) -> x18 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x19 x41 x42 = If_i (SNoLe x41 0) x42 (x16 (x19 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x20 x41 = x19 (x17 x41) x18) -> (forall x41, x41 :e int -> x21 x41 = x20 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x22 x41 x42 = If_i (SNoLe x41 0) x42 (x14 (x22 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x23 x41 = x22 x15 (x21 x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x24 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x25 x41 x42 = x42)) -> (forall x41, x41 :e int -> x26 x41 = x41) -> x27 = 1 -> x28 = add_SNo 1 (add_SNo 2 2) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x29 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x24 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x30 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x25 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x31 x41 = x29 (x26 x41) x27 x28) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x32 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x33 x41 x42 = x42)) -> (forall x41, x41 :e int -> x34 x41 = x41) -> x35 = 1 -> x36 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x37 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x32 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x38 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x33 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x39 x41 = x37 (x34 x41) x35 x36) -> (forall x41, x41 :e int -> x40 x41 = add_SNo (add_SNo (x23 x41) (x31 x41)) (x39 x41)) -> (forall x41, x41 :e int -> SNoLe 0 x41 -> x13 x41 = x40 x41)))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5e03b2fbc644c3265c620a2067c71cabdeefcf2880b929e4f751c775c546623b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = add_SNo (add_SNo x38 x38) x38) -> (forall x38, x38 :e int -> x1 x38 = x38) -> (forall x38, x38 :e int -> x2 x38 = add_SNo (add_SNo x38 x38) x38) -> (forall x38, x38 :e int -> x3 x38 = x38) -> x4 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x5 x38 x39 = If_i (SNoLe x38 0) x39 (x2 (x5 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x6 x38 = x5 (x3 x38) x4) -> (forall x38, x38 :e int -> x7 x38 = add_SNo x38 x38) -> (forall x38, x38 :e int -> x8 x38 = x38) -> x9 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x10 x38 x39 = If_i (SNoLe x38 0) x39 (x7 (x10 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x11 x38 = x10 (x8 x38) x9) -> (forall x38, x38 :e int -> x12 x38 = add_SNo 1 (add_SNo (x6 x38) (x11 x38))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x13 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x14 x38 = x13 (x1 x38) (x12 x38)) -> (forall x38, x38 :e int -> x15 x38 = x14 x38) -> (forall x38, x38 :e int -> x16 x38 = add_SNo (mul_SNo x38 x38) x38) -> x17 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x18 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x19 x38 x39 = x39)) -> (forall x38, x38 :e int -> x20 x38 = x38) -> x21 = 1 -> x22 = add_SNo 1 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x23 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x18 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x24 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x19 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x25 x38 = x23 (x20 x38) x21 x22) -> (forall x38, x38 :e int -> x26 x38 = x25 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = If_i (SNoLe x38 0) x39 (x16 (x27 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x28 x38 = x27 x17 (x26 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = x39)) -> (forall x38, x38 :e int -> x31 x38 = x38) -> x32 = 1 -> x33 = add_SNo 2 (add_SNo 2 2) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x34 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x29 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x35 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x30 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x36 x38 = x34 (x31 x38) x32 x33) -> (forall x38, x38 :e int -> x37 x38 = add_SNo (x28 x38) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x15 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
