Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_001b0a6d92b41ee877d74aa474f59412ca905501ebc17525bbdccff95405fb46 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = mul_SNo (mul_SNo x33 x34) x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x1 x33 x34 = x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x2 x33 x34 = x34)) -> x3 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x4 x33 x34 = x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x5 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x0 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x6 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x1 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x7 x33 x34 = x5 (x2 x33 x34) x3 (x4 x33 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = add_SNo x33 (x7 x33 x34))) -> (forall x33, x33 :e int -> x9 x33 = x33) -> x10 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = If_i (SNoLe x33 0) x34 (x8 (x11 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x12 x33 = x11 (x9 x33) x10) -> (forall x33, x33 :e int -> x13 x33 = x12 x33) -> (forall x33, x33 :e int -> x14 x33 = mul_SNo x33 x33) -> x15 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x17 x33 x34 = x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x18 x33 x34 = add_SNo x34 (minus_SNo 1))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x20 x33 x34 = x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x21 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x16 (x21 (add_SNo x33 (minus_SNo 1)) x34 x35) (x22 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x22 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x17 (x21 (add_SNo x33 (minus_SNo 1)) x34 x35) (x22 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x23 x33 x34 = x21 (x18 x33 x34) (x19 x33 x34) (x20 x33 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = x23 x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = If_i (SNoLe x33 0) x34 (x14 (x25 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x26 x33 x34 = x25 x15 (x24 x33 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x27 x33 x34 = add_SNo (x26 x33 x34) x33)) -> (forall x33, x33 :e int -> x28 x33 = x33) -> x29 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) x29) -> (forall x33, x33 :e int -> x32 x33 = x31 x33) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x13 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_1f050109e6d62636dfe65aaab845bc6be0ff97d71c1fa50031e3da4582453dfb : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo 2 (mul_SNo 2 (mul_SNo 2 (add_SNo (mul_SNo x22 x23) x22))))) -> (forall x22, x22 :e int -> x1 x22 = x22) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x4 x22 = x3 (x1 x22) x2) -> (forall x22, x22 :e int -> x5 x22 = x4 x22) -> (forall x22, x22 :e int -> x6 x22 = mul_SNo (mul_SNo x22 x22) x22) -> x7 = 1 -> (forall x22, x22 :e int -> x8 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x9 x22 = x22) -> x10 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = If_i (SNoLe x22 0) x23 (x8 (x11 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x12 x22 = x11 (x9 x22) x10) -> (forall x22, x22 :e int -> x13 x22 = x12 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x6 (x14 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x15 x22 = x14 x7 (x13 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> x17 x22 = x22) -> (forall x22, x22 :e int -> x18 x22 = add_SNo 1 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = mul_SNo (x15 x22) (x20 x22)) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x5 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_55c621a3aaaef50589113c46c8edeff8527560a1208f353f1a130d26b7418a97 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo 1 (add_SNo x20 x20)) -> x1 = add_SNo 1 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x2 x20 x21 = x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x4 x20 x21 = x3 x1 (x2 x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x5 x20 x21 = mul_SNo (x4 x20 x21) x20)) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo (mul_SNo 2 (add_SNo 2 2)) x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (minus_SNo 1) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_03349bd1619e2306414eefeaec6833b8dfc7634edaa17a521a1e65b5547704cc : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x0 x31 x32 = add_SNo (mul_SNo 2 (mul_SNo x31 x32)) (minus_SNo x31))) -> (forall x31, x31 :e int -> x1 x31 = x31) -> x2 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x3 x31 x32 = If_i (SNoLe x31 0) x32 (x0 (x3 (add_SNo x31 (minus_SNo 1)) x32) x31))) -> (forall x31, x31 :e int -> x4 x31 = x3 (x1 x31) x2) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x5 x31 x32 = add_SNo (mul_SNo 2 (mul_SNo x31 x32)) x31)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x6 x31 x32 = x32)) -> (forall x31, x31 :e int -> x7 x31 = x31) -> x8 = 1 -> (forall x31, x31 :e int -> x9 x31 = x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x10 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x5 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x11 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x6 (x10 (add_SNo x31 (minus_SNo 1)) x32 x33) (x11 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x12 x31 = x10 (x7 x31) x8 (x9 x31)) -> (forall x31, x31 :e int -> x13 x31 = mul_SNo (x4 x31) (x12 x31)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x15 x31 x32 = add_SNo 2 x32)) -> (forall x31, x31 :e int -> x16 x31 = x31) -> x17 = 1 -> x18 = add_SNo 1 2 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) x17 x18) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = mul_SNo x31 x32)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x23 x31 x32 = x32)) -> (forall x31, x31 :e int -> x24 x31 = add_SNo x31 (minus_SNo 1)) -> x25 = 1 -> (forall x31, x31 :e int -> x26 x31 = add_SNo 1 (add_SNo x31 x31)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) x25 (x26 x31)) -> (forall x31, x31 :e int -> x30 x31 = mul_SNo (x21 x31) (x29 x31)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_325e206c38bbfa643ef3a7841b1955f7f4fd13fb6d61535517c6905abaafb439 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = add_SNo 1 (mul_SNo 2 (mul_SNo x20 x21)))) -> x1 = 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x2 x20 x21 = x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x4 x20 x21 = x3 x1 (x2 x20 x21))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x5 x20 x21 = mul_SNo (x4 x20 x21) x20)) -> (forall x20, x20 :e int -> x6 x20 = x20) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = If_i (SNoLe x20 0) x21 (x5 (x8 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x9 x20 = x8 (x6 x20) x7) -> (forall x20, x20 :e int -> x10 x20 = x9 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = add_SNo (mul_SNo 2 (add_SNo 2 2)) x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> x14 = 1 -> x15 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) x14 x15) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x10 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_44db0e8307c748bbf3077fe3f26c066a3f591778cb2e0ccde0070d0575556d52 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x0 x25 x26 = mul_SNo 2 (mul_SNo 2 (add_SNo (mul_SNo 2 (mul_SNo x25 x26)) x25)))) -> (forall x25, x25 :e int -> x1 x25 = x25) -> x2 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26) x25))) -> (forall x25, x25 :e int -> x4 x25 = x3 (x1 x25) x2) -> (forall x25, x25 :e int -> x5 x25 = x4 x25) -> (forall x25, x25 :e int -> x6 x25 = mul_SNo x25 x25) -> x7 = 1 -> (forall x25, x25 :e int -> x8 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x9 x25 = x25) -> x10 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = If_i (SNoLe x25 0) x26 (x8 (x11 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x12 x25 = x11 (x9 x25) x10) -> (forall x25, x25 :e int -> x13 x25 = x12 x25) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x14 x25 x26 = If_i (SNoLe x25 0) x26 (x6 (x14 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x15 x25 = x14 x7 (x13 x25)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x16 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x17 x25 x26 = add_SNo 2 x26)) -> (forall x25, x25 :e int -> x18 x25 = x25) -> x19 = 1 -> x20 = add_SNo 1 2 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x21 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x16 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x22 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x17 (x21 (add_SNo x25 (minus_SNo 1)) x26 x27) (x22 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x23 x25 = x21 (x18 x25) x19 x20) -> (forall x25, x25 :e int -> x24 x25 = mul_SNo (x15 x25) (x23 x25)) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x5 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_98dfe188b2c1c1fb3efee33dea80def483bede80e29f0e31bae2e62c7b9fe5b1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = mul_SNo (add_SNo x28 x29) x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = mul_SNo 2 (mul_SNo x29 x29))) -> (forall x28, x28 :e int -> x2 x28 = x28) -> x3 = 1 -> x4 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x7 x28 = x5 (x2 x28) x3 x4) -> (forall x28, x28 :e int -> x8 x28 = mul_SNo (x7 x28) 2) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x9 x28 x29 = mul_SNo (mul_SNo x28 x29) x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x10 x28 x29 = add_SNo x29 x29)) -> (forall x28, x28 :e int -> x11 x28 = add_SNo x28 (minus_SNo 1)) -> x12 = 1 -> x13 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x14 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x9 (x14 (add_SNo x28 (minus_SNo 1)) x29 x30) (x15 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x15 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x10 (x14 (add_SNo x28 (minus_SNo 1)) x29 x30) (x15 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x16 x28 = x14 (x11 x28) x12 x13) -> (forall x28, x28 :e int -> x17 x28 = add_SNo 1 (add_SNo x28 x28)) -> (forall x28, x28 :e int -> x18 x28 = x28) -> x19 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = If_i (SNoLe x28 0) x29 (x17 (x20 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x21 x28 = x20 (x18 x28) x19) -> (forall x28, x28 :e int -> x22 x28 = mul_SNo x28 x28) -> (forall x28, x28 :e int -> x23 x28 = x28) -> x24 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (mul_SNo (x16 x28) (x21 x28)) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x8 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_bd02b57331ddc720b05a8f4346094c845f21300c28f658eb061fc2f164c93598 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5, x5 :e int -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = mul_SNo 2 (add_SNo 2 x22)) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x4 x22 = x3 (x1 x22) x2) -> x5 = 0 -> (forall x22, x22 :e int -> x6 x22 = x22) -> x7 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 x5)) -> (forall x22, x22 :e int -> x9 x22 = x8 (x6 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = add_SNo (x4 x22) (minus_SNo (x9 x22))) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo x22 x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = mul_SNo 2 (x17 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = add_SNo (add_SNo (x20 x22) (minus_SNo 1)) (If_i (SNoLe x22 0) 0 1)) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_fd478df71c785b54bd62715052f80bd7338250c1e07834d24b80fcb8aea3bea0 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = mul_SNo (add_SNo 2 x18) x17)) -> x1 = 2 -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x4 x17 = x3 x1 (x2 x17)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x5 x17 x18 = add_SNo (mul_SNo (x4 x17) x18) (minus_SNo x17))) -> (forall x17, x17 :e int -> x6 x17 = x17) -> x7 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x5 (x8 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x6 x17) x7) -> (forall x17, x17 :e int -> x10 x17 = x9 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = mul_SNo (add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo (add_SNo x18 x18) x18))) (minus_SNo 1)) x17)) -> (forall x17, x17 :e int -> x12 x17 = x17) -> x13 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) x13) -> (forall x17, x17 :e int -> x16 x17 = x15 x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_00a873efb0aa8065cdf4b35d6841808d7f06e27c4f8fb2a6ca16c606ff17e8f9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> (forall x44 : set -> set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x44 x45 x46 x47 :e int))) -> (forall x45 : set -> set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x45 x46 x47 x48 :e int))) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> x0 x48 = add_SNo x48 x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x1 x48 x49 = x49)) -> (forall x48, x48 :e int -> x2 x48 = x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x3 x48 x49 = If_i (SNoLe x48 0) x49 (x0 (x3 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x4 x48 x49 = x3 (x1 x48 x49) (x2 x48))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x5 x48 x49 = add_SNo 1 (x4 x48 x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x6 x48 x49 = x49)) -> x7 = add_SNo 1 2 -> x8 = 1 -> (forall x48, x48 :e int -> x9 x48 = x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x10 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x5 (x10 (add_SNo x48 (minus_SNo 1)) x49 x50) (x11 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x11 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x6 (x10 (add_SNo x48 (minus_SNo 1)) x49 x50) (x11 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x12 x48 = x10 x7 x8 (x9 x48)) -> (forall x48, x48 :e int -> x13 x48 = add_SNo (mul_SNo 2 (add_SNo x48 x48)) x48) -> (forall x48, x48 :e int -> x14 x48 = x48) -> x15 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x16 x48 x49 = If_i (SNoLe x48 0) x49 (x13 (x16 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x17 x48 = x16 (x14 x48) x15) -> (forall x48, x48 :e int -> x18 x48 = add_SNo (add_SNo x48 x48) x48) -> (forall x48, x48 :e int -> x19 x48 = x48) -> x20 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x21 x48 x49 = If_i (SNoLe x48 0) x49 (x18 (x21 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x22 x48 = x21 (x19 x48) x20) -> (forall x48, x48 :e int -> x23 x48 = mul_SNo (mul_SNo (x12 x48) (add_SNo 1 (x17 x48))) (add_SNo 1 (x22 x48))) -> (forall x48, x48 :e int -> x24 x48 = add_SNo (mul_SNo 2 (add_SNo x48 x48)) x48) -> (forall x48, x48 :e int -> x25 x48 = x48) -> x26 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x27 x48 x49 = If_i (SNoLe x48 0) x49 (x24 (x27 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x28 x48 = x27 (x25 x48) x26) -> (forall x48, x48 :e int -> x29 x48 = add_SNo x48 x48) -> (forall x48, x48 :e int -> x30 x48 = x48) -> x31 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x32 x48 x49 = If_i (SNoLe x48 0) x49 (x29 (x32 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x33 x48 = x32 (x30 x48) x31) -> (forall x48, x48 :e int -> x34 x48 = add_SNo (add_SNo x48 x48) x48) -> (forall x48, x48 :e int -> x35 x48 = x48) -> x36 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x37 x48 x49 = If_i (SNoLe x48 0) x49 (x34 (x37 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x38 x48 = x37 (x35 x48) x36) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x39 x48 x49 = mul_SNo x48 x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x40 x48 x49 = x49)) -> (forall x48, x48 :e int -> x41 x48 = x48) -> x42 = 1 -> x43 = add_SNo 2 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x44 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x39 (x44 (add_SNo x48 (minus_SNo 1)) x49 x50) (x45 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x45 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x40 (x44 (add_SNo x48 (minus_SNo 1)) x49 x50) (x45 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x46 x48 = x44 (x41 x48) x42 x43) -> (forall x48, x48 :e int -> x47 x48 = mul_SNo (mul_SNo (mul_SNo (add_SNo 1 (x28 x48)) (add_SNo 1 (x33 x48))) (add_SNo 1 (x38 x48))) (add_SNo 1 (x46 x48))) -> (forall x48, x48 :e int -> SNoLe 0 x48 -> x23 x48 = x47 x48))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_96b95752795b6b6d1496200e712a729c9e5b4fdaf258697e87da757ee9e401b9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x1 x33 x34 = x34)) -> (forall x33, x33 :e int -> x2 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x4 x33 x34 = x3 (x1 x33 x34) (x2 x33))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x5 x33 x34 = add_SNo 1 (x4 x33 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x6 x33 x34 = x34)) -> (forall x33, x33 :e int -> x7 x33 = x33) -> x8 = 1 -> (forall x33, x33 :e int -> x9 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x10 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x5 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x11 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x6 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x12 x33 = x10 (x7 x33) x8 (x9 x33)) -> (forall x33, x33 :e int -> x13 x33 = x12 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = add_SNo 1 (mul_SNo x33 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x15 x33 x34 = x34)) -> (forall x33, x33 :e int -> x16 x33 = x33) -> x17 = 0 -> (forall x33, x33 :e int -> x18 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> x19 x33 = add_SNo x33 (minus_SNo 1)) -> x20 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = If_i (SNoLe x33 0) x34 (x18 (x21 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x22 x33 = x21 (x19 x33) x20) -> (forall x33, x33 :e int -> x23 x33 = x22 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x14 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x15 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x26 x33 = x24 (x16 x33) x17 (x23 x33)) -> (forall x33, x33 :e int -> x27 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> x28 x33 = add_SNo x33 (minus_SNo 1)) -> x29 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) x29) -> (forall x33, x33 :e int -> x32 x33 = add_SNo (mul_SNo (x26 x33) (x31 x33)) 1) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x13 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_04412b799430dccc6919489fe39c51348a6768603bd8cc8c4fd021e4e11caf8e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> x1 x33 = mul_SNo (add_SNo 2 x33) x33) -> x2 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x4 x33 = x3 (x1 x33) x2) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x5 x33 x34 = add_SNo (mul_SNo x34 x33) x33)) -> (forall x33, x33 :e int -> x6 x33 = x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = add_SNo (x4 x33) (minus_SNo (x9 x33))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x12 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x13 x33 = x33) -> x14 = 1 -> x15 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x16 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x11 (x16 (add_SNo x33 (minus_SNo 1)) x34 x35) (x17 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x17 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x12 (x16 (add_SNo x33 (minus_SNo 1)) x34 x35) (x17 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x18 x33 = x16 (x13 x33) x14 x15) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x20 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> x21 x33 = x33) -> x22 = 2 -> x23 = add_SNo 2 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x19 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x20 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x26 x33 = x24 (x21 x33) x22 x23) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x27 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> x28 x33 = x33) -> (forall x33, x33 :e int -> x29 x33 = add_SNo 1 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) (x29 x33)) -> (forall x33, x33 :e int -> x32 x33 = add_SNo (mul_SNo (x18 x33) (x26 x33)) (minus_SNo (x31 x33))) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_fd4ff64adee430dc5dfddd42fac6e2485eadc03b79773e0ebecf9e1a331afdf1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo x18 x19)) -> (forall x18, x18 :e int -> x1 x18 = x18) -> (forall x18, x18 :e int -> x2 x18 = add_SNo x18 x18) -> x3 = 1 -> x4 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) x3 x4) -> (forall x18, x18 :e int -> x8 x18 = mul_SNo (add_SNo 1 (add_SNo x18 x18)) (x7 x18)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = add_SNo (add_SNo (add_SNo x18 (minus_SNo x19)) x18) x18)) -> (forall x18, x18 :e int -> x10 x18 = x18) -> (forall x18, x18 :e int -> x11 x18 = add_SNo x18 (minus_SNo 1)) -> x12 = add_SNo 2 2 -> x13 = 1 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) x12 x13) -> (forall x18, x18 :e int -> x17 x18 = mul_SNo (If_i (SNoLe x18 0) 1 (x16 x18)) (add_SNo 1 (add_SNo x18 x18))) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_0da98f52fabde04c7a788d8fe8fed30fc56372bb05f2c03599f050f965c1da74 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 1 (add_SNo 2 2)) (add_SNo (mul_SNo x20 x21) x20))) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x6 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> x7 x20 = x20) -> x8 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x9 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x10 x20 = x9 (x7 x20) x8) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> (forall x20, x20 :e int -> x14 x20 = add_SNo 1 x20) -> x15 = add_SNo 1 (add_SNo 2 2) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) (x14 x20) x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (x10 x20) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_6d70418432b6d6d92035ddbbc0decf97adb9090064c658174bd10c6c0130cc24 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x0 x22 x23 = mul_SNo 2 (mul_SNo 2 (add_SNo (mul_SNo x22 x23) x22)))) -> (forall x22, x22 :e int -> x1 x22 = x22) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x4 x22 = x3 (x1 x22) x2) -> (forall x22, x22 :e int -> x5 x22 = x4 x22) -> (forall x22, x22 :e int -> x6 x22 = mul_SNo x22 x22) -> x7 = 1 -> (forall x22, x22 :e int -> x8 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x9 x22 = x22) -> x10 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x11 x22 x23 = If_i (SNoLe x22 0) x23 (x8 (x11 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x12 x22 = x11 (x9 x22) x10) -> (forall x22, x22 :e int -> x13 x22 = x12 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x14 x22 x23 = If_i (SNoLe x22 0) x23 (x6 (x14 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x15 x22 = x14 x7 (x13 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = mul_SNo x22 x23)) -> (forall x22, x22 :e int -> x17 x22 = x22) -> (forall x22, x22 :e int -> x18 x22 = add_SNo 1 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x16 (x19 (add_SNo x22 (minus_SNo 1)) x23) x22))) -> (forall x22, x22 :e int -> x20 x22 = x19 (x17 x22) (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = mul_SNo (x15 x22) (x20 x22)) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x5 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_b576060d15f5620f7e4f2918acbb56c47b1fa94b717c81d975049d141f66b755 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x0 x20 x21 = mul_SNo (add_SNo 1 2) (add_SNo (mul_SNo x20 x21) x20))) -> (forall x20, x20 :e int -> x1 x20 = x20) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x6 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> x7 x20 = x20) -> x8 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x9 (add_SNo x20 (minus_SNo 1)) x21) x20))) -> (forall x20, x20 :e int -> x10 x20 = x9 (x7 x20) x8) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x11 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x12 x20 x21 = x21)) -> (forall x20, x20 :e int -> x13 x20 = x20) -> (forall x20, x20 :e int -> x14 x20 = add_SNo 1 x20) -> x15 = add_SNo 1 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x16 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x11 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x17 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x12 (x16 (add_SNo x20 (minus_SNo 1)) x21 x22) (x17 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x18 x20 = x16 (x13 x20) (x14 x20) x15) -> (forall x20, x20 :e int -> x19 x20 = mul_SNo (x10 x20) (x18 x20)) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_0feacf763832ef8c75e38c367d38fd2e9809fb4f2769f1af9a49ad4d2a2d9c62 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x0 x15 x16 = mul_SNo (add_SNo 2 (add_SNo (add_SNo x16 x16) x16)) x15)) -> (forall x15, x15 :e int -> x1 x15 = x15) -> x2 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16) x15))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) x2) -> (forall x15, x15 :e int -> x5 x15 = x4 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = add_SNo 1 (add_SNo 2 x16))) -> (forall x15, x15 :e int -> x8 x15 = add_SNo x15 (minus_SNo 1)) -> x9 = 1 -> x10 = add_SNo 1 (add_SNo 2 2) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) x9 x10) -> (forall x15, x15 :e int -> x14 x15 = mul_SNo (x13 x15) (add_SNo (add_SNo (add_SNo (If_i (SNoLe x15 0) 1 2) x15) x15) x15)) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_bafec9e5679e6288a4b420a31e92a7e57f9602c7dd71ef685ea73e3ab3755277 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = x19)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x1 x18 x19 = add_SNo 2 (add_SNo x18 x19))) -> (forall x18, x18 :e int -> x2 x18 = x18) -> (forall x18, x18 :e int -> x3 x18 = x18) -> x4 = 1 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) (x3 x18) x4) -> (forall x18, x18 :e int -> x8 x18 = add_SNo 2 (x7 x18)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = add_SNo x18 x19)) -> (forall x18, x18 :e int -> x10 x18 = x18) -> (forall x18, x18 :e int -> x11 x18 = x18) -> (forall x18, x18 :e int -> x12 x18 = add_SNo 2 x18) -> (forall x18, x18 :e int -> x13 x18 = add_SNo 1 (minus_SNo x18)) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) (x12 x18) (x13 x18)) -> (forall x18, x18 :e int -> x17 x18 = x16 x18) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_f8b0ac96d354cec8f9f68defd4e48a006c68e742bbb12d655e19ee4a49e2762b : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> x0 x12 = add_SNo (add_SNo x12 (minus_SNo 1)) x12) -> (forall x12, x12 :e int -> x1 x12 = x12) -> (forall x12, x12 :e int -> x2 x12 = x12) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x3 x12 x13 = If_i (SNoLe x12 0) x13 (x0 (x3 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x4 x12 = x3 (x1 x12) (x2 x12)) -> (forall x12, x12 :e int -> x5 x12 = x4 x12) -> (forall x12, x12 :e int -> x6 x12 = add_SNo x12 x12) -> (forall x12, x12 :e int -> x7 x12 = x12) -> (forall x12, x12 :e int -> x8 x12 = add_SNo x12 (minus_SNo 1)) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x9 x12 x13 = If_i (SNoLe x12 0) x13 (x6 (x9 (add_SNo x12 (minus_SNo 1)) x13)))) -> (forall x12, x12 :e int -> x10 x12 = x9 (x7 x12) (x8 x12)) -> (forall x12, x12 :e int -> x11 x12 = add_SNo 1 (x10 x12)) -> (forall x12, x12 :e int -> SNoLe 0 x12 -> x5 x12 = x11 x12))))))))))))).
Admitted.
Theorem missingprop_936288696f166c4bd91548486afeb2ced432c78acf5071c2a78323de05b5f540 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x0 x7 x8 = add_SNo (add_SNo x7 (minus_SNo 2)) x8)) -> (forall x7, x7 :e int -> x1 x7 = mul_SNo 2 (mul_SNo x7 x7)) -> x2 = 1 -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x3 x7 x8 = If_i (SNoLe x7 0) x8 (x0 (x3 (add_SNo x7 (minus_SNo 1)) x8) x7))) -> (forall x7, x7 :e int -> x4 x7 = x3 (x1 x7) x2) -> (forall x7, x7 :e int -> x5 x7 = x4 x7) -> (forall x7, x7 :e int -> x6 x7 = mul_SNo (add_SNo 1 (minus_SNo (mul_SNo 2 (mul_SNo x7 x7)))) (add_SNo 1 (minus_SNo (mul_SNo x7 x7)))) -> (forall x7, x7 :e int -> SNoLe 0 x7 -> x5 x7 = x6 x7)))))))).
Admitted.
