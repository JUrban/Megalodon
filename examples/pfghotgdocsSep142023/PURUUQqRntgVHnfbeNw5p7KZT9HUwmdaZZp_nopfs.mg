Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_48ebc68a571f61f22227eec01de3f471e80ff541e426a85528a2e9082b72f1e3 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (add_SNo (x4 x40) (minus_SNo x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (add_SNo (x14 x40 x41) x40) x40) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)) x40) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (add_SNo (add_SNo x41 x41) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 2 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6af2b667b3260317bcff9046ba6e1adc232ba7835af61c7e87e0023285c85f98 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (add_SNo (x4 x40) (minus_SNo x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (add_SNo (x14 x40 x41) x40) x40) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (add_SNo (add_SNo x41 x41) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 2 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_7b7ba339c8bff853d3bb6d25a67a92e2250daf84506955126c922bdf23db0605 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37, x37 :e int -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x0 x41 x42 = add_SNo 1 (minus_SNo (add_SNo (add_SNo (add_SNo x41 x41) x41) x42)))) -> (forall x41, x41 :e int -> x1 x41 = x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x2 x41 x42 = x42)) -> x3 = 1 -> x4 = 0 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x5 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x0 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43) (x6 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x6 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x1 (x5 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x7 x41 x42 = x5 (x2 x41 x42) x3 x4)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x8 x41 x42 = add_SNo (x7 x41 x42) x41)) -> (forall x41, x41 :e int -> x9 x41 = x41) -> x10 = 0 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x11 x41 x42 = If_i (SNoLe x41 0) x42 (x8 (x11 (add_SNo x41 (minus_SNo 1)) x42) x41))) -> (forall x41, x41 :e int -> x12 x41 = x11 (x9 x41) x10) -> (forall x41, x41 :e int -> x13 x41 = add_SNo (x12 x41) (minus_SNo x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x14 x41 x42 = add_SNo x41 x42)) -> (forall x41, x41 :e int -> x15 x41 = x41) -> (forall x41, x41 :e int -> x16 x41 = add_SNo x41 (minus_SNo 1)) -> x17 = 2 -> x18 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x19 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x14 (x19 (add_SNo x41 (minus_SNo 1)) x42 x43) (x20 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x20 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x15 (x19 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x21 x41 = x19 (x16 x41) x17 x18) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x22 x41 x42 = add_SNo x42 (minus_SNo x41))) -> (forall x41, x41 :e int -> x23 x41 = x41) -> (forall x41, x41 :e int -> x24 x41 = x41) -> x25 = 1 -> x26 = 0 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x27 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x22 (x27 (add_SNo x41 (minus_SNo 1)) x42 x43) (x28 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x28 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x23 (x27 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x29 x41 = x27 (x24 x41) x25 x26) -> (forall x41, x41 :e int -> x30 x41 = mul_SNo (x21 x41) (x29 x41)) -> x31 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x32 x41 x42 = x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x33 x41 x42 = If_i (SNoLe x41 0) x42 (x30 (x33 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x34 x41 x42 = x33 x31 (x32 x41 x42))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x35 x41 x42 = add_SNo (x34 x41 x42) x41)) -> (forall x41, x41 :e int -> x36 x41 = x41) -> x37 = 0 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x38 x41 x42 = If_i (SNoLe x41 0) x42 (x35 (x38 (add_SNo x41 (minus_SNo 1)) x42) x41))) -> (forall x41, x41 :e int -> x39 x41 = x38 (x36 x41) x37) -> (forall x41, x41 :e int -> x40 x41 = add_SNo (x39 x41) (minus_SNo x41)) -> (forall x41, x41 :e int -> SNoLe 0 x41 -> x13 x41 = x40 x41)))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_26f5c933562b4f912f2a36bd2acff578cdd07c8cc18ea62a624900ff7c120ffc : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (x4 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo x40 x40))) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (add_SNo (x14 x40 x41) x40) x40) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (add_SNo (add_SNo x41 x41) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 2 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (x33 x40 x41) (mul_SNo 2 (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))))) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_752ac20402f89023add9b190b01a7ece2a23f2625f14fbf2eaa8842d5b460f2a : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (add_SNo (x4 x40) (minus_SNo x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo x40 x40))) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (add_SNo (x14 x40 x41) x40) x40) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (add_SNo (add_SNo x41 x41) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 2 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5e02e265faec03208fa6ba3b545d0a72b5846d5579644b06ec7e2011f691cbbd : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> x0 x40 = add_SNo (add_SNo x40 x40) x40) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (x4 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo x40 x40))) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (add_SNo (x14 x40 x41) x40) x40) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo 1 (add_SNo (add_SNo x41 x41) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 2 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (mul_SNo 2 (add_SNo x40 x40)))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5eb5929c6fc57112389ea97758adf0c518ca959f7dfc9097a106e135267693b0 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x0 x38 x39 = add_SNo 2 (add_SNo 2 (add_SNo x38 x39)))) -> (forall x38, x38 :e int -> x1 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x2 x38 x39 = x39)) -> x3 = 1 -> x4 = 0 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x5 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x0 (x5 (add_SNo x38 (minus_SNo 1)) x39 x40) (x6 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x6 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x1 (x5 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x7 x38 x39 = x5 (x2 x38 x39) x3 x4)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x8 x38 x39 = add_SNo (x7 x38 x39) x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x9 x38 x39 = x39)) -> (forall x38, x38 :e int -> x10 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x11 x38 x39 = If_i (SNoLe x38 0) x39 (x8 (x11 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x12 x38 x39 = x11 (x9 x38 x39) (x10 x38))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = x12 x38 x39)) -> (forall x38, x38 :e int -> x14 x38 = x38) -> x15 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x16 x38 x39 = If_i (SNoLe x38 0) x39 (x13 (x16 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> x17 x38 = x16 (x14 x38) x15) -> (forall x38, x38 :e int -> x18 x38 = add_SNo (x17 x38) x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x19 x38 x39 = add_SNo x38 x39)) -> (forall x38, x38 :e int -> x20 x38 = x38) -> (forall x38, x38 :e int -> x21 x38 = x38) -> x22 = add_SNo 1 (add_SNo 2 2) -> x23 = add_SNo 2 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x24 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x19 (x24 (add_SNo x38 (minus_SNo 1)) x39 x40) (x25 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x25 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x20 (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x26 x38 = x24 (x21 x38) x22 x23) -> (forall x38, x38 :e int -> x27 x38 = add_SNo (add_SNo (add_SNo (add_SNo (x26 x38) (minus_SNo 1)) (minus_SNo (mul_SNo 2 (add_SNo 2 x38)))) (minus_SNo x38)) (minus_SNo x38)) -> x28 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = add_SNo 2 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = If_i (SNoLe x38 0) x39 (x27 (x30 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x31 x38 x39 = x30 x28 (x29 x38 x39))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x32 x38 x39 = add_SNo (x31 x38 x39) x38)) -> (forall x38, x38 :e int -> x33 x38 = x38) -> x34 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x35 x38 x39 = If_i (SNoLe x38 0) x39 (x32 (x35 (add_SNo x38 (minus_SNo 1)) x39) x38))) -> (forall x38, x38 :e int -> x36 x38 = x35 (x33 x38) x34) -> (forall x38, x38 :e int -> x37 x38 = x36 x38) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x18 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_0af420637b2005edd03ffc5f933d1291bacea3c0e90969553e75f3fde31f1c1e : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (add_SNo (x4 x40) (minus_SNo x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x11 = 2 -> (forall x40, x40 :e int -> x12 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x14 x40 = x13 x11 (x12 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (x9 x40 x41) (x14 x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x16 x40 x41 = x41)) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x19 x40 x41 = x18 (x16 x40 x41) x17)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x20 x40 x41 = add_SNo (add_SNo (x19 x40 x41) x40) x40)) -> (forall x40, x40 :e int -> x21 x40 = x40) -> x22 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x23 x40 x41 = If_i (SNoLe x40 0) x41 (x20 (x23 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x24 x40 = x23 (x21 x40) x22) -> (forall x40, x40 :e int -> x25 x40 = x24 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x26 x40 x41 = add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)) x41)) (minus_SNo 1))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x40 x41 = add_SNo x41 x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x28 x40 x41 = x41)) -> x29 = 1 -> x30 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x31 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x26 (x31 (add_SNo x40 (minus_SNo 1)) x41 x42) (x32 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x32 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x27 (x31 (add_SNo x40 (minus_SNo 1)) x41 x42) (x32 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x31 (x28 x40 x41) x29 x30)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x25 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b082e86869fd86ecce186f9995f807e79c834ee879b386de985a3bc833ecca53 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo 1 (add_SNo (x4 x40) (minus_SNo x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> x10 x40 = add_SNo (add_SNo x40 x40) x40) -> x11 = 2 -> (forall x40, x40 :e int -> x12 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x14 x40 = x13 x11 (x12 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (x9 x40 x41) (x14 x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x16 x40 x41 = x41)) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x19 x40 x41 = x18 (x16 x40 x41) x17)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x20 x40 x41 = add_SNo (add_SNo (x19 x40 x41) x40) x40)) -> (forall x40, x40 :e int -> x21 x40 = x40) -> x22 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x23 x40 x41 = If_i (SNoLe x40 0) x41 (x20 (x23 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x24 x40 = x23 (x21 x40) x22) -> (forall x40, x40 :e int -> x25 x40 = x24 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x26 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x41)) (minus_SNo 1)) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x40 x41 = add_SNo x41 x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x28 x40 x41 = x41)) -> x29 = 1 -> x30 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x31 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x26 (x31 (add_SNo x40 (minus_SNo 1)) x41 x42) (x32 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x32 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x27 (x31 (add_SNo x40 (minus_SNo 1)) x41 x42) (x32 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x31 (x28 x40 x41) x29 x30)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x25 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_2a095bc36e639311c4ea7a075c0a50805ab7438c480f4272c24d345cda799a82 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8, x8 :e int -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = x29)) -> (forall x28, x28 :e int -> x2 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x4 x28 x29 = x3 (x1 x28 x29) (x2 x28))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x5 x28 x29 = add_SNo (x4 x28 x29) (minus_SNo x28))) -> x6 = 2 -> (forall x28, x28 :e int -> x7 x28 = add_SNo 2 x28) -> x8 = 2 -> (forall x28, x28 :e int -> x9 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x10 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x5 (x10 (add_SNo x28 (minus_SNo 1)) x29 x30) (x11 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x11 x28 x29 x30 = If_i (SNoLe x28 0) x30 x6))) -> (forall x28, x28 :e int -> x12 x28 = x10 (x7 x28) x8 (x9 x28)) -> (forall x28, x28 :e int -> x13 x28 = add_SNo (x12 x28) 1) -> (forall x28, x28 :e int -> x14 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x15 x28 = x28) -> x16 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x14 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x18 x28 = x17 (x15 x28) x16) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = add_SNo 1 2 -> x23 = add_SNo 1 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = add_SNo 1 (mul_SNo (add_SNo (x18 x28) (minus_SNo 2)) (x26 x28))) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_caa9c0e25ba957e09b60a353ba9ccee6e441b08fe13a4bd5ce405948c3becd2e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo (mul_SNo 2 (add_SNo x15 x15)) x15) -> (forall x15, x15 :e int -> x1 x15 = x15) -> (forall x15, x15 :e int -> x2 x15 = add_SNo 1 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) (x2 x15)) -> (forall x15, x15 :e int -> x5 x15 = mul_SNo 2 (mul_SNo 2 (x4 x15))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> (forall x15, x15 :e int -> x9 x15 = add_SNo 1 x15) -> x10 = add_SNo 1 (add_SNo 2 2) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) (x9 x15) x10) -> (forall x15, x15 :e int -> x14 x15 = mul_SNo 2 (mul_SNo 2 (x13 x15))) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_c445e4a1add7ac3f830f1dad990d696e5bca54e7b18e1a08ba544b39ff8f0efd : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x0 x7 x8 = add_SNo (add_SNo x7 (minus_SNo 2)) x8)) -> (forall x7, x7 :e int -> x1 x7 = add_SNo x7 x7) -> x2 = 2 -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x3 x7 x8 = If_i (SNoLe x7 0) x8 (x0 (x3 (add_SNo x7 (minus_SNo 1)) x8) x7))) -> (forall x7, x7 :e int -> x4 x7 = x3 (x1 x7) x2) -> (forall x7, x7 :e int -> x5 x7 = mul_SNo (x4 x7) x7) -> (forall x7, x7 :e int -> x6 x7 = add_SNo (mul_SNo (add_SNo (add_SNo x7 (minus_SNo 1)) x7) (add_SNo (mul_SNo x7 x7) (minus_SNo x7))) x7) -> (forall x7, x7 :e int -> SNoLe 0 x7 -> x5 x7 = x6 x7)))))))).
Admitted.
Theorem missingprop_72720b828b8c83388780d5f49de17155b5cab848968d3d02626e39677258531d : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = add_SNo (mul_SNo 2 (add_SNo (add_SNo (add_SNo x40 x40) x40) x41)) (minus_SNo 1))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x1 x40 x41 = add_SNo x41 x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x2 x40 x41 = x41)) -> x3 = 1 -> x4 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x5 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x0 (x5 (add_SNo x40 (minus_SNo 1)) x41 x42) (x6 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x6 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x1 (x5 (add_SNo x40 (minus_SNo 1)) x41 x42) (x6 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x7 x40 x41 = x5 (x2 x40 x41) x3 x4)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x9 = 2 -> (forall x40, x40 :e int -> x10 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = If_i (SNoLe x40 0) x41 (x8 (x11 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x12 x40 = x11 x9 (x10 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = add_SNo (x7 x40 x41) (add_SNo (x12 x40) (minus_SNo x40)))) -> (forall x40, x40 :e int -> x14 x40 = x40) -> x15 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x16 x40 x41 = If_i (SNoLe x40 0) x41 (x13 (x16 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x17 x40 = x16 (x14 x40) x15) -> (forall x40, x40 :e int -> x18 x40 = x17 x40) -> (forall x40, x40 :e int -> x19 x40 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)) (minus_SNo 1)) -> (forall x40, x40 :e int -> x20 x40 = x40) -> x21 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = If_i (SNoLe x40 0) x41 (x19 (x22 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x23 x40 = x22 (x20 x40) x21) -> (forall x40, x40 :e int -> x24 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x25 x40 = x40) -> x26 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x40 x41 = If_i (SNoLe x40 0) x41 (x24 (x27 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x28 x40 = x27 (x25 x40) x26) -> (forall x40, x40 :e int -> x29 x40 = add_SNo (x23 x40) (minus_SNo (x28 x40))) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) x40) (mul_SNo (add_SNo (mul_SNo (mul_SNo x40 2) 2) x40) 2))) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x18 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_286ca1acb1289cde56ad81e4a0136ee194632b959c959acdf8cbeeb48c10015f : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = add_SNo (mul_SNo 2 (add_SNo (add_SNo (add_SNo x40 x40) x40) x41)) (minus_SNo 1))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x1 x40 x41 = add_SNo x41 x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x2 x40 x41 = x41)) -> x3 = 1 -> x4 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x5 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x0 (x5 (add_SNo x40 (minus_SNo 1)) x41 x42) (x6 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x6 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x1 (x5 (add_SNo x40 (minus_SNo 1)) x41 x42) (x6 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x7 x40 x41 = x5 (x2 x40 x41) x3 x4)) -> (forall x40, x40 :e int -> x8 x40 = add_SNo (add_SNo x40 x40) x40) -> x9 = 2 -> (forall x40, x40 :e int -> x10 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = If_i (SNoLe x40 0) x41 (x8 (x11 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x12 x40 = x11 x9 (x10 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = add_SNo (x7 x40 x41) (x12 x40))) -> (forall x40, x40 :e int -> x14 x40 = x40) -> x15 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x16 x40 x41 = If_i (SNoLe x40 0) x41 (x13 (x16 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x17 x40 = x16 (x14 x40) x15) -> (forall x40, x40 :e int -> x18 x40 = x17 x40) -> (forall x40, x40 :e int -> x19 x40 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)) (minus_SNo 1)) -> (forall x40, x40 :e int -> x20 x40 = x40) -> x21 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = If_i (SNoLe x40 0) x41 (x19 (x22 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x23 x40 = x22 (x20 x40) x21) -> (forall x40, x40 :e int -> x24 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x25 x40 = x40) -> x26 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x40 x41 = If_i (SNoLe x40 0) x41 (x24 (x27 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x28 x40 = x27 (x25 x40) x26) -> (forall x40, x40 :e int -> x29 x40 = add_SNo (x23 x40) (minus_SNo (x28 x40))) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (mul_SNo 2 (add_SNo x40 x40)))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x18 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_8cc327bc52d467d42ad8fc9067fe9ee695fa6fc5f97376de6c3bdb87ca986fe7 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x33 x34)) (minus_SNo 1)) x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x1 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x2 x33 x34 = x34)) -> x3 = 1 -> x4 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x5 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x0 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x6 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x1 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x7 x33 x34 = x5 (x2 x33 x34) x3 x4)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = mul_SNo (add_SNo 2 x34) x33)) -> x9 = 2 -> (forall x33, x33 :e int -> x10 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = If_i (SNoLe x33 0) x34 (x8 (x11 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x12 x33 = x11 x9 (x10 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = add_SNo (x7 x33 x34) (x12 x33))) -> (forall x33, x33 :e int -> x14 x33 = x33) -> x15 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = If_i (SNoLe x33 0) x34 (x13 (x16 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x17 x33 = x16 (x14 x33) x15) -> (forall x33, x33 :e int -> x18 x33 = x17 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x33 x34)) (minus_SNo 1)) x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x20 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = x34)) -> x22 = 1 -> x23 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x19 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x20 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x26 x33 x34 = x24 (x21 x33 x34) x22 x23)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x27 x33 x34 = add_SNo (x26 x33 x34) (mul_SNo 2 (mul_SNo 2 (add_SNo (add_SNo x33 x33) x33))))) -> (forall x33, x33 :e int -> x28 x33 = x33) -> x29 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) x29) -> (forall x33, x33 :e int -> x32 x33 = x31 x33) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x18 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_581ef54d4eda8cba7b46914cbffe1a413a34bc70377bd57330883d4ad5a0ee43 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16, x16 :e int -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x39 x40 x41 x42 :e int))) -> (forall x40 : set -> set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x40 x41 x42 x43 :e int))) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set -> set, (forall x47, x47 :e int -> (forall x48, x48 :e int -> x46 x47 x48 :e int)) -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49, x49 :e int -> (forall x50 : set -> set -> set, (forall x51, x51 :e int -> (forall x52, x52 :e int -> x50 x51 x52 :e int)) -> (forall x51 : set -> set, (forall x52, x52 :e int -> x51 x52 :e int) -> (forall x52 : set -> set, (forall x53, x53 :e int -> x52 x53 :e int) -> (forall x53, x53 :e int -> x0 x53 = add_SNo (add_SNo x53 x53) x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x1 x53 x54 = add_SNo x54 x54)) -> x2 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x3 x53 x54 = If_i (SNoLe x53 0) x54 (x0 (x3 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x4 x53 x54 = x3 (x1 x53 x54) x2)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x5 x53 x54 = mul_SNo (add_SNo 2 x54) x53)) -> x6 = 2 -> (forall x53, x53 :e int -> x7 x53 = x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x8 x53 x54 = If_i (SNoLe x53 0) x54 (x5 (x8 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x9 x53 = x8 x6 (x7 x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x10 x53 x54 = add_SNo (x4 x53 x54) (x9 x53))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x11 x53 x54 = x54)) -> x12 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x13 x53 x54 = If_i (SNoLe x53 0) x54 (x10 (x13 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x14 x53 x54 = x13 (x11 x53 x54) x12)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x15 x53 x54 = mul_SNo (add_SNo 2 x54) x53)) -> x16 = 2 -> (forall x53, x53 :e int -> x17 x53 = x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x18 x53 x54 = If_i (SNoLe x53 0) x54 (x15 (x18 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x19 x53 = x18 x16 (x17 x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x20 x53 x54 = add_SNo (add_SNo (x14 x53 x54) (minus_SNo x53)) (x19 x53))) -> (forall x53, x53 :e int -> x21 x53 = x53) -> x22 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x23 x53 x54 = If_i (SNoLe x53 0) x54 (x20 (x23 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x24 x53 = x23 (x21 x53) x22) -> (forall x53, x53 :e int -> x25 x53 = x24 x53) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x26 x53 x54 = add_SNo (add_SNo (add_SNo (mul_SNo x54 x54) x53) x53) x53)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x27 x53 x54 = add_SNo x54 x54)) -> (forall x53, x53 :e int -> x28 x53 = x53) -> x29 = 1 -> x30 = 2 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x31 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x26 (x31 (add_SNo x53 (minus_SNo 1)) x54 x55) (x32 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x32 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x27 (x31 (add_SNo x53 (minus_SNo 1)) x54 x55) (x32 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> x33 x53 = x31 (x28 x53) x29 x30) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x34 x53 x54 = mul_SNo x53 x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x35 x53 x54 = x54)) -> (forall x53, x53 :e int -> x36 x53 = x53) -> x37 = 1 -> x38 = add_SNo 1 2 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x39 x53 x54 x55 = If_i (SNoLe x53 0) x54 (x34 (x39 (add_SNo x53 (minus_SNo 1)) x54 x55) (x40 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> (forall x55, x55 :e int -> x40 x53 x54 x55 = If_i (SNoLe x53 0) x55 (x35 (x39 (add_SNo x53 (minus_SNo 1)) x54 x55) (x40 (add_SNo x53 (minus_SNo 1)) x54 x55))))) -> (forall x53, x53 :e int -> x41 x53 = x39 (x36 x53) x37 x38) -> (forall x53, x53 :e int -> x42 x53 = mul_SNo (x33 x53) (x41 x53)) -> x43 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x44 x53 x54 = x54)) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x45 x53 x54 = If_i (SNoLe x53 0) x54 (x42 (x45 (add_SNo x53 (minus_SNo 1)) x54)))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x46 x53 x54 = x45 x43 (x44 x53 x54))) -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x47 x53 x54 = add_SNo (add_SNo (x46 x53 x54) x53) (mul_SNo (add_SNo (mul_SNo (mul_SNo x53 2) 2) x53) 2))) -> (forall x53, x53 :e int -> x48 x53 = x53) -> x49 = 1 -> (forall x53, x53 :e int -> (forall x54, x54 :e int -> x50 x53 x54 = If_i (SNoLe x53 0) x54 (x47 (x50 (add_SNo x53 (minus_SNo 1)) x54) x53))) -> (forall x53, x53 :e int -> x51 x53 = x50 (x48 x53) x49) -> (forall x53, x53 :e int -> x52 x53 = x51 x53) -> (forall x53, x53 :e int -> SNoLe 0 x53 -> x25 x53 = x52 x53)))))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_e273f908be09f99304b7ce247e305be4ea95d9cc48f7deb7006ae31c3a94d2a1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo (x4 x40) (minus_SNo x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (x14 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo x40 x40))) x40) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x41 x41)) x40))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = mul_SNo 2 (add_SNo 2 2) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) x40) (mul_SNo (add_SNo (mul_SNo (add_SNo x40 x40) 2) x40) 2))) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_511260444c249b202d7cd0eb6642fcd3d6072e2d749d08177852ff9928a6d0da : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x0 x48 x49 = mul_SNo (add_SNo 2 x49) x48)) -> x1 = 2 -> (forall x48, x48 :e int -> x2 x48 = x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x3 x48 x49 = If_i (SNoLe x48 0) x49 (x0 (x3 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x4 x48 = x3 x1 (x2 x48)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x5 x48 x49 = add_SNo (x4 x48) (mul_SNo (mul_SNo x49 x49) x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x6 x48 x49 = add_SNo x49 x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x7 x48 x49 = x49)) -> x8 = 1 -> x9 = 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x10 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x5 (x10 (add_SNo x48 (minus_SNo 1)) x49 x50) (x11 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x11 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x6 (x10 (add_SNo x48 (minus_SNo 1)) x49 x50) (x11 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x12 x48 x49 = x10 (x7 x48 x49) x8 x9)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x13 x48 x49 = add_SNo (add_SNo (x12 x48 x49) (mul_SNo 2 (add_SNo (add_SNo x48 x48) x48))) x48)) -> (forall x48, x48 :e int -> x14 x48 = x48) -> x15 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x16 x48 x49 = If_i (SNoLe x48 0) x49 (x13 (x16 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x17 x48 = x16 (x14 x48) x15) -> (forall x48, x48 :e int -> x18 x48 = x17 x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x19 x48 x49 = add_SNo (add_SNo (add_SNo x48 x48) x48) x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x20 x48 x49 = add_SNo x49 x49)) -> (forall x48, x48 :e int -> x21 x48 = x48) -> x22 = 1 -> x23 = 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x24 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x19 (x24 (add_SNo x48 (minus_SNo 1)) x49 x50) (x25 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x25 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x20 (x24 (add_SNo x48 (minus_SNo 1)) x49 x50) (x25 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x26 x48 = x24 (x21 x48) x22 x23) -> (forall x48, x48 :e int -> x27 x48 = mul_SNo x48 x48) -> x28 = 1 -> (forall x48, x48 :e int -> x29 x48 = add_SNo x48 x48) -> (forall x48, x48 :e int -> x30 x48 = add_SNo x48 (minus_SNo 1)) -> x31 = 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x32 x48 x49 = If_i (SNoLe x48 0) x49 (x29 (x32 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x33 x48 = x32 (x30 x48) x31) -> (forall x48, x48 :e int -> x34 x48 = x33 x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x35 x48 x49 = If_i (SNoLe x48 0) x49 (x27 (x35 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x36 x48 = x35 x28 (x34 x48)) -> (forall x48, x48 :e int -> x37 x48 = mul_SNo (x26 x48) (x36 x48)) -> x38 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x39 x48 x49 = x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x40 x48 x49 = If_i (SNoLe x48 0) x49 (x37 (x40 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x41 x48 x49 = x40 x38 (x39 x48 x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x42 x48 x49 = add_SNo (add_SNo (x41 x48 x49) (mul_SNo 2 (add_SNo (add_SNo x48 x48) x48))) x48)) -> (forall x48, x48 :e int -> x43 x48 = x48) -> x44 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x45 x48 x49 = If_i (SNoLe x48 0) x49 (x42 (x45 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x46 x48 = x45 (x43 x48) x44) -> (forall x48, x48 :e int -> x47 x48 = x46 x48) -> (forall x48, x48 :e int -> SNoLe 0 x48 -> x18 x48 = x47 x48))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_502dac844bc7ebefcb20a8945a1cca0a585ce0691f98974a1cf6bd5b2a830f2a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x2 x22 = add_SNo 1 (add_SNo x22 x22)) -> x3 = 2 -> x4 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = If_i (SNoLe x22 0) x23 (x2 (x5 (add_SNo x22 (minus_SNo 1)) x23)))) -> x6 = x5 x3 x4 -> x7 = x6 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x8 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x1 x22) x7) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo x22 x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = x17 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = mul_SNo (add_SNo 1 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) (x20 x22)) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_a61ab0df964f282f96dc1627c57eec206a38782e9bc2977e472ac46d16ab5b03 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = add_SNo x17 x18)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x1 x17 x18 = x18)) -> (forall x17, x17 :e int -> x2 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x4 x17 x18 = x3 (x1 x17 x18) (x2 x17))) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x5 x17 x18 = mul_SNo 2 (x4 x17 x18))) -> (forall x17, x17 :e int -> x6 x17 = x17) -> x7 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x5 (x8 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x6 x17) x7) -> (forall x17, x17 :e int -> x10 x17 = add_SNo (mul_SNo (add_SNo (x9 x17) (minus_SNo 2)) x17) (minus_SNo x17)) -> (forall x17, x17 :e int -> x11 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x12 x17 = x17) -> x13 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 (x12 x17) x13) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (add_SNo (add_SNo (mul_SNo (add_SNo (add_SNo (x15 x17) (minus_SNo 2)) (minus_SNo x17)) (add_SNo 1 (add_SNo 2 2))) (minus_SNo 1)) (minus_SNo (mul_SNo x17 x17))) x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
