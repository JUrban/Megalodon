Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
Theorem missingprop_d9f2b8456dec20ddfb10da124d801000ac1a9491bd9c9bf2a4b5a81280935907 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> x0 x35 = add_SNo (add_SNo x35 x35) x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x1 x35 x36 = add_SNo x36 x36)) -> x2 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x3 x35 x36 = If_i (SNoLe x35 0) x36 (x0 (x3 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x4 x35 x36 = x3 (x1 x35 x36) x2)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x5 x35 x36 = add_SNo (x4 x35 x36) (mul_SNo 2 (add_SNo x35 x35)))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x6 x35 x36 = x36)) -> x7 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x8 x35 x36 = If_i (SNoLe x35 0) x36 (x5 (x8 (add_SNo x35 (minus_SNo 1)) x36) x35))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x9 x35 x36 = x8 (x6 x35 x36) x7)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x10 x35 x36 = add_SNo (add_SNo (x9 x35 x36) (mul_SNo 2 (add_SNo (add_SNo x35 x35) x35))) x35)) -> (forall x35, x35 :e int -> x11 x35 = x35) -> x12 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x35 x36 = If_i (SNoLe x35 0) x36 (x10 (x13 (add_SNo x35 (minus_SNo 1)) x36) x35))) -> (forall x35, x35 :e int -> x14 x35 = x13 (x11 x35) x12) -> (forall x35, x35 :e int -> x15 x35 = x14 x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x16 x35 x36 = add_SNo (mul_SNo 2 (add_SNo x35 x35)) (mul_SNo x36 x36))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x17 x35 x36 = add_SNo (add_SNo x36 x36) x36)) -> (forall x35, x35 :e int -> x18 x35 = x35) -> x19 = 1 -> x20 = add_SNo 1 2 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x21 x35 x36 x37 = If_i (SNoLe x35 0) x36 (x16 (x21 (add_SNo x35 (minus_SNo 1)) x36 x37) (x22 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x22 x35 x36 x37 = If_i (SNoLe x35 0) x37 (x17 (x21 (add_SNo x35 (minus_SNo 1)) x36 x37) (x22 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> x23 x35 = x21 (x18 x35) x19 x20) -> (forall x35, x35 :e int -> x24 x35 = x23 x35) -> x25 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x26 x35 x36 = x36)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x27 x35 x36 = If_i (SNoLe x35 0) x36 (x24 (x27 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x28 x35 x36 = x27 x25 (x26 x35 x36))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x29 x35 x36 = add_SNo (add_SNo (x28 x35 x36) (mul_SNo 2 (add_SNo (add_SNo x35 x35) x35))) x35)) -> (forall x35, x35 :e int -> x30 x35 = x35) -> x31 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x32 x35 x36 = If_i (SNoLe x35 0) x36 (x29 (x32 (add_SNo x35 (minus_SNo 1)) x36) x35))) -> (forall x35, x35 :e int -> x33 x35 = x32 (x30 x35) x31) -> (forall x35, x35 :e int -> x34 x35 = x33 x35) -> (forall x35, x35 :e int -> SNoLe 0 x35 -> x15 x35 = x34 x35)))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b0d3c3fc3940c856f8888853fac4f4387a7922b013911858ded608df16f2521b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31, x31 :e int -> x28 x29 x30 x31 :e int))) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x0 x31 x32 = add_SNo (add_SNo (add_SNo x31 (minus_SNo x32)) x31) x31)) -> (forall x31, x31 :e int -> x1 x31 = x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x2 x31 x32 = x32)) -> x3 = 1 -> x4 = 0 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x5 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x0 (x5 (add_SNo x31 (minus_SNo 1)) x32 x33) (x6 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x6 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x1 (x5 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x7 x31 x32 = x5 (x2 x31 x32) x3 x4)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x8 x31 x32 = add_SNo (x7 x31 x32) (minus_SNo x31))) -> (forall x31, x31 :e int -> x9 x31 = mul_SNo (add_SNo 1 2) (add_SNo 1 x31)) -> x10 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x11 x31 x32 = If_i (SNoLe x31 0) x32 (x8 (x11 (add_SNo x31 (minus_SNo 1)) x32) x31))) -> (forall x31, x31 :e int -> x12 x31 = x11 (x9 x31) x10) -> (forall x31, x31 :e int -> x13 x31 = x12 x31) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x14 x31 x32 = add_SNo x31 x32)) -> (forall x31, x31 :e int -> x15 x31 = x31) -> (forall x31, x31 :e int -> x16 x31 = add_SNo 2 (add_SNo (add_SNo x31 x31) x31)) -> x17 = 2 -> x18 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x14 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33) (x20 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x20 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x15 (x19 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x21 x31 = x19 (x16 x31) x17 x18) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x22 x31 x32 = add_SNo (mul_SNo 2 (add_SNo x31 x31)) x32)) -> (forall x31, x31 :e int -> x23 x31 = x31) -> (forall x31, x31 :e int -> x24 x31 = x31) -> x25 = add_SNo 1 2 -> x26 = 1 -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x27 x31 x32 x33 = If_i (SNoLe x31 0) x32 (x22 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33) (x28 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x28 x31 x32 x33 = If_i (SNoLe x31 0) x33 (x23 (x27 (add_SNo x31 (minus_SNo 1)) x32 x33))))) -> (forall x31, x31 :e int -> x29 x31 = x27 (x24 x31) x25 x26) -> (forall x31, x31 :e int -> x30 x31 = mul_SNo (x21 x31) (x29 x31)) -> (forall x31, x31 :e int -> SNoLe 0 x31 -> x13 x31 = x30 x31)))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_4815fbd932fa08931735c7458acf3a8c9b9e92e17dd8ea258ac4bf95aeb5939e : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x0 x15 x16 = add_SNo (add_SNo x15 x15) x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x1 x15 x16 = mul_SNo 2 (add_SNo 2 x16))) -> (forall x15, x15 :e int -> x2 x15 = add_SNo 2 x15) -> x3 = 0 -> x4 = 1 -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x5 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x0 (x5 (add_SNo x15 (minus_SNo 1)) x16 x17) (x6 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x6 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x1 (x5 (add_SNo x15 (minus_SNo 1)) x16 x17) (x6 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x7 x15 = x5 (x2 x15) x3 x4) -> (forall x15, x15 :e int -> x8 x15 = x7 x15) -> (forall x15, x15 :e int -> x9 x15 = add_SNo x15 x15) -> (forall x15, x15 :e int -> x10 x15 = x15) -> (forall x15, x15 :e int -> x11 x15 = add_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x15 x15)) x15)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x12 x15 x16 = If_i (SNoLe x15 0) x16 (x9 (x12 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x13 x15 = x12 (x10 x15) (x11 x15)) -> (forall x15, x15 :e int -> x14 x15 = mul_SNo 2 (add_SNo 2 (x13 x15))) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x8 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_4129f6e6d786376c9edad6b3d8bd7979f676021fd220514f5f20d3a98447ee57 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> (forall x44 : set -> set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x44 x45 x46 x47 :e int))) -> (forall x45 : set -> set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x45 x46 x47 x48 :e int))) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> x0 x48 = mul_SNo 2 (add_SNo (add_SNo x48 x48) x48)) -> (forall x48, x48 :e int -> x1 x48 = x48) -> (forall x48, x48 :e int -> x2 x48 = add_SNo x48 x48) -> (forall x48, x48 :e int -> x3 x48 = x48) -> x4 = 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x5 x48 x49 = If_i (SNoLe x48 0) x49 (x2 (x5 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x6 x48 = x5 (x3 x48) x4) -> (forall x48, x48 :e int -> x7 x48 = add_SNo (x6 x48) (minus_SNo 1)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x8 x48 x49 = If_i (SNoLe x48 0) x49 (x0 (x8 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x9 x48 = x8 (x1 x48) (x7 x48)) -> (forall x48, x48 :e int -> x10 x48 = x9 x48) -> x11 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x12 x48 x49 = x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x13 x48 x49 = If_i (SNoLe x48 0) x49 (x10 (x13 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x14 x48 x49 = x13 x11 (x12 x48 x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x15 x48 x49 = add_SNo (x14 x48 x49) (mul_SNo 2 (add_SNo x48 x48)))) -> (forall x48, x48 :e int -> x16 x48 = x48) -> x17 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x18 x48 x49 = If_i (SNoLe x48 0) x49 (x15 (x18 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x19 x48 = x18 (x16 x48) x17) -> (forall x48, x48 :e int -> x20 x48 = x19 x48) -> (forall x48, x48 :e int -> x21 x48 = add_SNo (mul_SNo x48 x48) (minus_SNo x48)) -> x22 = 1 -> (forall x48, x48 :e int -> x23 x48 = add_SNo x48 x48) -> (forall x48, x48 :e int -> x24 x48 = x48) -> x25 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x26 x48 x49 = If_i (SNoLe x48 0) x49 (x23 (x26 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x27 x48 = x26 (x24 x48) x25) -> (forall x48, x48 :e int -> x28 x48 = x27 x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x29 x48 x49 = If_i (SNoLe x48 0) x49 (x21 (x29 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> x30 x48 = x29 x22 (x28 x48)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x31 x48 x49 = mul_SNo x48 x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x32 x48 x49 = x49)) -> (forall x48, x48 :e int -> x33 x48 = x48) -> x34 = add_SNo 1 2 -> x35 = add_SNo 1 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x36 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x31 (x36 (add_SNo x48 (minus_SNo 1)) x49 x50) (x37 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x37 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x32 (x36 (add_SNo x48 (minus_SNo 1)) x49 x50) (x37 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x38 x48 = x36 (x33 x48) x34 x35) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x39 x48 x49 = mul_SNo x48 x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x40 x48 x49 = x49)) -> (forall x48, x48 :e int -> x41 x48 = x48) -> x42 = 1 -> x43 = add_SNo 2 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x44 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x39 (x44 (add_SNo x48 (minus_SNo 1)) x49 x50) (x45 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x45 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x40 (x44 (add_SNo x48 (minus_SNo 1)) x49 x50) (x45 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x46 x48 = x44 (x41 x48) x42 x43) -> (forall x48, x48 :e int -> x47 x48 = add_SNo (mul_SNo (x30 x48) (x38 x48)) (x46 x48)) -> (forall x48, x48 :e int -> SNoLe 0 x48 -> x20 x48 = x47 x48))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_505e3601f94b89b0c99ea5d1e2d67b0c73e9ba7c091c0fb1cedf02b63dcb99e6 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x33 x33) x33)) (mul_SNo x34 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x1 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x2 x33 x34 = x34)) -> x3 = 1 -> x4 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x5 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x0 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x6 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x1 (x5 (add_SNo x33 (minus_SNo 1)) x34 x35) (x6 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x7 x33 x34 = x5 (x2 x33 x34) x3 x4)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = add_SNo (x7 x33 x34) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33)))) -> (forall x33, x33 :e int -> x9 x33 = x33) -> x10 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = If_i (SNoLe x33 0) x34 (x8 (x11 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x12 x33 = x11 (x9 x33) x10) -> (forall x33, x33 :e int -> x13 x33 = x12 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = add_SNo (add_SNo (add_SNo x33 x33) x33) x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x15 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = x34)) -> x17 = 1 -> x18 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x19 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x14 (x19 (add_SNo x33 (minus_SNo 1)) x34 x35) (x20 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x20 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x15 (x19 (add_SNo x33 (minus_SNo 1)) x34 x35) (x20 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = x19 (x16 x33 x34) x17 x18)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = add_SNo (add_SNo (x21 x33 x34) (mul_SNo 2 (add_SNo x33 x33))) x33)) -> (forall x33, x33 :e int -> x23 x33 = x33) -> x24 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = If_i (SNoLe x33 0) x34 (x22 (x25 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x26 x33 = x25 (x23 x33) x24) -> (forall x33, x33 :e int -> x27 x33 = add_SNo x33 x33) -> (forall x33, x33 :e int -> x28 x33 = x33) -> x29 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) x29) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x26 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x13 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6d255630f875fd840f3a092e2c5d9a180920c4f260e79379248c24fd0bb0b9ad : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> x0 x40 = add_SNo (add_SNo x40 x40) x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x1 x40 x41 = add_SNo x41 x41)) -> x2 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x4 x40 x41 = x3 (x1 x40 x41) x2)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x5 x40 x41 = add_SNo (x4 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo x40 x40)))) -> (forall x40, x40 :e int -> x11 x40 = x40) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x14 x40 = x13 (x11 x40) x12) -> (forall x40, x40 :e int -> x15 x40 = x14 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x16 x40 x41 = add_SNo (add_SNo (add_SNo x40 x40) x40) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x17 x40 x41 = add_SNo x41 x41)) -> (forall x40, x40 :e int -> x18 x40 = x40) -> x19 = 1 -> x20 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x21 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x16 (x21 (add_SNo x40 (minus_SNo 1)) x41 x42) (x22 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x22 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x17 (x21 (add_SNo x40 (minus_SNo 1)) x41 x42) (x22 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x23 x40 = x21 (x18 x40) x19 x20) -> (forall x40, x40 :e int -> x24 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x25 x40 = add_SNo x40 (minus_SNo 1)) -> x26 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x40 x41 = If_i (SNoLe x40 0) x41 (x24 (x27 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x28 x40 = x27 (x25 x40) x26) -> (forall x40, x40 :e int -> x29 x40 = mul_SNo (x23 x40) (x28 x40)) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (mul_SNo 2 (add_SNo x40 x40)))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x15 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_fdfbc7a0425cbd639ab74c552bb0c7321e9c1d8687ca45d0eebf35d9bb36401b : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x0 x37 x38 = add_SNo x38 (minus_SNo 1))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x1 x37 x38 = add_SNo x37 (minus_SNo x38))) -> (forall x37, x37 :e int -> x2 x37 = x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x3 x37 x38 = If_i (SNoLe x37 0) x38 (x0 (x3 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x4 x37 x38 = x3 (x1 x37 x38) (x2 x37))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x5 x37 x38 = x4 x37 x38)) -> (forall x37, x37 :e int -> x6 x37 = x37) -> (forall x37, x37 :e int -> x7 x37 = x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x8 x37 x38 = If_i (SNoLe x37 0) x38 (x5 (x8 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> x9 x37 = x8 (x6 x37) (x7 x37)) -> (forall x37, x37 :e int -> x10 x37 = add_SNo (If_i (SNoLe (add_SNo (x9 x37) (minus_SNo 1)) 0) 0 1) x37) -> (forall x37, x37 :e int -> x11 x37 = x37) -> (forall x37, x37 :e int -> x12 x37 = x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x13 x37 x38 = If_i (SNoLe x37 0) x38 (x10 (x13 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x14 x37 = x13 (x11 x37) (x12 x37)) -> (forall x37, x37 :e int -> x15 x37 = add_SNo (add_SNo (x14 x37) (minus_SNo x37)) 1) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x16 x37 x38 = x38)) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x17 x37 x38 = add_SNo x37 (minus_SNo x38))) -> (forall x37, x37 :e int -> x18 x37 = x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x19 x37 x38 = If_i (SNoLe x37 0) x38 (x16 (x19 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x20 x37 x38 = x19 (x17 x37 x38) (x18 x37))) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x21 x37 x38 = x20 x37 x38)) -> (forall x37, x37 :e int -> x22 x37 = x37) -> (forall x37, x37 :e int -> x23 x37 = add_SNo 2 x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x24 x37 x38 = If_i (SNoLe x37 0) x38 (x21 (x24 (add_SNo x37 (minus_SNo 1)) x38) x37))) -> (forall x37, x37 :e int -> x25 x37 = x24 (x22 x37) (x23 x37)) -> (forall x37, x37 :e int -> x26 x37 = add_SNo (add_SNo (If_i (SNoLe (add_SNo (x25 x37) (minus_SNo 2)) 0) 1 2) (minus_SNo 1)) x37) -> (forall x37, x37 :e int -> x27 x37 = mul_SNo x37 x37) -> x28 = 2 -> x29 = 2 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x30 x37 x38 = If_i (SNoLe x37 0) x38 (x27 (x30 (add_SNo x37 (minus_SNo 1)) x38)))) -> x31 = x30 x28 x29 -> x32 = x31 -> (forall x37, x37 :e int -> x33 x37 = x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x34 x37 x38 = If_i (SNoLe x37 0) x38 (x26 (x34 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x35 x37 = x34 x32 (x33 x37)) -> (forall x37, x37 :e int -> x36 x37 = add_SNo (add_SNo (x35 x37) (minus_SNo x37)) 1) -> (forall x37, x37 :e int -> SNoLe 0 x37 -> x15 x37 = x36 x37)))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_1985db8c704ea2894b2f5bd5090560722606be74c11bf9b044200c991e3ead2f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> x12 x13 x14 x15 :e int))) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> x0 x15 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x15 x15) x15)) x15) -> (forall x15, x15 :e int -> x1 x15 = x15) -> x2 = add_SNo 1 (add_SNo 2 2) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x3 x15 x16 = If_i (SNoLe x15 0) x16 (x0 (x3 (add_SNo x15 (minus_SNo 1)) x16)))) -> (forall x15, x15 :e int -> x4 x15 = x3 (x1 x15) x2) -> (forall x15, x15 :e int -> x5 x15 = x4 x15) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x6 x15 x16 = mul_SNo x15 x16)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x7 x15 x16 = x16)) -> (forall x15, x15 :e int -> x8 x15 = x15) -> x9 = add_SNo 1 (add_SNo 2 2) -> x10 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x11 x15 x16 x17 = If_i (SNoLe x15 0) x16 (x6 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x12 x15 x16 x17 = If_i (SNoLe x15 0) x17 (x7 (x11 (add_SNo x15 (minus_SNo 1)) x16 x17) (x12 (add_SNo x15 (minus_SNo 1)) x16 x17))))) -> (forall x15, x15 :e int -> x13 x15 = x11 (x8 x15) x9 x10) -> (forall x15, x15 :e int -> x14 x15 = x13 x15) -> (forall x15, x15 :e int -> SNoLe 0 x15 -> x5 x15 = x14 x15)))))))))))))))).
Admitted.
Theorem missingprop_0d26620fe6bc67330e5ab968e6e00e588d541985f016bf9db6b706a6ef697b75 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x0 x17 x18 = add_SNo x17 x18)) -> (forall x17, x17 :e int -> x1 x17 = add_SNo 1 (add_SNo x17 x17)) -> x2 = 2 -> (forall x17, x17 :e int -> x3 x17 = x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x4 x17 x18 = If_i (SNoLe x17 0) x18 (x1 (x4 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x5 x17 = x4 x2 (x3 x17)) -> (forall x17, x17 :e int -> x6 x17 = x5 x17) -> x7 = 0 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x8 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x8 (add_SNo x17 (minus_SNo 1)) x18) x17))) -> (forall x17, x17 :e int -> x9 x17 = x8 (x6 x17) x7) -> (forall x17, x17 :e int -> x10 x17 = mul_SNo (x9 x17) x17) -> (forall x17, x17 :e int -> x11 x17 = add_SNo (mul_SNo 2 (mul_SNo x17 x17)) (minus_SNo x17)) -> x12 = 1 -> (forall x17, x17 :e int -> x13 x17 = add_SNo 2 (add_SNo x17 x17)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x11 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x12 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo (x15 x17) x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x10 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_0bfb5d858a43e74051a8a1095213099351b57da824d752e2984908642b69c8c7 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10, x10 :e int -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x0 x34 x35 = add_SNo x34 x35)) -> (forall x34, x34 :e int -> x1 x34 = x34) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x2 x34 x35 = x35)) -> x3 = 1 -> (forall x34, x34 :e int -> x4 x34 = x34) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x5 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x0 (x5 (add_SNo x34 (minus_SNo 1)) x35 x36) (x6 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x6 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x1 (x5 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x7 x34 x35 = x5 (x2 x34 x35) x3 (x4 x34))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x8 x34 x35 = x7 x34 x35)) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x9 x34 x35 = add_SNo 1 x35)) -> x10 = 2 -> x11 = 2 -> (forall x34, x34 :e int -> x12 x34 = x34) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x8 (x13 (add_SNo x34 (minus_SNo 1)) x35 x36) (x14 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x14 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x9 (x13 (add_SNo x34 (minus_SNo 1)) x35 x36) (x14 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> x15 x34 = x13 x10 x11 (x12 x34)) -> (forall x34, x34 :e int -> x16 x34 = x15 x34) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x17 x34 x35 = add_SNo x34 x35)) -> (forall x34, x34 :e int -> x18 x34 = x34) -> (forall x34, x34 :e int -> x19 x34 = x34) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x20 x34 x35 = add_SNo x34 x35)) -> (forall x34, x34 :e int -> x21 x34 = x34) -> (forall x34, x34 :e int -> x22 x34 = x34) -> x23 = 1 -> x24 = 2 -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x25 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x20 (x25 (add_SNo x34 (minus_SNo 1)) x35 x36) (x26 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x26 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x21 (x25 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> x27 x34 = x25 (x22 x34) x23 x24) -> (forall x34, x34 :e int -> x28 x34 = add_SNo 1 (x27 x34)) -> x29 = 1 -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x30 x34 x35 x36 = If_i (SNoLe x34 0) x35 (x17 (x30 (add_SNo x34 (minus_SNo 1)) x35 x36) (x31 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x31 x34 x35 x36 = If_i (SNoLe x34 0) x36 (x18 (x30 (add_SNo x34 (minus_SNo 1)) x35 x36))))) -> (forall x34, x34 :e int -> x32 x34 = x30 (x19 x34) (x28 x34) x29) -> (forall x34, x34 :e int -> x33 x34 = x32 x34) -> (forall x34, x34 :e int -> SNoLe 0 x34 -> x16 x34 = x33 x34))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_d15f58d9440a95b71db44b4e7876d02b1d686ce57679e4ad1aa3aa9ff6d5f157 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = x29)) -> x3 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x4 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x7 x28 x29 = x5 (x2 x28 x29) x3 (x4 x28 x29))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = add_SNo x28 (x7 x28 x29))) -> (forall x28, x28 :e int -> x9 x28 = x28) -> x10 = 0 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x15 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = add_SNo x29 (minus_SNo 2))) -> x17 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x18 x28 x29 = x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x21 x28 x29 = x19 (x16 x28 x29) x17 (x18 x28 x29))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = add_SNo (mul_SNo (x21 x28 x29) (mul_SNo x29 x29)) x28)) -> (forall x28, x28 :e int -> x23 x28 = x28) -> x24 = 0 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_1b12402137e20bb901367ba3a4c6f3f6c362767b5f991f935060ed66ad249ac1 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x1 x23 x24 = mul_SNo 2 (mul_SNo 2 (add_SNo (add_SNo x24 (minus_SNo x23)) (minus_SNo x23))))) -> (forall x23, x23 :e int -> x2 x23 = x23) -> x3 = 0 -> x4 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) x3 x4) -> (forall x23, x23 :e int -> x8 x23 = x7 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x9 x23 x24 = add_SNo x23 x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x10 x23 x24 = add_SNo x24 (minus_SNo x23))) -> (forall x23, x23 :e int -> x11 x23 = x23) -> x12 = 0 -> (forall x23, x23 :e int -> x13 x23 = add_SNo x23 x23) -> (forall x23, x23 :e int -> x14 x23 = add_SNo x23 (minus_SNo 1)) -> x15 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x16 x23 x24 = If_i (SNoLe x23 0) x24 (x13 (x16 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x17 x23 = x16 (x14 x23) x15) -> (forall x23, x23 :e int -> x18 x23 = x17 x23) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x9 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x10 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x11 x23) x12 (x18 x23)) -> (forall x23, x23 :e int -> x22 x23 = x21 x23) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_089ee708f5254dbdab60f752b421fdd0328d3b37fcf824511ac4e7041e11d2e8 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x0 x7 x8 = add_SNo 2 (add_SNo x7 x8))) -> (forall x7, x7 :e int -> x1 x7 = x7) -> (forall x7, x7 :e int -> x2 x7 = x7) -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x3 x7 x8 = If_i (SNoLe x7 0) x8 (x0 (x3 (add_SNo x7 (minus_SNo 1)) x8) x7))) -> (forall x7, x7 :e int -> x4 x7 = x3 (x1 x7) (x2 x7)) -> (forall x7, x7 :e int -> x5 x7 = add_SNo 1 (mul_SNo 2 (x4 x7))) -> (forall x7, x7 :e int -> x6 x7 = add_SNo 1 (add_SNo (mul_SNo (add_SNo 2 (add_SNo 2 (add_SNo 2 x7))) x7) x7)) -> (forall x7, x7 :e int -> SNoLe 0 x7 -> x5 x7 = x6 x7)))))))).
Admitted.
Theorem missingprop_e58a02074285887bda7748e10f886e7ca5fc996cf5d5a085baf6d995e90d7be0 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo (mul_SNo (add_SNo 1 2) (add_SNo (add_SNo x28 x28) x29)) x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x1 x28 x29 = mul_SNo 2 (add_SNo x29 x29))) -> (forall x28, x28 :e int -> x2 x28 = x28) -> x3 = 0 -> x4 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x7 x28 = x5 (x2 x28) x3 x4) -> (forall x28, x28 :e int -> x8 x28 = x7 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x9 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x10 x28 x29 = x29)) -> (forall x28, x28 :e int -> x11 x28 = x28) -> x12 = 1 -> x13 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x14 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x9 (x14 (add_SNo x28 (minus_SNo 1)) x29 x30) (x15 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x15 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x10 (x14 (add_SNo x28 (minus_SNo 1)) x29 x30) (x15 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x16 x28 = x14 (x11 x28) x12 x13) -> (forall x28, x28 :e int -> x17 x28 = mul_SNo x28 x28) -> x18 = 1 -> (forall x28, x28 :e int -> x19 x28 = add_SNo x28 x28) -> (forall x28, x28 :e int -> x20 x28 = x28) -> x21 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = If_i (SNoLe x28 0) x29 (x19 (x22 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x23 x28 = x22 (x20 x28) x21) -> (forall x28, x28 :e int -> x24 x28 = x23 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x17 (x25 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x26 x28 = x25 x18 (x24 x28)) -> (forall x28, x28 :e int -> x27 x28 = add_SNo (x16 x28) (minus_SNo (x26 x28))) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x8 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f2be3f395dec44541ac58711ee8e8c9f944d0424764d7e3bc851532edfc69168 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> x0 x25 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x25 x25) x25)) x25) -> (forall x25, x25 :e int -> x1 x25 = x25) -> x2 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x3 x25 x26 = If_i (SNoLe x25 0) x26 (x0 (x3 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x4 x25 = x3 (x1 x25) x2) -> (forall x25, x25 :e int -> x5 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x6 x25 = x25) -> x7 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x8 x25 x26 = If_i (SNoLe x25 0) x26 (x5 (x8 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x9 x25 = x8 (x6 x25) x7) -> (forall x25, x25 :e int -> x10 x25 = add_SNo (x4 x25) (minus_SNo (x9 x25))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x11 x25 x26 = mul_SNo x25 x26)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x12 x25 x26 = x26)) -> (forall x25, x25 :e int -> x13 x25 = x25) -> x14 = 1 -> x15 = add_SNo 1 (add_SNo 2 (add_SNo 2 2)) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x16 x25 x26 x27 = If_i (SNoLe x25 0) x26 (x11 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x25 x26 x27 = If_i (SNoLe x25 0) x27 (x12 (x16 (add_SNo x25 (minus_SNo 1)) x26 x27) (x17 (add_SNo x25 (minus_SNo 1)) x26 x27))))) -> (forall x25, x25 :e int -> x18 x25 = x16 (x13 x25) x14 x15) -> (forall x25, x25 :e int -> x19 x25 = add_SNo x25 x25) -> (forall x25, x25 :e int -> x20 x25 = x25) -> x21 = 1 -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x22 x25 x26 = If_i (SNoLe x25 0) x26 (x19 (x22 (add_SNo x25 (minus_SNo 1)) x26)))) -> (forall x25, x25 :e int -> x23 x25 = x22 (x20 x25) x21) -> (forall x25, x25 :e int -> x24 x25 = add_SNo (x18 x25) (minus_SNo (x23 x25))) -> (forall x25, x25 :e int -> SNoLe 0 x25 -> x10 x25 = x24 x25)))))))))))))))))))))))))).
Admitted.
Theorem missingprop_1db602a57bce8cc5caf71b0c6317405d8dbe833716057bc08a0cf06ae7bad219 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x0 x28 x29 = add_SNo x28 x29)) -> (forall x28, x28 :e int -> x1 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x2 x28 x29 = add_SNo 2 x29)) -> (forall x28, x28 :e int -> x3 x28 = x28) -> (forall x28, x28 :e int -> x4 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x5 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x0 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30) (x6 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x6 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x1 (x5 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x7 x28 x29 = x5 (x2 x28 x29) (x3 x28) (x4 x28))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = add_SNo (x7 x28 x29) (minus_SNo x28))) -> (forall x28, x28 :e int -> x9 x28 = add_SNo 2 x28) -> x10 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x11 x28 x29 = If_i (SNoLe x28 0) x29 (x8 (x11 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x12 x28 = x11 (x9 x28) x10) -> (forall x28, x28 :e int -> x13 x28 = x12 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x14 x28 x29 = add_SNo 1 (add_SNo x28 x29))) -> (forall x28, x28 :e int -> x15 x28 = x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x16 x28 x29 = x29)) -> x17 = 2 -> x18 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x19 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x14 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30) (x20 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x20 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x15 (x19 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x21 x28 x29 = x19 (x16 x28 x29) x17 x18)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x22 x28 x29 = mul_SNo (x21 x28 x29) x28)) -> (forall x28, x28 :e int -> x23 x28 = add_SNo 2 x28) -> x24 = 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x25 x28 x29 = If_i (SNoLe x28 0) x29 (x22 (x25 (add_SNo x28 (minus_SNo 1)) x29) x28))) -> (forall x28, x28 :e int -> x26 x28 = x25 (x23 x28) x24) -> (forall x28, x28 :e int -> x27 x28 = x26 x28) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x13 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_410e7a6001169aa839b7adf84969ef15261e45e463a8a72f8673e5b3afa3d7cf : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> (forall x10 : set -> set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> x10 x11 x12 x13 :e int))) -> (forall x11 : set -> set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14, x14 :e int -> x11 x12 x13 x14 :e int))) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x0 x33 x34 = mul_SNo (add_SNo 2 x34) x33)) -> x1 = 2 -> (forall x33, x33 :e int -> x2 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x4 x33 = x3 x1 (x2 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x5 x33 x34 = add_SNo (add_SNo (x4 x33) (minus_SNo x33)) (mul_SNo x34 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x6 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x7 x33 x34 = x34)) -> x8 = 1 -> x9 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x10 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x5 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x11 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x6 (x10 (add_SNo x33 (minus_SNo 1)) x34 x35) (x11 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x12 x33 x34 = x10 (x7 x33 x34) x8 x9)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = add_SNo (add_SNo (x12 x33 x34) (mul_SNo 2 (add_SNo x33 x33))) x33)) -> (forall x33, x33 :e int -> x14 x33 = x33) -> x15 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x16 x33 x34 = If_i (SNoLe x33 0) x34 (x13 (x16 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x17 x33 = x16 (x14 x33) x15) -> (forall x33, x33 :e int -> x18 x33 = x17 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x19 x33 x34 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x33 x33)) (mul_SNo x34 x34)) x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x20 x33 x34 = add_SNo x34 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = x34)) -> x22 = 1 -> x23 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x24 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x19 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x25 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x20 (x24 (add_SNo x33 (minus_SNo 1)) x34 x35) (x25 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x26 x33 x34 = x24 (x21 x33 x34) x22 x23)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x27 x33 x34 = add_SNo (add_SNo (x26 x33 x34) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33))) x33)) -> (forall x33, x33 :e int -> x28 x33 = x33) -> x29 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x27 (x30 (add_SNo x33 (minus_SNo 1)) x34) x33))) -> (forall x33, x33 :e int -> x31 x33 = x30 (x28 x33) x29) -> (forall x33, x33 :e int -> x32 x33 = x31 x33) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x18 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_926e188d3b7af43a5bd11da6907b69150fc9c39b62c51e4ac714472e138b177f : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x0 x26 x27 = add_SNo (mul_SNo 2 (add_SNo x26 x26)) (minus_SNo x27))) -> (forall x26, x26 :e int -> x1 x26 = x26) -> (forall x26, x26 :e int -> x2 x26 = add_SNo 1 (add_SNo x26 x26)) -> x3 = 1 -> x4 = 1 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x5 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x0 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28) (x6 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x6 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x1 (x5 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x7 x26 = x5 (x2 x26) x3 x4) -> (forall x26, x26 :e int -> x8 x26 = x7 x26) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x9 x26 x27 = add_SNo (mul_SNo 2 (add_SNo x26 x26)) (minus_SNo x27))) -> (forall x26, x26 :e int -> x10 x26 = x26) -> (forall x26, x26 :e int -> x11 x26 = x26) -> x12 = 2 -> x13 = 1 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x14 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x9 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28) (x15 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x15 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x10 (x14 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x16 x26 = x14 (x11 x26) x12 x13) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x17 x26 x27 = add_SNo (mul_SNo 2 (add_SNo x26 x26)) (minus_SNo x27))) -> (forall x26, x26 :e int -> x18 x26 = x26) -> (forall x26, x26 :e int -> x19 x26 = add_SNo x26 (minus_SNo 1)) -> (forall x26, x26 :e int -> x20 x26 = add_SNo (If_i (SNoLe x26 0) 0 2) 1) -> x21 = 1 -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x22 x26 x27 x28 = If_i (SNoLe x26 0) x27 (x17 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28) (x23 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x23 x26 x27 x28 = If_i (SNoLe x26 0) x28 (x18 (x22 (add_SNo x26 (minus_SNo 1)) x27 x28))))) -> (forall x26, x26 :e int -> x24 x26 = x22 (x19 x26) (x20 x26) x21) -> (forall x26, x26 :e int -> x25 x26 = add_SNo (mul_SNo (mul_SNo (x16 x26) (x24 x26)) 2) (minus_SNo 1)) -> (forall x26, x26 :e int -> SNoLe 0 x26 -> x8 x26 = x25 x26))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_d59492e6237e0acdfe8fd57354bdd36e69150cd4e2f08377ec4cf56b73186b51 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x20 x21 x22 x23 :e int))) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x0 x23 x24 = add_SNo x24 x24)) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x1 x23 x24 = mul_SNo 2 (add_SNo x23 x24))) -> (forall x23, x23 :e int -> x2 x23 = x23) -> x3 = 2 -> x4 = 1 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x5 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x0 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x6 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x1 (x5 (add_SNo x23 (minus_SNo 1)) x24 x25) (x6 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x7 x23 = x5 (x2 x23) x3 x4) -> (forall x23, x23 :e int -> x8 x23 = add_SNo 1 (mul_SNo 2 (x7 x23))) -> (forall x23, x23 :e int -> x9 x23 = add_SNo x23 x23) -> (forall x23, x23 :e int -> x10 x23 = add_SNo x23 (minus_SNo 1)) -> x11 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x12 x23 x24 = If_i (SNoLe x23 0) x24 (x9 (x12 (add_SNo x23 (minus_SNo 1)) x24)))) -> (forall x23, x23 :e int -> x13 x23 = x12 (x10 x23) x11) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x14 x23 x24 = add_SNo x23 x24)) -> (forall x23, x23 :e int -> x15 x23 = x23) -> (forall x23, x23 :e int -> x16 x23 = add_SNo x23 (minus_SNo 1)) -> x17 = 1 -> x18 = 2 -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x19 x23 x24 x25 = If_i (SNoLe x23 0) x24 (x14 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25) (x20 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x20 x23 x24 x25 = If_i (SNoLe x23 0) x25 (x15 (x19 (add_SNo x23 (minus_SNo 1)) x24 x25))))) -> (forall x23, x23 :e int -> x21 x23 = x19 (x16 x23) x17 x18) -> (forall x23, x23 :e int -> x22 x23 = add_SNo (mul_SNo (mul_SNo 2 (x13 x23)) (x21 x23)) 1) -> (forall x23, x23 :e int -> SNoLe 0 x23 -> x8 x23 = x22 x23)))))))))))))))))))))))).
Admitted.
Theorem missingprop_bb1474e413c504e255221b574a0726bb68c3c624c24859bf3054a87c43b40349 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45) -> (forall x45, x45 :e int -> x1 x45 = x45) -> (forall x45, x45 :e int -> x2 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x3 x45 = x45) -> x4 = 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x5 x45 x46 = If_i (SNoLe x45 0) x46 (x2 (x5 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x6 x45 = x5 (x3 x45) x4) -> (forall x45, x45 :e int -> x7 x45 = add_SNo (x6 x45) (minus_SNo 1)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x8 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x9 x45 = x8 (x1 x45) (x7 x45)) -> (forall x45, x45 :e int -> x10 x45 = x9 x45) -> x11 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x12 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x14 x45 x46 = x13 x11 (x12 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x15 x45 x46 = add_SNo (x14 x45 x46) (mul_SNo 2 (add_SNo x45 x45)))) -> (forall x45, x45 :e int -> x16 x45 = x45) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x19 x45 = x18 (x16 x45) x17) -> (forall x45, x45 :e int -> x20 x45 = x19 x45) -> (forall x45, x45 :e int -> x21 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x22 x45 = x45) -> x23 = 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x24 x45 x46 = If_i (SNoLe x45 0) x46 (x21 (x24 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x25 x45 = x24 (x22 x45) x23) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x26 x45 x46 = mul_SNo x45 x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x27 x45 x46 = x46)) -> (forall x45, x45 :e int -> x28 x45 = x45) -> x29 = 1 -> x30 = add_SNo 1 (add_SNo 2 2) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x31 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x26 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x32 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x27 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x33 x45 = x31 (x28 x45) x29 x30) -> (forall x45, x45 :e int -> x34 x45 = mul_SNo (add_SNo (x25 x45) (minus_SNo 1)) (x33 x45)) -> x35 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x36 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x38 x45 x46 = x37 x35 (x36 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (x38 x45 x46) (mul_SNo 2 (add_SNo x45 x45)))) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x20 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
