Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
Theorem missingprop_3fdab5b9892ccef3a33487c2b936ea0bb203a46b58bc42bcd5189e8e647649f2 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13, x13 :e int -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x15 x16 x17 x18 :e int))) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x0 x18 x19 = add_SNo (mul_SNo 2 (add_SNo x18 x18)) (minus_SNo x19))) -> (forall x18, x18 :e int -> x1 x18 = x18) -> (forall x18, x18 :e int -> x2 x18 = x18) -> x3 = 1 -> x4 = 2 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x5 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x0 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20) (x6 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x6 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x1 (x5 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x7 x18 = x5 (x2 x18) x3 x4) -> (forall x18, x18 :e int -> x8 x18 = add_SNo (mul_SNo x18 (x7 x18)) x18) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x9 x18 x19 = add_SNo (mul_SNo 2 (add_SNo x18 x18)) (minus_SNo x19))) -> (forall x18, x18 :e int -> x10 x18 = x18) -> (forall x18, x18 :e int -> x11 x18 = add_SNo x18 (minus_SNo 1)) -> x12 = 2 -> x13 = 1 -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x14 x18 x19 x20 = If_i (SNoLe x18 0) x19 (x9 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20) (x15 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x15 x18 x19 x20 = If_i (SNoLe x18 0) x20 (x10 (x14 (add_SNo x18 (minus_SNo 1)) x19 x20))))) -> (forall x18, x18 :e int -> x16 x18 = x14 (x11 x18) x12 x13) -> (forall x18, x18 :e int -> x17 x18 = add_SNo (mul_SNo x18 (x16 x18)) x18) -> (forall x18, x18 :e int -> SNoLe 0 x18 -> x8 x18 = x17 x18))))))))))))))))))).
Admitted.
Theorem missingprop_59130d1022f8c6a65811adb2c641c13ce0d915efe73299d14a7326a92ca85e57 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16, x16 :e int -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = mul_SNo 2 (add_SNo (add_SNo x50 x50) x50)) -> (forall x50, x50 :e int -> x1 x50 = x50) -> (forall x50, x50 :e int -> x2 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x3 x50 = x50) -> x4 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x5 x50 x51 = If_i (SNoLe x50 0) x51 (x2 (x5 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x6 x50 = x5 (x3 x50) x4) -> (forall x50, x50 :e int -> x7 x50 = add_SNo (x6 x50) (minus_SNo 1)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x8 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x9 x50 = x8 (x1 x50) (x7 x50)) -> (forall x50, x50 :e int -> x10 x50 = x9 x50) -> x11 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x12 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x14 x50 x51 = x13 x11 (x12 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = mul_SNo (add_SNo 2 x51) x50)) -> x16 = 2 -> (forall x50, x50 :e int -> x17 x50 = x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x19 x50 = x18 x16 (x17 x50)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x20 x50 x51 = add_SNo (x14 x50 x51) (add_SNo (x19 x50) (minus_SNo x50)))) -> (forall x50, x50 :e int -> x21 x50 = x50) -> x22 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x23 x50 x51 = If_i (SNoLe x50 0) x51 (x20 (x23 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x24 x50 = x23 (x21 x50) x22) -> (forall x50, x50 :e int -> x25 x50 = x24 x50) -> (forall x50, x50 :e int -> x26 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x27 x50 = x50) -> x28 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x29 x50 x51 = If_i (SNoLe x50 0) x51 (x26 (x29 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x30 x50 = x29 (x27 x50) x28) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x31 x50 x51 = mul_SNo x50 x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x32 x50 x51 = x51)) -> (forall x50, x50 :e int -> x33 x50 = x50) -> x34 = 1 -> x35 = add_SNo 2 (add_SNo 2 2) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x36 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x31 (x36 (add_SNo x50 (minus_SNo 1)) x51 x52) (x37 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x37 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x32 (x36 (add_SNo x50 (minus_SNo 1)) x51 x52) (x37 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> x38 x50 = x36 (x33 x50) x34 x35) -> (forall x50, x50 :e int -> x39 x50 = mul_SNo (add_SNo (x30 x50) (minus_SNo 1)) (x38 x50)) -> x40 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x41 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x43 x50 x51 = x42 x40 (x41 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x44 x50 x51 = add_SNo (add_SNo (x43 x50 x51) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x50 x50)) x50))) x50)) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = x48 x50) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x25 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_a5279de6b5ad15ba4ec5491db1a168bc4cf51502a621db3b486ef976bb55b737 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = mul_SNo 2 (add_SNo (add_SNo x50 x50) x50)) -> (forall x50, x50 :e int -> x1 x50 = x50) -> (forall x50, x50 :e int -> x2 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x3 x50 = x50) -> x4 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x5 x50 x51 = If_i (SNoLe x50 0) x51 (x2 (x5 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x6 x50 = x5 (x3 x50) x4) -> (forall x50, x50 :e int -> x7 x50 = add_SNo (x6 x50) (minus_SNo 1)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x8 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x9 x50 = x8 (x1 x50) (x7 x50)) -> (forall x50, x50 :e int -> x10 x50 = x9 x50) -> x11 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x12 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x14 x50 x51 = x13 x11 (x12 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = add_SNo (x14 x50 x51) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x50 x50)) x50)))) -> (forall x50, x50 :e int -> x16 x50 = x50) -> x17 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x19 x50 = x18 (x16 x50) x17) -> (forall x50, x50 :e int -> x20 x50 = x19 x50) -> (forall x50, x50 :e int -> x21 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x22 x50 = x50) -> x23 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x24 x50 x51 = If_i (SNoLe x50 0) x51 (x21 (x24 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x25 x50 = x24 (x22 x50) x23) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x26 x50 x51 = mul_SNo x50 x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x27 x50 x51 = x51)) -> (forall x50, x50 :e int -> x28 x50 = x50) -> x29 = 1 -> x30 = add_SNo 1 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x31 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x26 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x32 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x27 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> x33 x50 = x31 (x28 x50) x29 x30) -> (forall x50, x50 :e int -> x34 x50 = mul_SNo (add_SNo (x25 x50) (minus_SNo 1)) (x33 x50)) -> x35 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x36 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x37 x50 x51 = If_i (SNoLe x50 0) x51 (x34 (x37 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x38 x50 x51 = x37 x35 (x36 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x39 x50 x51 = add_SNo (add_SNo (x38 x50 x51) (mul_SNo 2 (add_SNo x50 x50))) x50)) -> (forall x50, x50 :e int -> x40 x50 = x50) -> x41 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x43 x50 = x42 (x40 x50) x41) -> (forall x50, x50 :e int -> x44 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = mul_SNo (x43 x50) (x48 x50)) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x20 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_fa8c58ae1eeb47ccc3f8299bfbb36d07523e1b5df9f508c6f06aa53045484338 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31, x31 :e int -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x0 x45 x46 = mul_SNo (add_SNo 2 x46) x45)) -> x1 = 2 -> (forall x45, x45 :e int -> x2 x45 = x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x4 x45 = x3 x1 (x2 x45)) -> (forall x45, x45 :e int -> x5 x45 = add_SNo (x4 x45) (minus_SNo x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x6 x45 x46 = x46)) -> x7 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x8 (x6 x45 x46) x7)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = add_SNo (x9 x45 x46) (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x11 x45 x46 = x46)) -> x12 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x14 x45 x46 = x13 (x11 x45 x46) x12)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x15 x45 x46 = add_SNo (x14 x45 x46) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45)))) -> (forall x45, x45 :e int -> x16 x45 = x45) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x19 x45 = x18 (x16 x45) x17) -> (forall x45, x45 :e int -> x20 x45 = x19 x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x21 x45 x46 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45) x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x22 x45 x46 = add_SNo (add_SNo x46 x46) x46)) -> (forall x45, x45 :e int -> x23 x45 = x45) -> x24 = 1 -> x25 = add_SNo 1 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x26 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x21 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x27 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x22 (x26 (add_SNo x45 (minus_SNo 1)) x46 x47) (x27 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x28 x45 = x26 (x23 x45) x24 x25) -> (forall x45, x45 :e int -> x29 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x30 x45 = x45) -> x31 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x45 x46 = If_i (SNoLe x45 0) x46 (x29 (x32 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x33 x45 = x32 (x30 x45) x31) -> (forall x45, x45 :e int -> x34 x45 = mul_SNo (x28 x45) (x33 x45)) -> x35 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x36 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x38 x45 x46 = x37 x35 (x36 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (add_SNo (x38 x45 x46) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45))) x45)) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x20 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_373d6d46c4b360f77cad1e73b2907d70ab39893ce96d9ed09413ab9d813392da : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo x17 x17) -> x2 = add_SNo 1 (add_SNo 2 2) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = mul_SNo 2 (x4 x17)) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo x17 x17) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = mul_SNo 2 (mul_SNo (add_SNo 1 (add_SNo 2 2)) (x15 x17))) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_94d3895279e04b5c85fe8c273eea68688db797d030d7c39f06f421b95a4074e9 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44, x44 :e int -> (forall x45 : set -> set -> set, (forall x46, x46 :e int -> (forall x47, x47 :e int -> x45 x46 x47 :e int)) -> (forall x46 : set -> set, (forall x47, x47 :e int -> x46 x47 :e int) -> (forall x47 : set -> set, (forall x48, x48 :e int -> x47 x48 :e int) -> (forall x48, x48 :e int -> x0 x48 = add_SNo (add_SNo x48 x48) x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x1 x48 x49 = add_SNo x49 x49)) -> x2 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x3 x48 x49 = If_i (SNoLe x48 0) x49 (x0 (x3 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x4 x48 x49 = x3 (x1 x48 x49) x2)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x5 x48 x49 = mul_SNo (add_SNo 2 x49) x48)) -> x6 = 2 -> (forall x48, x48 :e int -> x7 x48 = x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x8 x48 x49 = If_i (SNoLe x48 0) x49 (x5 (x8 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x9 x48 = x8 x6 (x7 x48)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x10 x48 x49 = add_SNo (x4 x48 x49) (add_SNo (x9 x48) (minus_SNo x48)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x11 x48 x49 = x49)) -> x12 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x13 x48 x49 = If_i (SNoLe x48 0) x49 (x10 (x13 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x14 x48 x49 = x13 (x11 x48 x49) x12)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x15 x48 x49 = add_SNo (x14 x48 x49) (mul_SNo 2 (add_SNo (add_SNo x48 x48) x48)))) -> (forall x48, x48 :e int -> x16 x48 = x48) -> x17 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x18 x48 x49 = If_i (SNoLe x48 0) x49 (x15 (x18 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x19 x48 = x18 (x16 x48) x17) -> (forall x48, x48 :e int -> x20 x48 = x19 x48) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x21 x48 x49 = add_SNo (add_SNo (add_SNo x48 x48) x48) x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x22 x48 x49 = add_SNo x49 x49)) -> (forall x48, x48 :e int -> x23 x48 = x48) -> x24 = 1 -> x25 = 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x26 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x21 (x26 (add_SNo x48 (minus_SNo 1)) x49 x50) (x27 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x27 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x22 (x26 (add_SNo x48 (minus_SNo 1)) x49 x50) (x27 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x28 x48 = x26 (x23 x48) x24 x25) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x29 x48 x49 = mul_SNo x48 x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x30 x48 x49 = x49)) -> (forall x48, x48 :e int -> x31 x48 = x48) -> x32 = 1 -> x33 = add_SNo 1 2 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x34 x48 x49 x50 = If_i (SNoLe x48 0) x49 (x29 (x34 (add_SNo x48 (minus_SNo 1)) x49 x50) (x35 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> (forall x50, x50 :e int -> x35 x48 x49 x50 = If_i (SNoLe x48 0) x50 (x30 (x34 (add_SNo x48 (minus_SNo 1)) x49 x50) (x35 (add_SNo x48 (minus_SNo 1)) x49 x50))))) -> (forall x48, x48 :e int -> x36 x48 = x34 (x31 x48) x32 x33) -> (forall x48, x48 :e int -> x37 x48 = mul_SNo (x28 x48) (x36 x48)) -> x38 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x39 x48 x49 = x49)) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x40 x48 x49 = If_i (SNoLe x48 0) x49 (x37 (x40 (add_SNo x48 (minus_SNo 1)) x49)))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x41 x48 x49 = x40 x38 (x39 x48 x49))) -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x42 x48 x49 = add_SNo (add_SNo (x41 x48 x49) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x48 x48)) x48))) x48)) -> (forall x48, x48 :e int -> x43 x48 = x48) -> x44 = 1 -> (forall x48, x48 :e int -> (forall x49, x49 :e int -> x45 x48 x49 = If_i (SNoLe x48 0) x49 (x42 (x45 (add_SNo x48 (minus_SNo 1)) x49) x48))) -> (forall x48, x48 :e int -> x46 x48 = x45 (x43 x48) x44) -> (forall x48, x48 :e int -> x47 x48 = x46 x48) -> (forall x48, x48 :e int -> SNoLe 0 x48 -> x20 x48 = x47 x48))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_36b2ca0d790a2f250884f4c8648d16308a248d5575f2d3b5a67fdcbd16104896 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> x0 x43 = add_SNo (add_SNo x43 x43) x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x1 x43 x44 = add_SNo x44 x44)) -> x2 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x3 x43 x44 = If_i (SNoLe x43 0) x44 (x0 (x3 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x4 x43 x44 = x3 (x1 x43 x44) x2)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x5 x43 x44 = add_SNo (x4 x43 x44) (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x6 x43 x44 = x44)) -> x7 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x8 x43 x44 = If_i (SNoLe x43 0) x44 (x5 (x8 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x9 x43 x44 = x8 (x6 x43 x44) x7)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x10 x43 x44 = add_SNo (x9 x43 x44) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x43 x43)) x43)))) -> (forall x43, x43 :e int -> x11 x43 = x43) -> x12 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x13 x43 x44 = If_i (SNoLe x43 0) x44 (x10 (x13 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x14 x43 = x13 (x11 x43) x12) -> (forall x43, x43 :e int -> x15 x43 = x14 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x16 x43 x44 = add_SNo (add_SNo (add_SNo x43 x43) x43) x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x17 x43 x44 = add_SNo x44 x44)) -> (forall x43, x43 :e int -> x18 x43 = x43) -> x19 = 1 -> x20 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x21 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x16 (x21 (add_SNo x43 (minus_SNo 1)) x44 x45) (x22 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x22 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x17 (x21 (add_SNo x43 (minus_SNo 1)) x44 x45) (x22 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x23 x43 = x21 (x18 x43) x19 x20) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x24 x43 x44 = mul_SNo x43 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x25 x43 x44 = x44)) -> (forall x43, x43 :e int -> x26 x43 = x43) -> x27 = 1 -> x28 = add_SNo 1 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x29 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x24 (x29 (add_SNo x43 (minus_SNo 1)) x44 x45) (x30 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x30 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x25 (x29 (add_SNo x43 (minus_SNo 1)) x44 x45) (x30 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x31 x43 = x29 (x26 x43) x27 x28) -> (forall x43, x43 :e int -> x32 x43 = mul_SNo (x23 x43) (x31 x43)) -> x33 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x34 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x35 x43 x44 = If_i (SNoLe x43 0) x44 (x32 (x35 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x36 x43 x44 = x35 x33 (x34 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x37 x43 x44 = add_SNo (x36 x43 x44) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x43 x43)) x43)))) -> (forall x43, x43 :e int -> x38 x43 = x43) -> x39 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x37 (x40 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x41 x43 = x40 (x38 x43) x39) -> (forall x43, x43 :e int -> x42 x43 = x41 x43) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x15 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b46521da7784266c63b1a9ba1a883c9bf2be6167407119e80fbbc7923a078e8c : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = mul_SNo 2 (add_SNo (add_SNo x50 x50) x50)) -> (forall x50, x50 :e int -> x1 x50 = x50) -> (forall x50, x50 :e int -> x2 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x3 x50 = x50) -> x4 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x5 x50 x51 = If_i (SNoLe x50 0) x51 (x2 (x5 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x6 x50 = x5 (x3 x50) x4) -> (forall x50, x50 :e int -> x7 x50 = add_SNo (x6 x50) (minus_SNo 1)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x8 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x9 x50 = x8 (x1 x50) (x7 x50)) -> (forall x50, x50 :e int -> x10 x50 = x9 x50) -> x11 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x12 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x14 x50 x51 = x13 x11 (x12 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = add_SNo (x14 x50 x51) (mul_SNo 2 (mul_SNo 2 (add_SNo x50 x50))))) -> (forall x50, x50 :e int -> x16 x50 = x50) -> x17 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x19 x50 = x18 (x16 x50) x17) -> (forall x50, x50 :e int -> x20 x50 = x19 x50) -> (forall x50, x50 :e int -> x21 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x22 x50 = x50) -> x23 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x24 x50 x51 = If_i (SNoLe x50 0) x51 (x21 (x24 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x25 x50 = x24 (x22 x50) x23) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x26 x50 x51 = mul_SNo x50 x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x27 x50 x51 = x51)) -> (forall x50, x50 :e int -> x28 x50 = x50) -> x29 = 1 -> x30 = add_SNo 1 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x31 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x26 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x32 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x27 (x31 (add_SNo x50 (minus_SNo 1)) x51 x52) (x32 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> x33 x50 = x31 (x28 x50) x29 x30) -> (forall x50, x50 :e int -> x34 x50 = mul_SNo (add_SNo (x25 x50) (minus_SNo 1)) (x33 x50)) -> x35 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x36 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x37 x50 x51 = If_i (SNoLe x50 0) x51 (x34 (x37 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x38 x50 x51 = x37 x35 (x36 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x39 x50 x51 = add_SNo (x38 x50 x51) (mul_SNo 2 (add_SNo x50 x50)))) -> (forall x50, x50 :e int -> x40 x50 = x50) -> x41 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x43 x50 = x42 (x40 x50) x41) -> (forall x50, x50 :e int -> x44 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = mul_SNo (x43 x50) (x48 x50)) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x20 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_30348b26788590c6deaf1e914b16035d5517a83f23b034dd93dd10623cf5a460 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2 : set -> set -> set, (forall x3, x3 :e int -> (forall x4, x4 :e int -> x2 x3 x4 :e int)) -> (forall x3, x3 :e int -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> (forall x8, x8 :e int -> x5 x6 x7 x8 :e int))) -> (forall x6 : set -> set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> (forall x9, x9 :e int -> x6 x7 x8 x9 :e int))) -> (forall x7 : set -> set -> set, (forall x8, x8 :e int -> (forall x9, x9 :e int -> x7 x8 x9 :e int)) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x0 x43 x44 = add_SNo (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43)) (mul_SNo (mul_SNo x44 x44) x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x1 x43 x44 = add_SNo x44 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x2 x43 x44 = x44)) -> x3 = 1 -> x4 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x5 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x0 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x6 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x1 (x5 (add_SNo x43 (minus_SNo 1)) x44 x45) (x6 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x7 x43 x44 = x5 (x2 x43 x44) x3 x4)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x8 x43 x44 = mul_SNo (add_SNo 2 x44) x43)) -> x9 = 2 -> (forall x43, x43 :e int -> x10 x43 = x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x11 x43 x44 = If_i (SNoLe x43 0) x44 (x8 (x11 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x12 x43 = x11 x9 (x10 x43)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x13 x43 x44 = add_SNo (add_SNo (x7 x43 x44) (minus_SNo x43)) (x12 x43))) -> (forall x43, x43 :e int -> x14 x43 = x43) -> x15 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x16 x43 x44 = If_i (SNoLe x43 0) x44 (x13 (x16 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x17 x43 = x16 (x14 x43) x15) -> (forall x43, x43 :e int -> x18 x43 = x17 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x19 x43 x44 = add_SNo (add_SNo (add_SNo (mul_SNo x44 x44) x43) x43) x43)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x20 x43 x44 = add_SNo x44 x44)) -> (forall x43, x43 :e int -> x21 x43 = x43) -> x22 = 1 -> x23 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x24 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x19 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x25 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x20 (x24 (add_SNo x43 (minus_SNo 1)) x44 x45) (x25 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x26 x43 = x24 (x21 x43) x22 x23) -> (forall x43, x43 :e int -> x27 x43 = add_SNo x43 x43) -> (forall x43, x43 :e int -> x28 x43 = add_SNo x43 (minus_SNo 1)) -> x29 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x30 x43 x44 = If_i (SNoLe x43 0) x44 (x27 (x30 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> x31 x43 = x30 (x28 x43) x29) -> (forall x43, x43 :e int -> x32 x43 = mul_SNo (x26 x43) (x31 x43)) -> x33 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x34 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x35 x43 x44 = If_i (SNoLe x43 0) x44 (x32 (x35 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x36 x43 x44 = x35 x33 (x34 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x37 x43 x44 = add_SNo (add_SNo (x36 x43 x44) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x43 x43)) x43))) x43)) -> (forall x43, x43 :e int -> x38 x43 = x43) -> x39 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x37 (x40 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x41 x43 = x40 (x38 x43) x39) -> (forall x43, x43 :e int -> x42 x43 = x41 x43) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x18 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_94fe889a821080980b057620cce0b9f1bf7e6d68c3148a09ca0e89d086178865 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = add_SNo (add_SNo x45 x45) x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x1 x45 x46 = add_SNo x46 x46)) -> x2 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x4 x45 x46 = x3 (x1 x45 x46) x2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x5 x45 x46 = add_SNo (x4 x45 x46) (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x6 x45 x46 = x46)) -> x7 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x8 (x6 x45 x46) x7)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = add_SNo (x9 x45 x46) (mul_SNo 2 (mul_SNo 2 (add_SNo x45 x45))))) -> (forall x45, x45 :e int -> x11 x45 = x45) -> x12 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x14 x45 = x13 (x11 x45) x12) -> (forall x45, x45 :e int -> x15 x45 = x14 x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x16 x45 x46 = mul_SNo x45 x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x17 x45 x46 = x46)) -> (forall x45, x45 :e int -> x18 x45 = add_SNo 1 x45) -> x19 = 1 -> x20 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x21 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x16 (x21 (add_SNo x45 (minus_SNo 1)) x46 x47) (x22 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x22 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x17 (x21 (add_SNo x45 (minus_SNo 1)) x46 x47) (x22 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x23 x45 = x21 (x18 x45) x19 x20) -> (forall x45, x45 :e int -> x24 x45 = mul_SNo (mul_SNo x45 x45) x45) -> x25 = 1 -> (forall x45, x45 :e int -> x26 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x27 x45 = x45) -> x28 = 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x29 x45 x46 = If_i (SNoLe x45 0) x46 (x26 (x29 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x30 x45 = x29 (x27 x45) x28) -> (forall x45, x45 :e int -> x31 x45 = x30 x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x32 x45 x46 = If_i (SNoLe x45 0) x46 (x24 (x32 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x33 x45 = x32 x25 (x31 x45)) -> (forall x45, x45 :e int -> x34 x45 = add_SNo (x23 x45) (minus_SNo (x33 x45))) -> x35 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x36 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x38 x45 x46 = x37 x35 (x36 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (add_SNo (add_SNo (add_SNo (add_SNo (add_SNo (x38 x45 x46) x45) x45) x45) x45) x45) x45)) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x15 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b9e30e944f839d79e9be05b333d7c5914de2972c32d5b756e3159f3b9b8ff781 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set, (forall x23, x23 :e int -> x22 x23 :e int) -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> x0 x45 = mul_SNo 2 (add_SNo (add_SNo x45 x45) x45)) -> (forall x45, x45 :e int -> x1 x45 = x45) -> (forall x45, x45 :e int -> x2 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x3 x45 = x45) -> x4 = 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x5 x45 x46 = If_i (SNoLe x45 0) x46 (x2 (x5 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x6 x45 = x5 (x3 x45) x4) -> (forall x45, x45 :e int -> x7 x45 = add_SNo (x6 x45) (minus_SNo 1)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x8 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x9 x45 = x8 (x1 x45) (x7 x45)) -> (forall x45, x45 :e int -> x10 x45 = x9 x45) -> x11 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x12 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x14 x45 x46 = x13 x11 (x12 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x15 x45 x46 = add_SNo (add_SNo (x14 x45 x46) (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45))) x45)) -> (forall x45, x45 :e int -> x16 x45 = x45) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x19 x45 = x18 (x16 x45) x17) -> (forall x45, x45 :e int -> x20 x45 = x19 x45) -> (forall x45, x45 :e int -> x21 x45 = add_SNo x45 x45) -> (forall x45, x45 :e int -> x22 x45 = x45) -> x23 = 2 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x24 x45 x46 = If_i (SNoLe x45 0) x46 (x21 (x24 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> x25 x45 = x24 (x22 x45) x23) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x26 x45 x46 = mul_SNo x45 x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x27 x45 x46 = x46)) -> (forall x45, x45 :e int -> x28 x45 = x45) -> x29 = 1 -> x30 = add_SNo 2 (add_SNo 2 2) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x31 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x26 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x32 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x27 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x33 x45 = x31 (x28 x45) x29 x30) -> (forall x45, x45 :e int -> x34 x45 = mul_SNo (add_SNo (x25 x45) (minus_SNo 1)) (x33 x45)) -> x35 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x36 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x38 x45 x46 = x37 x35 (x36 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (add_SNo (x38 x45 x46) (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45))) x45)) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x20 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_438533a2b581dabda0696217b2380b27ff11d2d729da183e7b1090b9c12a7e98 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x0 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x1 = 2 -> (forall x40, x40 :e int -> x2 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x4 x40 = x3 x1 (x2 x40)) -> (forall x40, x40 :e int -> x5 x40 = add_SNo (x4 x40) (minus_SNo x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (x14 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (mul_SNo (add_SNo 1 2) (add_SNo (add_SNo x40 x40) x41)) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = mul_SNo 2 (add_SNo (add_SNo x41 x41) x41))) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) x40) (mul_SNo (add_SNo (mul_SNo (add_SNo x40 x40) 2) x40) 2))) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_4c79ec2b43db84a54c3f8938b9dd6aba31a838578c4ac01bc611a84d186f45a7 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26, x26 :e int -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> x0 x40 = mul_SNo 2 (add_SNo (add_SNo x40 x40) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x1 x40 x41 = x41)) -> x2 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x4 x40 x41 = x3 (x1 x40 x41) x2)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x5 x40 x41 = add_SNo (x4 x40 x41) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x6 x40 x41 = x41)) -> x7 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x9 x40 x41 = x8 (x6 x40 x41) x7)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (add_SNo (x9 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) x40)) -> (forall x40, x40 :e int -> x11 x40 = x40) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x14 x40 = x13 (x11 x40) x12) -> (forall x40, x40 :e int -> x15 x40 = x14 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x16 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x40 x40)) x40) x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x17 x40 x41 = add_SNo (add_SNo x41 x41) x41)) -> (forall x40, x40 :e int -> x18 x40 = x40) -> x19 = 1 -> x20 = add_SNo 1 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x21 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x16 (x21 (add_SNo x40 (minus_SNo 1)) x41 x42) (x22 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x22 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x17 (x21 (add_SNo x40 (minus_SNo 1)) x41 x42) (x22 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x23 x40 = x21 (x18 x40) x19 x20) -> (forall x40, x40 :e int -> x24 x40 = add_SNo x40 x40) -> (forall x40, x40 :e int -> x25 x40 = x40) -> x26 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x27 x40 x41 = If_i (SNoLe x40 0) x41 (x24 (x27 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> x28 x40 = x27 (x25 x40) x26) -> (forall x40, x40 :e int -> x29 x40 = mul_SNo (x23 x40) (x28 x40)) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (add_SNo (x33 x40 x41) (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))) x40)) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x15 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f191347cc03b45a39127a02984f1d540469b48d3bc89d2ad2ea7c1183163bbef : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39, x39 :e int -> (forall x40 : set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> x40 x41 x42 :e int)) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43, x43 :e int -> x0 x43 = add_SNo (add_SNo x43 x43) x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x1 x43 x44 = add_SNo x44 x44)) -> x2 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x3 x43 x44 = If_i (SNoLe x43 0) x44 (x0 (x3 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x4 x43 x44 = x3 (x1 x43 x44) x2)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x5 x43 x44 = add_SNo (x4 x43 x44) (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x6 x43 x44 = x44)) -> x7 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x8 x43 x44 = If_i (SNoLe x43 0) x44 (x5 (x8 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x9 x43 x44 = x8 (x6 x43 x44) x7)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x10 x43 x44 = add_SNo (add_SNo (x9 x43 x44) (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43))) x43)) -> (forall x43, x43 :e int -> x11 x43 = x43) -> x12 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x13 x43 x44 = If_i (SNoLe x43 0) x44 (x10 (x13 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x14 x43 = x13 (x11 x43) x12) -> (forall x43, x43 :e int -> x15 x43 = x14 x43) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x16 x43 x44 = add_SNo (add_SNo (add_SNo x43 x43) x43) x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x17 x43 x44 = add_SNo x44 x44)) -> (forall x43, x43 :e int -> x18 x43 = x43) -> x19 = 1 -> x20 = 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x21 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x16 (x21 (add_SNo x43 (minus_SNo 1)) x44 x45) (x22 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x22 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x17 (x21 (add_SNo x43 (minus_SNo 1)) x44 x45) (x22 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x23 x43 = x21 (x18 x43) x19 x20) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x24 x43 x44 = mul_SNo x43 x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x25 x43 x44 = x44)) -> (forall x43, x43 :e int -> x26 x43 = x43) -> x27 = 1 -> x28 = add_SNo 1 2 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x29 x43 x44 x45 = If_i (SNoLe x43 0) x44 (x24 (x29 (add_SNo x43 (minus_SNo 1)) x44 x45) (x30 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> (forall x45, x45 :e int -> x30 x43 x44 x45 = If_i (SNoLe x43 0) x45 (x25 (x29 (add_SNo x43 (minus_SNo 1)) x44 x45) (x30 (add_SNo x43 (minus_SNo 1)) x44 x45))))) -> (forall x43, x43 :e int -> x31 x43 = x29 (x26 x43) x27 x28) -> (forall x43, x43 :e int -> x32 x43 = mul_SNo (x23 x43) (x31 x43)) -> x33 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x34 x43 x44 = x44)) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x35 x43 x44 = If_i (SNoLe x43 0) x44 (x32 (x35 (add_SNo x43 (minus_SNo 1)) x44)))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x36 x43 x44 = x35 x33 (x34 x43 x44))) -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x37 x43 x44 = add_SNo (add_SNo (x36 x43 x44) (mul_SNo 2 (add_SNo (add_SNo x43 x43) x43))) x43)) -> (forall x43, x43 :e int -> x38 x43 = x43) -> x39 = 1 -> (forall x43, x43 :e int -> (forall x44, x44 :e int -> x40 x43 x44 = If_i (SNoLe x43 0) x44 (x37 (x40 (add_SNo x43 (minus_SNo 1)) x44) x43))) -> (forall x43, x43 :e int -> x41 x43 = x40 (x38 x43) x39) -> (forall x43, x43 :e int -> x42 x43 = x41 x43) -> (forall x43, x43 :e int -> SNoLe 0 x43 -> x15 x43 = x42 x43)))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_9cd0431fcfda279e461473d05b84957d883324c8142ec354756cb3cebf7f2df7 : (forall x0 : set -> set -> set, (forall x1, x1 :e int -> (forall x2, x2 :e int -> x0 x1 x2 :e int)) -> (forall x1, x1 :e int -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set -> set, (forall x7, x7 :e int -> (forall x8, x8 :e int -> x6 x7 x8 :e int)) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11, x11 :e int -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> x36 x37 x38 :e int)) -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> x39 x40 x41 :e int)) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set, (forall x44, x44 :e int -> x43 x44 :e int) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x0 x45 x46 = mul_SNo (add_SNo 2 x46) x45)) -> x1 = 2 -> (forall x45, x45 :e int -> x2 x45 = x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x3 x45 x46 = If_i (SNoLe x45 0) x46 (x0 (x3 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x4 x45 = x3 x1 (x2 x45)) -> (forall x45, x45 :e int -> x5 x45 = add_SNo (x4 x45) (minus_SNo x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x6 x45 x46 = x46)) -> x7 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x8 x45 x46 = If_i (SNoLe x45 0) x46 (x5 (x8 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x9 x45 x46 = x8 (x6 x45 x46) x7)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x10 x45 x46 = mul_SNo (add_SNo 2 x46) x45)) -> x11 = 2 -> (forall x45, x45 :e int -> x12 x45 = x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x13 x45 x46 = If_i (SNoLe x45 0) x46 (x10 (x13 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x14 x45 = x13 x11 (x12 x45)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x15 x45 x46 = add_SNo (x9 x45 x46) (x14 x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x16 x45 x46 = x46)) -> x17 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x18 x45 x46 = If_i (SNoLe x45 0) x46 (x15 (x18 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x19 x45 x46 = x18 (x16 x45 x46) x17)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x20 x45 x46 = add_SNo (add_SNo (x19 x45 x46) (mul_SNo 2 (add_SNo x45 x45))) x45)) -> (forall x45, x45 :e int -> x21 x45 = x45) -> x22 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x23 x45 x46 = If_i (SNoLe x45 0) x46 (x20 (x23 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x24 x45 = x23 (x21 x45) x22) -> (forall x45, x45 :e int -> x25 x45 = x24 x45) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x26 x45 x46 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo (add_SNo x45 x45) x45))) x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x27 x45 x46 = add_SNo (mul_SNo 2 (add_SNo x46 x46)) x46)) -> (forall x45, x45 :e int -> x28 x45 = x45) -> x29 = 1 -> x30 = add_SNo 1 (add_SNo 2 2) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x31 x45 x46 x47 = If_i (SNoLe x45 0) x46 (x26 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x32 x45 x46 x47 = If_i (SNoLe x45 0) x47 (x27 (x31 (add_SNo x45 (minus_SNo 1)) x46 x47) (x32 (add_SNo x45 (minus_SNo 1)) x46 x47))))) -> (forall x45, x45 :e int -> x33 x45 = x31 (x28 x45) x29 x30) -> (forall x45, x45 :e int -> x34 x45 = x33 x45) -> x35 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x36 x45 x46 = x46)) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x37 x45 x46 = If_i (SNoLe x45 0) x46 (x34 (x37 (add_SNo x45 (minus_SNo 1)) x46)))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x38 x45 x46 = x37 x35 (x36 x45 x46))) -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x39 x45 x46 = add_SNo (add_SNo (x38 x45 x46) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x45 x45)) x45))) x45)) -> (forall x45, x45 :e int -> x40 x45 = x45) -> x41 = 1 -> (forall x45, x45 :e int -> (forall x46, x46 :e int -> x42 x45 x46 = If_i (SNoLe x45 0) x46 (x39 (x42 (add_SNo x45 (minus_SNo 1)) x46) x45))) -> (forall x45, x45 :e int -> x43 x45 = x42 (x40 x45) x41) -> (forall x45, x45 :e int -> x44 x45 = x43 x45) -> (forall x45, x45 :e int -> SNoLe 0 x45 -> x25 x45 = x44 x45)))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_d00af47a0ba31b511fb8b72c0d4c9f31ab2784b660d82d947118f6fba73969d3 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16, x16 :e int -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = add_SNo (mul_SNo 2 (add_SNo x50 x50)) x50) -> (forall x50, x50 :e int -> x1 x50 = x50) -> (forall x50, x50 :e int -> x2 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x3 x50 = x50) -> x4 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x5 x50 x51 = If_i (SNoLe x50 0) x51 (x2 (x5 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x6 x50 = x5 (x3 x50) x4) -> (forall x50, x50 :e int -> x7 x50 = add_SNo (x6 x50) (minus_SNo 1)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x8 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x9 x50 = x8 (x1 x50) (x7 x50)) -> (forall x50, x50 :e int -> x10 x50 = x9 x50) -> x11 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x12 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x14 x50 x51 = x13 x11 (x12 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = mul_SNo (add_SNo 2 x51) x50)) -> x16 = 2 -> (forall x50, x50 :e int -> x17 x50 = x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x19 x50 = x18 x16 (x17 x50)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x20 x50 x51 = add_SNo (x14 x50 x51) (x19 x50))) -> (forall x50, x50 :e int -> x21 x50 = x50) -> x22 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x23 x50 x51 = If_i (SNoLe x50 0) x51 (x20 (x23 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x24 x50 = x23 (x21 x50) x22) -> (forall x50, x50 :e int -> x25 x50 = x24 x50) -> (forall x50, x50 :e int -> x26 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x27 x50 = x50) -> x28 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x29 x50 x51 = If_i (SNoLe x50 0) x51 (x26 (x29 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x30 x50 = x29 (x27 x50) x28) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x31 x50 x51 = mul_SNo x50 x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x32 x50 x51 = x51)) -> (forall x50, x50 :e int -> x33 x50 = x50) -> x34 = 1 -> x35 = add_SNo 1 (add_SNo 2 2) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x36 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x31 (x36 (add_SNo x50 (minus_SNo 1)) x51 x52) (x37 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x37 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x32 (x36 (add_SNo x50 (minus_SNo 1)) x51 x52) (x37 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> x38 x50 = x36 (x33 x50) x34 x35) -> (forall x50, x50 :e int -> x39 x50 = mul_SNo (add_SNo (x30 x50) (minus_SNo 1)) (x38 x50)) -> x40 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x41 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x43 x50 x51 = x42 x40 (x41 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x44 x50 x51 = add_SNo (x43 x50 x51) (mul_SNo 2 (mul_SNo 2 (add_SNo (add_SNo x50 x50) x50))))) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = x48 x50) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x25 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_94491f710970d1519461f1453db52c69e78de4ba83f4d5b7e7738e622f2eac31 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16, x16 :e int -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> x23 x24 x25 :e int)) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> (forall x36 : set -> set -> set -> set, (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x36 x37 x38 x39 :e int))) -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> (forall x41 : set -> set -> set, (forall x42, x42 :e int -> (forall x43, x43 :e int -> x41 x42 x43 :e int)) -> (forall x42 : set -> set -> set, (forall x43, x43 :e int -> (forall x44, x44 :e int -> x42 x43 x44 :e int)) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set -> set, (forall x45, x45 :e int -> (forall x46, x46 :e int -> x44 x45 x46 :e int)) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> (forall x47 : set -> set -> set, (forall x48, x48 :e int -> (forall x49, x49 :e int -> x47 x48 x49 :e int)) -> (forall x48 : set -> set, (forall x49, x49 :e int -> x48 x49 :e int) -> (forall x49 : set -> set, (forall x50, x50 :e int -> x49 x50 :e int) -> (forall x50, x50 :e int -> x0 x50 = add_SNo (mul_SNo 2 (add_SNo x50 x50)) x50) -> (forall x50, x50 :e int -> x1 x50 = x50) -> (forall x50, x50 :e int -> x2 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x3 x50 = x50) -> x4 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x5 x50 x51 = If_i (SNoLe x50 0) x51 (x2 (x5 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x6 x50 = x5 (x3 x50) x4) -> (forall x50, x50 :e int -> x7 x50 = add_SNo (x6 x50) (minus_SNo 1)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x8 x50 x51 = If_i (SNoLe x50 0) x51 (x0 (x8 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x9 x50 = x8 (x1 x50) (x7 x50)) -> (forall x50, x50 :e int -> x10 x50 = x9 x50) -> x11 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x12 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x13 x50 x51 = If_i (SNoLe x50 0) x51 (x10 (x13 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x14 x50 x51 = x13 x11 (x12 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x15 x50 x51 = mul_SNo (add_SNo 2 x51) x50)) -> x16 = 2 -> (forall x50, x50 :e int -> x17 x50 = x50) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x18 x50 x51 = If_i (SNoLe x50 0) x51 (x15 (x18 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x19 x50 = x18 x16 (x17 x50)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x20 x50 x51 = add_SNo (x14 x50 x51) (add_SNo (x19 x50) (minus_SNo x50)))) -> (forall x50, x50 :e int -> x21 x50 = x50) -> x22 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x23 x50 x51 = If_i (SNoLe x50 0) x51 (x20 (x23 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x24 x50 = x23 (x21 x50) x22) -> (forall x50, x50 :e int -> x25 x50 = x24 x50) -> (forall x50, x50 :e int -> x26 x50 = add_SNo x50 x50) -> (forall x50, x50 :e int -> x27 x50 = x50) -> x28 = 2 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x29 x50 x51 = If_i (SNoLe x50 0) x51 (x26 (x29 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> x30 x50 = x29 (x27 x50) x28) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x31 x50 x51 = mul_SNo x50 x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x32 x50 x51 = x51)) -> (forall x50, x50 :e int -> x33 x50 = x50) -> x34 = 1 -> x35 = add_SNo 1 (add_SNo 2 2) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x36 x50 x51 x52 = If_i (SNoLe x50 0) x51 (x31 (x36 (add_SNo x50 (minus_SNo 1)) x51 x52) (x37 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> (forall x52, x52 :e int -> x37 x50 x51 x52 = If_i (SNoLe x50 0) x52 (x32 (x36 (add_SNo x50 (minus_SNo 1)) x51 x52) (x37 (add_SNo x50 (minus_SNo 1)) x51 x52))))) -> (forall x50, x50 :e int -> x38 x50 = x36 (x33 x50) x34 x35) -> (forall x50, x50 :e int -> x39 x50 = mul_SNo (add_SNo (x30 x50) (minus_SNo 1)) (x38 x50)) -> x40 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x41 x50 x51 = x51)) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x42 x50 x51 = If_i (SNoLe x50 0) x51 (x39 (x42 (add_SNo x50 (minus_SNo 1)) x51)))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x43 x50 x51 = x42 x40 (x41 x50 x51))) -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x44 x50 x51 = add_SNo (add_SNo (x43 x50 x51) (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x50 x50)) x50))) x50)) -> (forall x50, x50 :e int -> x45 x50 = x50) -> x46 = 1 -> (forall x50, x50 :e int -> (forall x51, x51 :e int -> x47 x50 x51 = If_i (SNoLe x50 0) x51 (x44 (x47 (add_SNo x50 (minus_SNo 1)) x51) x50))) -> (forall x50, x50 :e int -> x48 x50 = x47 (x45 x50) x46) -> (forall x50, x50 :e int -> x49 x50 = x48 x50) -> (forall x50, x50 :e int -> SNoLe 0 x50 -> x25 x50 = x49 x50))))))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f0be7317c5e1723f106c07ddfddaa264ccb035adc1421b36aaa3158652b78db7 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set -> set, (forall x2, x2 :e int -> (forall x3, x3 :e int -> x1 x2 x3 :e int)) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6, x6 :e int -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set -> set, (forall x11, x11 :e int -> (forall x12, x12 :e int -> x10 x11 x12 :e int)) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set -> set, (forall x16, x16 :e int -> (forall x17, x17 :e int -> x15 x16 x17 :e int)) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> x37 x38 x39 :e int)) -> (forall x38 : set -> set, (forall x39, x39 :e int -> x38 x39 :e int) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40, x40 :e int -> x0 x40 = add_SNo (add_SNo x40 x40) x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x1 x40 x41 = add_SNo x41 x41)) -> x2 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x3 x40 x41 = If_i (SNoLe x40 0) x41 (x0 (x3 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x4 x40 x41 = x3 (x1 x40 x41) x2)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x5 x40 x41 = mul_SNo (add_SNo 2 x41) x40)) -> x6 = 2 -> (forall x40, x40 :e int -> x7 x40 = x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x8 x40 x41 = If_i (SNoLe x40 0) x41 (x5 (x8 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x9 x40 = x8 x6 (x7 x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x10 x40 x41 = add_SNo (x4 x40 x41) (x9 x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x11 x40 x41 = x41)) -> x12 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x13 x40 x41 = If_i (SNoLe x40 0) x41 (x10 (x13 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x14 x40 x41 = x13 (x11 x40 x41) x12)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x15 x40 x41 = add_SNo (add_SNo (x14 x40 x41) (mul_SNo 2 (add_SNo x40 x40))) x40)) -> (forall x40, x40 :e int -> x16 x40 = x40) -> x17 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x18 x40 x41 = If_i (SNoLe x40 0) x41 (x15 (x18 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x19 x40 = x18 (x16 x40) x17) -> (forall x40, x40 :e int -> x20 x40 = x19 x40) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x21 x40 x41 = add_SNo (add_SNo (mul_SNo 2 (add_SNo x40 x40)) (mul_SNo x41 x41)) x40)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x22 x40 x41 = add_SNo (add_SNo x41 x41) x41)) -> (forall x40, x40 :e int -> x23 x40 = x40) -> x24 = 1 -> x25 = add_SNo 1 2 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x26 x40 x41 x42 = If_i (SNoLe x40 0) x41 (x21 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x27 x40 x41 x42 = If_i (SNoLe x40 0) x42 (x22 (x26 (add_SNo x40 (minus_SNo 1)) x41 x42) (x27 (add_SNo x40 (minus_SNo 1)) x41 x42))))) -> (forall x40, x40 :e int -> x28 x40 = x26 (x23 x40) x24 x25) -> (forall x40, x40 :e int -> x29 x40 = x28 x40) -> x30 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x31 x40 x41 = x41)) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x32 x40 x41 = If_i (SNoLe x40 0) x41 (x29 (x32 (add_SNo x40 (minus_SNo 1)) x41)))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x33 x40 x41 = x32 x30 (x31 x40 x41))) -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x34 x40 x41 = add_SNo (x33 x40 x41) (mul_SNo 2 (mul_SNo 2 (add_SNo (add_SNo x40 x40) x40))))) -> (forall x40, x40 :e int -> x35 x40 = x40) -> x36 = 1 -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x37 x40 x41 = If_i (SNoLe x40 0) x41 (x34 (x37 (add_SNo x40 (minus_SNo 1)) x41) x40))) -> (forall x40, x40 :e int -> x38 x40 = x37 (x35 x40) x36) -> (forall x40, x40 :e int -> x39 x40 = x38 x40) -> (forall x40, x40 :e int -> SNoLe 0 x40 -> x20 x40 = x39 x40))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_f2c11c7d7652391ec70f7829cb07f43c39cd7eda201d393d80e1baca89dc42c0 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = x22) -> (forall x22, x22 :e int -> x2 x22 = mul_SNo 2 (add_SNo 2 x22)) -> (forall x22, x22 :e int -> x3 x22 = add_SNo x22 x22) -> x4 = 0 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = If_i (SNoLe x22 0) x23 (x2 (x5 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x6 x22 = x5 (x3 x22) x4) -> (forall x22, x22 :e int -> x7 x22 = add_SNo 1 (x6 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x8 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x1 x22) (x7 x22)) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> x11 x22 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo (mul_SNo (mul_SNo x22 x22) x22) (minus_SNo x22)))) x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = x17 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_90847b240799f73b50f70fa684bb745e76045735d5fb6108a03df3d0e1b8024f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2 : set -> set, (forall x3, x3 :e int -> x2 x3 :e int) -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4, x4 :e int -> (forall x5 : set -> set -> set, (forall x6, x6 :e int -> (forall x7, x7 :e int -> x5 x6 x7 :e int)) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7 : set -> set, (forall x8, x8 :e int -> x7 x8 :e int) -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = x22) -> (forall x22, x22 :e int -> x2 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x3 x22 = add_SNo x22 x22) -> x4 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x5 x22 x23 = If_i (SNoLe x22 0) x23 (x2 (x5 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x6 x22 = x5 (x3 x22) x4) -> (forall x22, x22 :e int -> x7 x22 = add_SNo 2 (x6 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x8 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x8 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x9 x22 = x8 (x1 x22) (x7 x22)) -> (forall x22, x22 :e int -> x10 x22 = x9 x22) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo (add_SNo 2 (mul_SNo x22 x22)) x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = x17 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x10 x22 = x21 x22))))))))))))))))))))))).
Admitted.
