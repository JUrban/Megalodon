Section Eq.
Variable A:SType.
Definition eq : A->A->prop := fun x y:A => forall Q:A->A->prop, Q x y -> Q y x.
End Eq.
Infix = 502 := eq.
Section Ex.
Variable A:SType.
Definition ex : (A->prop)->prop := fun Q:A->prop => forall P:prop, (forall x:A, Q x -> P) -> P.
End Ex.
(* Unicode exists "2203" *)
Binder+ exists , := ex.
(* Parameter Eps_i "174b78e53fc239e8c2aab4ab5a996a27e3e5741e88070dad186e05fb13f275e5" *)
Parameter Eps_i : (set->prop)->set.
Parameter In:set->set->prop.
Parameter Empty : set.
(* Unicode Union "22C3" *)
Parameter Union : set->set.
(* Unicode Power "1D4AB" *)
Parameter Power : set->set.
Parameter Repl : set -> (set -> set) -> set.
Notation Repl Repl.
Parameter UnivOf : set->set.
(* Parameter int "f7cd39d139f71b389f61d3cf639bf341d01dac1be60ad65b40ee3aa5218e0043" "90ee851305d1ba4b80424ec6e2760ebabb1fd3e399fcb5c6b5c814d898138c16" *)
Parameter int : set.
(* Parameter add_SNo "29b9b279a7a5b776b777d842e678a4acaf3b85b17a0223605e4cc68025e9b2a7" "127d043261bd13d57aaeb99e7d2c02cae2bd0698c0d689b03e69f1ac89b3c2c6" *)
Parameter add_SNo : set -> set -> set.
(* Parameter mul_SNo "f56bf39b8eea93d7f63da529dedb477ae1ab1255c645c47d8915623f364f2d6b" "48d05483e628cb37379dd5d279684d471d85c642fe63533c3ad520b84b18df9d" *)
Parameter mul_SNo : set -> set -> set.
(* Parameter ordsucc "9db634daee7fc36315ddda5f5f694934869921e9c5f55e8b25c91c0a07c5cbec" "65d8837d7b0172ae830bed36c8407fcd41b7d875033d2284eb2df245b42295a6" *)
Parameter ordsucc : set -> set.
Notation Nat Empty ordsucc.
(* Parameter If_i "8c8f550868df4fdc93407b979afa60092db4b1bb96087bc3c2f17fadf3f35cbf" "b8ff52f838d0ff97beb955ee0b26fad79602e1529f8a2854bda0ecd4193a8a3c" *)
Parameter If_i : prop -> set -> set -> set.
(* Parameter SNoLe "09cdd0b9af76352f6b30bf3c4bca346eaa03d280255f13afb2e73fe8329098b6" "ddf7d378c4df6fcdf73e416f8d4c08965e38e50abe1463a0312048d3dd7ac7e9" *)
Parameter SNoLe : set -> set -> prop.
(* Parameter minus_SNo "6d39c64862ac40c95c6f5e4ed5f02bb019279bfb0cda8c9bbe0e1b813b1e876c" "268a6c1da15b8fe97d37be85147bc7767b27098cdae193faac127195e8824808" *)
Parameter minus_SNo : set -> set.
Theorem missingprop_e0179515493afe0e0f17be47747ddd8184be987155db350c67182d999307639d : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> x0 x32 = add_SNo x32 x32) -> (forall x32, x32 :e int -> x1 x32 = mul_SNo 2 (add_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x32 x32)) x32))) -> x2 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x3 x32 x33 = If_i (SNoLe x32 0) x33 (x0 (x3 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x4 x32 = x3 (x1 x32) x2) -> (forall x32, x32 :e int -> x5 x32 = x4 x32) -> (forall x32, x32 :e int -> x6 x32 = mul_SNo (mul_SNo x32 x32) x32) -> x7 = 1 -> (forall x32, x32 :e int -> x8 x32 = mul_SNo x32 x32) -> x9 = 1 -> (forall x32, x32 :e int -> x10 x32 = add_SNo x32 x32) -> (forall x32, x32 :e int -> x11 x32 = x32) -> x12 = 1 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x13 x32 x33 = If_i (SNoLe x32 0) x33 (x10 (x13 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x14 x32 = x13 (x11 x32) x12) -> (forall x32, x32 :e int -> x15 x32 = x14 x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x16 x32 x33 = If_i (SNoLe x32 0) x33 (x8 (x16 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x17 x32 = x16 x9 (x15 x32)) -> (forall x32, x32 :e int -> x18 x32 = x17 x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x19 x32 x33 = If_i (SNoLe x32 0) x33 (x6 (x19 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x20 x32 = x19 x7 (x18 x32)) -> (forall x32, x32 :e int -> x21 x32 = mul_SNo x32 x32) -> x22 = 2 -> (forall x32, x32 :e int -> x23 x32 = add_SNo x32 x32) -> (forall x32, x32 :e int -> x24 x32 = x32) -> x25 = 2 -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x26 x32 x33 = If_i (SNoLe x32 0) x33 (x23 (x26 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x27 x32 = x26 (x24 x32) x25) -> (forall x32, x32 :e int -> x28 x32 = x27 x32) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x29 x32 x33 = If_i (SNoLe x32 0) x33 (x21 (x29 (add_SNo x32 (minus_SNo 1)) x33)))) -> (forall x32, x32 :e int -> x30 x32 = x29 x22 (x28 x32)) -> (forall x32, x32 :e int -> x31 x32 = mul_SNo (x20 x32) (x30 x32)) -> (forall x32, x32 :e int -> SNoLe 0 x32 -> x5 x32 = x31 x32))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_6f57ebb5a4bbfd8b3d67f42a294922403211c8412d24dcf32a036dcc31794e3c : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9, x9 :e int -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28 : set -> set -> set, (forall x29, x29 :e int -> (forall x30, x30 :e int -> x28 x29 x30 :e int)) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> x31 x32 x33 :e int)) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set, (forall x36, x36 :e int -> x35 x36 :e int) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37, x37 :e int -> x0 x37 = add_SNo x37 x37) -> (forall x37, x37 :e int -> x1 x37 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x37 x37)) x37)) -> x2 = 2 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x3 x37 x38 = If_i (SNoLe x37 0) x38 (x0 (x3 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x4 x37 = x3 (x1 x37) x2) -> (forall x37, x37 :e int -> x5 x37 = mul_SNo 2 (x4 x37)) -> (forall x37, x37 :e int -> x6 x37 = mul_SNo (mul_SNo x37 x37) x37) -> x7 = 1 -> (forall x37, x37 :e int -> x8 x37 = mul_SNo x37 x37) -> x9 = 1 -> (forall x37, x37 :e int -> x10 x37 = add_SNo x37 x37) -> (forall x37, x37 :e int -> x11 x37 = x37) -> x12 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x13 x37 x38 = If_i (SNoLe x37 0) x38 (x10 (x13 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x14 x37 = x13 (x11 x37) x12) -> (forall x37, x37 :e int -> x15 x37 = x14 x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x16 x37 x38 = If_i (SNoLe x37 0) x38 (x8 (x16 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x17 x37 = x16 x9 (x15 x37)) -> (forall x37, x37 :e int -> x18 x37 = x17 x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x19 x37 x38 = If_i (SNoLe x37 0) x38 (x6 (x19 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x20 x37 = x19 x7 (x18 x37)) -> (forall x37, x37 :e int -> x21 x37 = mul_SNo x37 x37) -> x22 = 1 -> (forall x37, x37 :e int -> x23 x37 = mul_SNo (mul_SNo x37 2) x37) -> x24 = 1 -> (forall x37, x37 :e int -> x25 x37 = add_SNo x37 x37) -> (forall x37, x37 :e int -> x26 x37 = x37) -> x27 = 1 -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x28 x37 x38 = If_i (SNoLe x37 0) x38 (x25 (x28 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x29 x37 = x28 (x26 x37) x27) -> (forall x37, x37 :e int -> x30 x37 = x29 x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x31 x37 x38 = If_i (SNoLe x37 0) x38 (x23 (x31 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x32 x37 = x31 x24 (x30 x37)) -> (forall x37, x37 :e int -> x33 x37 = x32 x37) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x34 x37 x38 = If_i (SNoLe x37 0) x38 (x21 (x34 (add_SNo x37 (minus_SNo 1)) x38)))) -> (forall x37, x37 :e int -> x35 x37 = x34 x22 (x33 x37)) -> (forall x37, x37 :e int -> x36 x37 = mul_SNo (x20 x37) (x35 x37)) -> (forall x37, x37 :e int -> SNoLe 0 x37 -> x5 x37 = x36 x37)))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_2ece04f9578a08b4fb70979febcbfa7783469d9645c818e6b3c10ebc98d0f909 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> x0 x28 = add_SNo (add_SNo x28 x28) x28) -> (forall x28, x28 :e int -> x1 x28 = add_SNo (mul_SNo 2 (add_SNo 2 (add_SNo x28 x28))) x28) -> x2 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x3 x28 x29 = If_i (SNoLe x28 0) x29 (x0 (x3 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x4 x28 = x3 (x1 x28) x2) -> (forall x28, x28 :e int -> x5 x28 = x4 x28) -> (forall x28, x28 :e int -> x6 x28 = mul_SNo (mul_SNo x28 x28) x28) -> x7 = 1 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x8 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x9 x28 x29 = x29)) -> (forall x28, x28 :e int -> x10 x28 = x28) -> x11 = add_SNo 1 2 -> x12 = add_SNo 1 2 -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x13 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x8 (x13 (add_SNo x28 (minus_SNo 1)) x29 x30) (x14 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x14 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x9 (x13 (add_SNo x28 (minus_SNo 1)) x29 x30) (x14 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x15 x28 = x13 (x10 x28) x11 x12) -> (forall x28, x28 :e int -> x16 x28 = x15 x28) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x17 x28 x29 = If_i (SNoLe x28 0) x29 (x6 (x17 (add_SNo x28 (minus_SNo 1)) x29)))) -> (forall x28, x28 :e int -> x18 x28 = x17 x7 (x16 x28)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x19 x28 x29 = mul_SNo x28 x29)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x20 x28 x29 = x29)) -> (forall x28, x28 :e int -> x21 x28 = x28) -> x22 = add_SNo 1 2 -> x23 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x24 x28 x29 x30 = If_i (SNoLe x28 0) x29 (x19 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x25 x28 x29 x30 = If_i (SNoLe x28 0) x30 (x20 (x24 (add_SNo x28 (minus_SNo 1)) x29 x30) (x25 (add_SNo x28 (minus_SNo 1)) x29 x30))))) -> (forall x28, x28 :e int -> x26 x28 = x24 (x21 x28) x22 x23) -> (forall x28, x28 :e int -> x27 x28 = mul_SNo (x18 x28) (x26 x28)) -> (forall x28, x28 :e int -> SNoLe 0 x28 -> x5 x28 = x27 x28))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_9f9cb73f119091beeb45cab7ea40467d781668f1e299d22f30a9b200d03d960a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set, (forall x4, x4 :e int -> x3 x4 :e int) -> (forall x4 : set -> set -> set, (forall x5, x5 :e int -> (forall x6, x6 :e int -> x4 x5 x6 :e int)) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = add_SNo (add_SNo x33 x33) x33) -> (forall x33, x33 :e int -> x1 x33 = add_SNo 1 (add_SNo x33 x33)) -> x2 = 2 -> (forall x33, x33 :e int -> x3 x33 = x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x4 x33 x34 = If_i (SNoLe x33 0) x34 (x1 (x4 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x5 x33 = x4 x2 (x3 x33)) -> (forall x33, x33 :e int -> x6 x33 = add_SNo (x5 x33) x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = x9 x33) -> (forall x33, x33 :e int -> x11 x33 = mul_SNo (mul_SNo x33 x33) x33) -> x12 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = x34)) -> (forall x33, x33 :e int -> x15 x33 = x33) -> x16 = add_SNo 1 2 -> x17 = add_SNo 1 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x18 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x13 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x19 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x14 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x20 x33 = x18 (x15 x33) x16 x17) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x11 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x12 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = x33) -> x27 = 1 -> x28 = add_SNo 1 (mul_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_647df5cf9428f23399ebbe847cebfecc2c090a40a3ebac01e2469142e937ebf5 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = add_SNo (add_SNo x33 x33) x33) -> (forall x33, x33 :e int -> x1 x33 = add_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33)) -> x2 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x4 x33 = x3 (x1 x33) x2) -> (forall x33, x33 :e int -> x5 x33 = x4 x33) -> (forall x33, x33 :e int -> x6 x33 = mul_SNo (mul_SNo x33 x33) x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x9 x33 x34 = x34)) -> (forall x33, x33 :e int -> x10 x33 = x33) -> x11 = 1 -> x12 = add_SNo 1 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x13 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x8 (x13 (add_SNo x33 (minus_SNo 1)) x34 x35) (x14 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x14 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x9 (x13 (add_SNo x33 (minus_SNo 1)) x34 x35) (x14 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x15 x33 = x13 (x10 x33) x11 x12) -> (forall x33, x33 :e int -> x16 x33 = x15 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x17 x33 x34 = If_i (SNoLe x33 0) x34 (x6 (x17 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x18 x33 = x17 x7 (x16 x33)) -> (forall x33, x33 :e int -> x19 x33 = mul_SNo x33 x33) -> x20 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = x34)) -> (forall x33, x33 :e int -> x23 x33 = x33) -> x24 = add_SNo 1 2 -> x25 = add_SNo 1 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x26 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x21 (x26 (add_SNo x33 (minus_SNo 1)) x34 x35) (x27 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x27 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x22 (x26 (add_SNo x33 (minus_SNo 1)) x34 x35) (x27 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x28 x33 = x26 (x23 x33) x24 x25) -> (forall x33, x33 :e int -> x29 x33 = x28 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x19 (x30 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x31 x33 = x30 x20 (x29 x33)) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x18 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x5 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_7f8138f253f3039a6997ae3eb0edf3b510a29abee194014377297a160d340e0f : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11, x11 :e int -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16, x16 :e int -> x13 x14 x15 x16 :e int))) -> (forall x14 : set -> set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> x14 x15 x16 x17 :e int))) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> x0 x20 = add_SNo (add_SNo x20 x20) x20) -> (forall x20, x20 :e int -> x1 x20 = add_SNo 1 (add_SNo (mul_SNo 2 (add_SNo x20 x20)) x20)) -> x2 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x3 x20 x21 = If_i (SNoLe x20 0) x21 (x0 (x3 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x4 x20 = x3 (x1 x20) x2) -> (forall x20, x20 :e int -> x5 x20 = x4 x20) -> (forall x20, x20 :e int -> x6 x20 = mul_SNo (mul_SNo (add_SNo 1 2) (mul_SNo (mul_SNo x20 x20) x20)) (mul_SNo x20 x20)) -> x7 = 1 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x8 x20 x21 = mul_SNo x20 x21)) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x9 x20 x21 = x21)) -> (forall x20, x20 :e int -> x10 x20 = x20) -> x11 = 1 -> x12 = add_SNo 1 2 -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x13 x20 x21 x22 = If_i (SNoLe x20 0) x21 (x8 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x14 x20 x21 x22 = If_i (SNoLe x20 0) x22 (x9 (x13 (add_SNo x20 (minus_SNo 1)) x21 x22) (x14 (add_SNo x20 (minus_SNo 1)) x21 x22))))) -> (forall x20, x20 :e int -> x15 x20 = x13 (x10 x20) x11 x12) -> (forall x20, x20 :e int -> x16 x20 = x15 x20) -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x17 x20 x21 = If_i (SNoLe x20 0) x21 (x6 (x17 (add_SNo x20 (minus_SNo 1)) x21)))) -> (forall x20, x20 :e int -> x18 x20 = x17 x7 (x16 x20)) -> (forall x20, x20 :e int -> x19 x20 = x18 x20) -> (forall x20, x20 :e int -> SNoLe 0 x20 -> x5 x20 = x19 x20))))))))))))))))))))).
Admitted.
Theorem missingprop_c065f569ce21de001d2eb65f6aaabc96e7dfa3e1b4659c4c33a46c0346bb5387 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = add_SNo (mul_SNo 2 (add_SNo 2 (add_SNo x22 x22))) x22) -> x2 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x4 x22 = x3 (x1 x22) x2) -> (forall x22, x22 :e int -> x5 x22 = x4 x22) -> (forall x22, x22 :e int -> x6 x22 = mul_SNo x22 x22) -> x7 = 2 -> (forall x22, x22 :e int -> x8 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x9 x22 x23 = If_i (SNoLe x22 0) x23 (x6 (x9 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x10 x22 = x9 x7 (x8 x22)) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo (x10 x22) x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = x17 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x5 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_d73cec3783349a3a042c404c7c378700ecd60ee074b9ae38a823b2e08360f0cd : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = add_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x22 x22)) x22)) -> x2 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x4 x22 = x3 (x1 x22) x2) -> (forall x22, x22 :e int -> x5 x22 = x4 x22) -> (forall x22, x22 :e int -> x6 x22 = mul_SNo x22 x22) -> x7 = 1 -> (forall x22, x22 :e int -> x8 x22 = mul_SNo 2 (mul_SNo x22 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x9 x22 x23 = If_i (SNoLe x22 0) x23 (x6 (x9 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x10 x22 = x9 x7 (x8 x22)) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo (mul_SNo 2 (x10 x22)) x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = x17 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x5 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_efe12106292ee63967c869e6d48d20e520a755437ea1f480fe8430a05e6a4815 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set, (forall x18, x18 :e int -> x17 x18 :e int) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> x0 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x1 x22 = add_SNo (mul_SNo 2 (add_SNo x22 x22)) x22) -> x2 = 2 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x3 x22 x23 = If_i (SNoLe x22 0) x23 (x0 (x3 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x4 x22 = x3 (x1 x22) x2) -> (forall x22, x22 :e int -> x5 x22 = mul_SNo 2 (x4 x22)) -> (forall x22, x22 :e int -> x6 x22 = mul_SNo x22 x22) -> x7 = 1 -> (forall x22, x22 :e int -> x8 x22 = mul_SNo 2 (mul_SNo x22 x22)) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x9 x22 x23 = If_i (SNoLe x22 0) x23 (x6 (x9 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x10 x22 = x9 x7 (x8 x22)) -> (forall x22, x22 :e int -> x11 x22 = mul_SNo (x10 x22) x22) -> x12 = 1 -> (forall x22, x22 :e int -> x13 x22 = add_SNo x22 x22) -> (forall x22, x22 :e int -> x14 x22 = x22) -> x15 = 1 -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x16 x22 x23 = If_i (SNoLe x22 0) x23 (x13 (x16 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x17 x22 = x16 (x14 x22) x15) -> (forall x22, x22 :e int -> x18 x22 = x17 x22) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> x19 x22 x23 = If_i (SNoLe x22 0) x23 (x11 (x19 (add_SNo x22 (minus_SNo 1)) x23)))) -> (forall x22, x22 :e int -> x20 x22 = x19 x12 (x18 x22)) -> (forall x22, x22 :e int -> x21 x22 = x20 x22) -> (forall x22, x22 :e int -> SNoLe 0 x22 -> x5 x22 = x21 x22))))))))))))))))))))))).
Admitted.
Theorem missingprop_aef43e21f557ec56542d507bb71f8288c45d3203525df0429f9300e1429e74f3 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10, x10 :e int -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set, (forall x13, x13 :e int -> x12 x13 :e int) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> x0 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x1 x17 = add_SNo (mul_SNo 2 (add_SNo x17 x17)) x17) -> x2 = 2 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x3 x17 x18 = If_i (SNoLe x17 0) x18 (x0 (x3 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x4 x17 = x3 (x1 x17) x2) -> (forall x17, x17 :e int -> x5 x17 = x4 x17) -> (forall x17, x17 :e int -> x6 x17 = mul_SNo (add_SNo x17 x17) (mul_SNo (mul_SNo (mul_SNo x17 x17) x17) x17)) -> x7 = 1 -> (forall x17, x17 :e int -> x8 x17 = add_SNo x17 x17) -> (forall x17, x17 :e int -> x9 x17 = x17) -> x10 = 1 -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x11 x17 x18 = If_i (SNoLe x17 0) x18 (x8 (x11 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x12 x17 = x11 (x9 x17) x10) -> (forall x17, x17 :e int -> x13 x17 = x12 x17) -> (forall x17, x17 :e int -> (forall x18, x18 :e int -> x14 x17 x18 = If_i (SNoLe x17 0) x18 (x6 (x14 (add_SNo x17 (minus_SNo 1)) x18)))) -> (forall x17, x17 :e int -> x15 x17 = x14 x7 (x13 x17)) -> (forall x17, x17 :e int -> x16 x17 = x15 x17) -> (forall x17, x17 :e int -> SNoLe 0 x17 -> x5 x17 = x16 x17)))))))))))))))))).
Admitted.
Theorem missingprop_da5affd8626db57203b9024eb20cfe93d6ecc6e27d478402f0b05d339718ef18 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set, (forall x31, x31 :e int -> x30 x31 :e int) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> x0 x35 = mul_SNo x35 x35) -> x1 = 2 -> x2 = 2 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x3 x35 x36 = If_i (SNoLe x35 0) x36 (x0 (x3 (add_SNo x35 (minus_SNo 1)) x36)))) -> x4 = x3 x1 x2 -> (forall x35, x35 :e int -> x5 x35 = mul_SNo (add_SNo x4 (minus_SNo 2)) x35) -> (forall x35, x35 :e int -> x6 x35 = add_SNo 1 (add_SNo x35 x35)) -> x7 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x8 x35 x36 = If_i (SNoLe x35 0) x36 (x5 (x8 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x9 x35 = x8 (x6 x35) x7) -> (forall x35, x35 :e int -> x10 x35 = add_SNo (mul_SNo 2 x35) x35) -> (forall x35, x35 :e int -> x11 x35 = add_SNo (add_SNo x35 1) x35) -> x12 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x13 x35 x36 = If_i (SNoLe x35 0) x36 (x10 (x13 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x14 x35 = x13 (x11 x35) x12) -> (forall x35, x35 :e int -> x15 x35 = add_SNo (x9 x35) (x14 x35)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x16 x35 x36 = mul_SNo x35 x36)) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x17 x35 x36 = x36)) -> (forall x35, x35 :e int -> x18 x35 = add_SNo 1 (add_SNo x35 x35)) -> x19 = 1 -> x20 = add_SNo 2 (mul_SNo 2 (add_SNo 2 (add_SNo 2 2))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x21 x35 x36 x37 = If_i (SNoLe x35 0) x36 (x16 (x21 (add_SNo x35 (minus_SNo 1)) x36 x37) (x22 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x22 x35 x36 x37 = If_i (SNoLe x35 0) x37 (x17 (x21 (add_SNo x35 (minus_SNo 1)) x36 x37) (x22 (add_SNo x35 (minus_SNo 1)) x36 x37))))) -> (forall x35, x35 :e int -> x23 x35 = x21 (x18 x35) x19 x20) -> (forall x35, x35 :e int -> x24 x35 = mul_SNo x35 (mul_SNo x35 (add_SNo 1 2))) -> x25 = 1 -> (forall x35, x35 :e int -> x26 x35 = add_SNo (add_SNo x35 x35) x35) -> (forall x35, x35 :e int -> x27 x35 = x35) -> x28 = 1 -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x29 x35 x36 = If_i (SNoLe x35 0) x36 (x26 (x29 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x30 x35 = x29 (x27 x35) x28) -> (forall x35, x35 :e int -> x31 x35 = x30 x35) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> x32 x35 x36 = If_i (SNoLe x35 0) x36 (x24 (x32 (add_SNo x35 (minus_SNo 1)) x36)))) -> (forall x35, x35 :e int -> x33 x35 = x32 x25 (x31 x35)) -> (forall x35, x35 :e int -> x34 x35 = add_SNo (x23 x35) (x33 x35)) -> (forall x35, x35 :e int -> SNoLe 0 x35 -> x15 x35 = x34 x35)))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b770cc2752db828708b23a374bce13b37ed7e98ad5582d034f5c869148331aeb : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set, (forall x25, x25 :e int -> x24 x25 :e int) -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> x26 x27 x28 :e int)) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> (forall x31 : set -> set -> set -> set, (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x31 x32 x33 x34 :e int))) -> (forall x32 : set -> set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x32 x33 x34 x35 :e int))) -> (forall x33 : set -> set, (forall x34, x34 :e int -> x33 x34 :e int) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = mul_SNo 2 (add_SNo 2 x38)) -> x1 = 2 -> x2 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39)))) -> x4 = x3 x1 x2 -> (forall x38, x38 :e int -> x5 x38 = add_SNo (mul_SNo x4 x38) x38) -> (forall x38, x38 :e int -> x6 x38 = add_SNo 1 (add_SNo x38 x38)) -> x7 = 2 -> (forall x38, x38 :e int -> x8 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x9 x38 x39 = If_i (SNoLe x38 0) x39 (x6 (x9 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x10 x38 = x9 x7 (x8 x38)) -> (forall x38, x38 :e int -> x11 x38 = x10 x38) -> x12 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = If_i (SNoLe x38 0) x39 (x5 (x13 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x14 x38 = x13 (x11 x38) x12) -> (forall x38, x38 :e int -> x15 x38 = x14 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x16 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x17 x38 x39 = x39)) -> (forall x38, x38 :e int -> x18 x38 = add_SNo 1 (add_SNo 2 x38)) -> x19 = 1 -> x20 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x21 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x16 (x21 (add_SNo x38 (minus_SNo 1)) x39 x40) (x22 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x22 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x17 (x21 (add_SNo x38 (minus_SNo 1)) x39 x40) (x22 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x23 x38 = x21 (x18 x38) x19 x20) -> (forall x38, x38 :e int -> x24 x38 = mul_SNo (mul_SNo x38 x38) x38) -> x25 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x26 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = x39)) -> (forall x38, x38 :e int -> x28 x38 = x38) -> x29 = 1 -> x30 = add_SNo (mul_SNo (add_SNo (mul_SNo (add_SNo 2 2) 2) 2) 2) 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x31 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x26 (x31 (add_SNo x38 (minus_SNo 1)) x39 x40) (x32 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x32 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x27 (x31 (add_SNo x38 (minus_SNo 1)) x39 x40) (x32 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x33 x38 = x31 (x28 x38) x29 x30) -> (forall x38, x38 :e int -> x34 x38 = x33 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x35 x38 x39 = If_i (SNoLe x38 0) x39 (x24 (x35 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x36 x38 = x35 x25 (x34 x38)) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (x23 x38) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x15 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_5ce53719f1c632d842ddf2439c0136a8a7bc25bf548857833e0787a19f8416a6 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = mul_SNo 2 (add_SNo 2 x33)) -> x1 = 2 -> x2 = 2 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> x4 = x3 x1 x2 -> (forall x33, x33 :e int -> x5 x33 = add_SNo (mul_SNo x4 x33) x33) -> (forall x33, x33 :e int -> x6 x33 = add_SNo 1 (mul_SNo 2 (add_SNo x33 x33))) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = x9 x33) -> (forall x33, x33 :e int -> x11 x33 = mul_SNo (mul_SNo x33 x33) x33) -> x12 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x13 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x14 x33 x34 = x34)) -> (forall x33, x33 :e int -> x15 x33 = x33) -> x16 = 1 -> x17 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x18 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x13 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x19 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x14 (x18 (add_SNo x33 (minus_SNo 1)) x34 x35) (x19 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x20 x33 = x18 (x15 x33) x16 x17) -> (forall x33, x33 :e int -> x21 x33 = x20 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = If_i (SNoLe x33 0) x34 (x11 (x22 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x23 x33 = x22 x12 (x21 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x24 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x25 x33 x34 = x34)) -> (forall x33, x33 :e int -> x26 x33 = add_SNo 1 x33) -> x27 = 1 -> x28 = add_SNo 1 (mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2)))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x29 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x24 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x30 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x25 (x29 (add_SNo x33 (minus_SNo 1)) x34 x35) (x30 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x31 x33 = x29 (x26 x33) x27 x28) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (x23 x33) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_a1fdc83e916bc6edb9f66e850bda8e1f711258a2a78c3f27a9c6025c5836947e : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> x16 x17 x18 :e int)) -> (forall x17 : set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> x17 x18 x19 :e int)) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24, x24 :e int -> x21 x22 x23 x24 :e int))) -> (forall x22 : set -> set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> x22 x23 x24 x25 :e int))) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> x34 x35 x36 :e int)) -> (forall x35 : set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> x35 x36 x37 :e int)) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> (forall x39 : set -> set -> set -> set, (forall x40, x40 :e int -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x39 x40 x41 x42 :e int))) -> (forall x40 : set -> set -> set -> set, (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x40 x41 x42 x43 :e int))) -> (forall x41 : set -> set, (forall x42, x42 :e int -> x41 x42 :e int) -> (forall x42 : set -> set, (forall x43, x43 :e int -> x42 x43 :e int) -> (forall x43 : set -> set -> set, (forall x44, x44 :e int -> (forall x45, x45 :e int -> x43 x44 x45 :e int)) -> (forall x44 : set -> set, (forall x45, x45 :e int -> x44 x45 :e int) -> (forall x45 : set -> set, (forall x46, x46 :e int -> x45 x46 :e int) -> (forall x46, x46 :e int -> x0 x46 = mul_SNo 2 (add_SNo 2 x46)) -> x1 = 2 -> x2 = 2 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x3 x46 x47 = If_i (SNoLe x46 0) x47 (x0 (x3 (add_SNo x46 (minus_SNo 1)) x47)))) -> x4 = x3 x1 x2 -> (forall x46, x46 :e int -> x5 x46 = mul_SNo x4 x46) -> (forall x46, x46 :e int -> x6 x46 = add_SNo 1 (add_SNo x46 x46)) -> x7 = 2 -> (forall x46, x46 :e int -> x8 x46 = x46) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x9 x46 x47 = If_i (SNoLe x46 0) x47 (x6 (x9 (add_SNo x46 (minus_SNo 1)) x47)))) -> (forall x46, x46 :e int -> x10 x46 = x9 x7 (x8 x46)) -> (forall x46, x46 :e int -> x11 x46 = x10 x46) -> x12 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x13 x46 x47 = If_i (SNoLe x46 0) x47 (x5 (x13 (add_SNo x46 (minus_SNo 1)) x47)))) -> (forall x46, x46 :e int -> x14 x46 = x13 (x11 x46) x12) -> (forall x46, x46 :e int -> x15 x46 = x14 x46) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x16 x46 x47 = mul_SNo x46 x47)) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x17 x46 x47 = x47)) -> (forall x46, x46 :e int -> x18 x46 = add_SNo 1 x46) -> x19 = 1 -> x20 = mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x21 x46 x47 x48 = If_i (SNoLe x46 0) x47 (x16 (x21 (add_SNo x46 (minus_SNo 1)) x47 x48) (x22 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x22 x46 x47 x48 = If_i (SNoLe x46 0) x48 (x17 (x21 (add_SNo x46 (minus_SNo 1)) x47 x48) (x22 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> x23 x46 = x21 (x18 x46) x19 x20) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x24 x46 x47 = mul_SNo x46 x47)) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x25 x46 x47 = x47)) -> (forall x46, x46 :e int -> x26 x46 = x46) -> x27 = 1 -> x28 = mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x29 x46 x47 x48 = If_i (SNoLe x46 0) x47 (x24 (x29 (add_SNo x46 (minus_SNo 1)) x47 x48) (x30 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x30 x46 x47 x48 = If_i (SNoLe x46 0) x48 (x25 (x29 (add_SNo x46 (minus_SNo 1)) x47 x48) (x30 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> x31 x46 = x29 (x26 x46) x27 x28) -> (forall x46, x46 :e int -> x32 x46 = mul_SNo x46 x46) -> x33 = 1 -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x34 x46 x47 = mul_SNo x46 x47)) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x35 x46 x47 = x47)) -> (forall x46, x46 :e int -> x36 x46 = add_SNo 1 x46) -> x37 = 1 -> x38 = mul_SNo 2 (add_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x39 x46 x47 x48 = If_i (SNoLe x46 0) x47 (x34 (x39 (add_SNo x46 (minus_SNo 1)) x47 x48) (x40 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> (forall x48, x48 :e int -> x40 x46 x47 x48 = If_i (SNoLe x46 0) x48 (x35 (x39 (add_SNo x46 (minus_SNo 1)) x47 x48) (x40 (add_SNo x46 (minus_SNo 1)) x47 x48))))) -> (forall x46, x46 :e int -> x41 x46 = x39 (x36 x46) x37 x38) -> (forall x46, x46 :e int -> x42 x46 = x41 x46) -> (forall x46, x46 :e int -> (forall x47, x47 :e int -> x43 x46 x47 = If_i (SNoLe x46 0) x47 (x32 (x43 (add_SNo x46 (minus_SNo 1)) x47)))) -> (forall x46, x46 :e int -> x44 x46 = x43 x33 (x42 x46)) -> (forall x46, x46 :e int -> x45 x46 = mul_SNo (mul_SNo (x23 x46) (x31 x46)) (x44 x46)) -> (forall x46, x46 :e int -> SNoLe 0 x46 -> x15 x46 = x45 x46))))))))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_7d5daa4132736868e5942dca089e517ea821f545eafd700fdc721fdf0a80b261 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set -> set, (forall x15, x15 :e int -> (forall x16, x16 :e int -> x14 x15 x16 :e int)) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16, x16 :e int -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> (forall x21, x21 :e int -> x18 x19 x20 x21 :e int))) -> (forall x19 : set -> set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> x19 x20 x21 x22 :e int))) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24 : set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> x24 x25 x26 :e int)) -> (forall x25 : set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> x25 x26 x27 :e int)) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> (forall x32, x32 :e int -> x29 x30 x31 x32 :e int))) -> (forall x30 : set -> set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> x30 x31 x32 x33 :e int))) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set -> set, (forall x33, x33 :e int -> (forall x34, x34 :e int -> x32 x33 x34 :e int)) -> (forall x33 : set -> set -> set, (forall x34, x34 :e int -> (forall x35, x35 :e int -> x33 x34 x35 :e int)) -> (forall x34 : set -> set, (forall x35, x35 :e int -> x34 x35 :e int) -> (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37 : set -> set -> set -> set, (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x37 x38 x39 x40 :e int))) -> (forall x38 : set -> set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> (forall x41, x41 :e int -> x38 x39 x40 x41 :e int))) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> x0 x41 = mul_SNo 2 (add_SNo 2 x41)) -> x1 = 2 -> x2 = 2 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x3 x41 x42 = If_i (SNoLe x41 0) x42 (x0 (x3 (add_SNo x41 (minus_SNo 1)) x42)))) -> x4 = x3 x1 x2 -> (forall x41, x41 :e int -> x5 x41 = mul_SNo x4 x41) -> (forall x41, x41 :e int -> x6 x41 = add_SNo 1 (mul_SNo 2 (add_SNo x41 x41))) -> x7 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x8 x41 x42 = If_i (SNoLe x41 0) x42 (x5 (x8 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x9 x41 = x8 (x6 x41) x7) -> (forall x41, x41 :e int -> x10 x41 = x9 x41) -> (forall x41, x41 :e int -> x11 x41 = mul_SNo x41 x41) -> x12 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x13 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x14 x41 x42 = x42)) -> (forall x41, x41 :e int -> x15 x41 = x41) -> x16 = 1 -> x17 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x18 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x13 (x18 (add_SNo x41 (minus_SNo 1)) x42 x43) (x19 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x19 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x14 (x18 (add_SNo x41 (minus_SNo 1)) x42 x43) (x19 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x20 x41 = x18 (x15 x41) x16 x17) -> (forall x41, x41 :e int -> x21 x41 = x20 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x22 x41 x42 = If_i (SNoLe x41 0) x42 (x11 (x22 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x23 x41 = x22 x12 (x21 x41)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x24 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x25 x41 x42 = x42)) -> (forall x41, x41 :e int -> x26 x41 = add_SNo 1 (add_SNo x41 x41)) -> x27 = 1 -> x28 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x29 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x24 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x30 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x25 (x29 (add_SNo x41 (minus_SNo 1)) x42 x43) (x30 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x31 x41 = x29 (x26 x41) x27 x28) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x32 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x33 x41 x42 = x42)) -> (forall x41, x41 :e int -> x34 x41 = x41) -> x35 = 2 -> x36 = mul_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x37 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x32 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x38 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x33 (x37 (add_SNo x41 (minus_SNo 1)) x42 x43) (x38 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x39 x41 = x37 (x34 x41) x35 x36) -> (forall x41, x41 :e int -> x40 x41 = mul_SNo (mul_SNo (x23 x41) (x31 x41)) (x39 x41)) -> (forall x41, x41 :e int -> SNoLe 0 x41 -> x10 x41 = x40 x41)))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_da8d20ae52b2b2491accef4786d889e69ad1bf5700b7df3cee82e1057cf7aa4a : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1 : set -> set, (forall x2, x2 :e int -> x1 x2 :e int) -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4 : set -> set, (forall x5, x5 :e int -> x4 x5 :e int) -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set, (forall x20, x20 :e int -> x19 x20 :e int) -> (forall x20, x20 :e int -> (forall x21 : set -> set -> set, (forall x22, x22 :e int -> (forall x23, x23 :e int -> x21 x22 x23 :e int)) -> (forall x22 : set -> set -> set, (forall x23, x23 :e int -> (forall x24, x24 :e int -> x22 x23 x24 :e int)) -> (forall x23 : set -> set, (forall x24, x24 :e int -> x23 x24 :e int) -> (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26 : set -> set -> set -> set, (forall x27, x27 :e int -> (forall x28, x28 :e int -> (forall x29, x29 :e int -> x26 x27 x28 x29 :e int))) -> (forall x27 : set -> set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> (forall x30, x30 :e int -> x27 x28 x29 x30 :e int))) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set, (forall x30, x30 :e int -> x29 x30 :e int) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32 : set -> set, (forall x33, x33 :e int -> x32 x33 :e int) -> (forall x33, x33 :e int -> x0 x33 = mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33)) -> (forall x33, x33 :e int -> x1 x33 = add_SNo 1 (add_SNo x33 x33)) -> x2 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x3 x33 x34 = If_i (SNoLe x33 0) x34 (x0 (x3 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x4 x33 = x3 (x1 x33) x2) -> (forall x33, x33 :e int -> x5 x33 = add_SNo 1 (mul_SNo 2 (add_SNo (mul_SNo 2 (add_SNo x33 x33)) x33))) -> (forall x33, x33 :e int -> x6 x33 = x33) -> x7 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x8 x33 x34 = If_i (SNoLe x33 0) x34 (x5 (x8 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x9 x33 = x8 (x6 x33) x7) -> (forall x33, x33 :e int -> x10 x33 = mul_SNo (x4 x33) (x9 x33)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x11 x33 x34 = add_SNo 1 (mul_SNo x33 x34))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x12 x33 x34 = x34)) -> (forall x33, x33 :e int -> x13 x33 = add_SNo 1 x33) -> x14 = 1 -> x15 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x16 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x11 (x16 (add_SNo x33 (minus_SNo 1)) x34 x35) (x17 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x17 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x12 (x16 (add_SNo x33 (minus_SNo 1)) x34 x35) (x17 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x18 x33 = x16 (x13 x33) x14 x15) -> (forall x33, x33 :e int -> x19 x33 = mul_SNo x33 x33) -> x20 = 1 -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x21 x33 x34 = mul_SNo x33 x34)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x22 x33 x34 = x34)) -> (forall x33, x33 :e int -> x23 x33 = x33) -> x24 = 1 -> x25 = add_SNo 2 (mul_SNo 2 (add_SNo 2 2)) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x26 x33 x34 x35 = If_i (SNoLe x33 0) x34 (x21 (x26 (add_SNo x33 (minus_SNo 1)) x34 x35) (x27 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> (forall x35, x35 :e int -> x27 x33 x34 x35 = If_i (SNoLe x33 0) x35 (x22 (x26 (add_SNo x33 (minus_SNo 1)) x34 x35) (x27 (add_SNo x33 (minus_SNo 1)) x34 x35))))) -> (forall x33, x33 :e int -> x28 x33 = x26 (x23 x33) x24 x25) -> (forall x33, x33 :e int -> x29 x33 = x28 x33) -> (forall x33, x33 :e int -> (forall x34, x34 :e int -> x30 x33 x34 = If_i (SNoLe x33 0) x34 (x19 (x30 (add_SNo x33 (minus_SNo 1)) x34)))) -> (forall x33, x33 :e int -> x31 x33 = x30 x20 (x29 x33)) -> (forall x33, x33 :e int -> x32 x33 = mul_SNo (add_SNo (x18 x33) (minus_SNo 1)) (x31 x33)) -> (forall x33, x33 :e int -> SNoLe 0 x33 -> x10 x33 = x32 x33)))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_b9af0fec2d2956cc1eaffc17f7d7b08751ecfddae368659ceaf042e0b4ab8085 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = mul_SNo x38 x38) -> x1 = 2 -> x2 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39)))) -> x4 = x3 x1 x2 -> (forall x38, x38 :e int -> x5 x38 = add_SNo (mul_SNo x4 x38) x38) -> (forall x38, x38 :e int -> x6 x38 = add_SNo 1 (add_SNo x38 x38)) -> x7 = 2 -> (forall x38, x38 :e int -> x8 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x9 x38 x39 = If_i (SNoLe x38 0) x39 (x6 (x9 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x10 x38 = x9 x7 (x8 x38)) -> (forall x38, x38 :e int -> x11 x38 = x10 x38) -> x12 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = If_i (SNoLe x38 0) x39 (x5 (x13 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x14 x38 = x13 (x11 x38) x12) -> (forall x38, x38 :e int -> x15 x38 = x14 x38) -> (forall x38, x38 :e int -> x16 x38 = mul_SNo x38 x38) -> x17 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x18 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x19 x38 x39 = x39)) -> (forall x38, x38 :e int -> x20 x38 = add_SNo 1 x38) -> x21 = 1 -> x22 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x23 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x18 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x24 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x19 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x25 x38 = x23 (x20 x38) x21 x22) -> (forall x38, x38 :e int -> x26 x38 = x25 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = If_i (SNoLe x38 0) x39 (x16 (x27 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x28 x38 = x27 x17 (x26 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = x39)) -> (forall x38, x38 :e int -> x31 x38 = add_SNo 1 (add_SNo x38 x38)) -> x32 = 1 -> x33 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x34 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x29 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x35 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x30 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x36 x38 = x34 (x31 x38) x32 x33) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (x28 x38) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x15 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_d15efc8c35307a4ca7bd55a09ba03dffde5134b5ee09e0237dfdb7ac90c19719 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> x0 x41 = mul_SNo x41 x41) -> x1 = 2 -> x2 = 2 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x3 x41 x42 = If_i (SNoLe x41 0) x42 (x0 (x3 (add_SNo x41 (minus_SNo 1)) x42)))) -> x4 = x3 x1 x2 -> (forall x41, x41 :e int -> x5 x41 = add_SNo (mul_SNo x4 x41) x41) -> (forall x41, x41 :e int -> x6 x41 = add_SNo 1 (mul_SNo 2 (add_SNo x41 x41))) -> x7 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x8 x41 x42 = If_i (SNoLe x41 0) x42 (x5 (x8 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x9 x41 = x8 (x6 x41) x7) -> (forall x41, x41 :e int -> x10 x41 = x9 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x11 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x12 x41 x42 = x42)) -> (forall x41, x41 :e int -> x13 x41 = add_SNo 1 x41) -> x14 = 1 -> x15 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x16 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x11 (x16 (add_SNo x41 (minus_SNo 1)) x42 x43) (x17 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x17 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x12 (x16 (add_SNo x41 (minus_SNo 1)) x42 x43) (x17 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x18 x41 = x16 (x13 x41) x14 x15) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x19 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x20 x41 x42 = x42)) -> (forall x41, x41 :e int -> x21 x41 = x41) -> x22 = 1 -> x23 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x24 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x19 (x24 (add_SNo x41 (minus_SNo 1)) x42 x43) (x25 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x25 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x20 (x24 (add_SNo x41 (minus_SNo 1)) x42 x43) (x25 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x26 x41 = x24 (x21 x41) x22 x23) -> (forall x41, x41 :e int -> x27 x41 = mul_SNo x41 x41) -> x28 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x29 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x30 x41 x42 = x42)) -> (forall x41, x41 :e int -> x31 x41 = x41) -> x32 = 1 -> x33 = add_SNo 1 (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x34 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x29 (x34 (add_SNo x41 (minus_SNo 1)) x42 x43) (x35 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x35 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x30 (x34 (add_SNo x41 (minus_SNo 1)) x42 x43) (x35 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x36 x41 = x34 (x31 x41) x32 x33) -> (forall x41, x41 :e int -> x37 x41 = x36 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x38 x41 x42 = If_i (SNoLe x41 0) x42 (x27 (x38 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x39 x41 = x38 x28 (x37 x41)) -> (forall x41, x41 :e int -> x40 x41 = mul_SNo (mul_SNo (x18 x41) (x26 x41)) (x39 x41)) -> (forall x41, x41 :e int -> SNoLe 0 x41 -> x10 x41 = x40 x41)))))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_651085a693261acb986ec18d24db877985cdeffc689fc0bf83b76599177128e0 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set, (forall x9, x9 :e int -> x8 x9 :e int) -> (forall x9 : set -> set -> set, (forall x10, x10 :e int -> (forall x11, x11 :e int -> x9 x10 x11 :e int)) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set, (forall x12, x12 :e int -> x11 x12 :e int) -> (forall x12, x12 :e int -> (forall x13 : set -> set -> set, (forall x14, x14 :e int -> (forall x15, x15 :e int -> x13 x14 x15 :e int)) -> (forall x14 : set -> set, (forall x15, x15 :e int -> x14 x15 :e int) -> (forall x15 : set -> set, (forall x16, x16 :e int -> x15 x16 :e int) -> (forall x16 : set -> set, (forall x17, x17 :e int -> x16 x17 :e int) -> (forall x17, x17 :e int -> (forall x18 : set -> set -> set, (forall x19, x19 :e int -> (forall x20, x20 :e int -> x18 x19 x20 :e int)) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set, (forall x21, x21 :e int -> x20 x21 :e int) -> (forall x21, x21 :e int -> (forall x22, x22 :e int -> (forall x23 : set -> set -> set -> set, (forall x24, x24 :e int -> (forall x25, x25 :e int -> (forall x26, x26 :e int -> x23 x24 x25 x26 :e int))) -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set, (forall x26, x26 :e int -> x25 x26 :e int) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set -> set, (forall x28, x28 :e int -> (forall x29, x29 :e int -> x27 x28 x29 :e int)) -> (forall x28 : set -> set, (forall x29, x29 :e int -> x28 x29 :e int) -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38, x38 :e int -> x0 x38 = mul_SNo x38 x38) -> x1 = 2 -> x2 = 2 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x3 x38 x39 = If_i (SNoLe x38 0) x39 (x0 (x3 (add_SNo x38 (minus_SNo 1)) x39)))) -> x4 = x3 x1 x2 -> (forall x38, x38 :e int -> x5 x38 = add_SNo (mul_SNo x4 x38) (minus_SNo x38)) -> (forall x38, x38 :e int -> x6 x38 = add_SNo 1 (add_SNo x38 x38)) -> x7 = 2 -> (forall x38, x38 :e int -> x8 x38 = x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x9 x38 x39 = If_i (SNoLe x38 0) x39 (x6 (x9 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x10 x38 = x9 x7 (x8 x38)) -> (forall x38, x38 :e int -> x11 x38 = x10 x38) -> x12 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x13 x38 x39 = If_i (SNoLe x38 0) x39 (x5 (x13 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x14 x38 = x13 (x11 x38) x12) -> (forall x38, x38 :e int -> x15 x38 = x14 x38) -> (forall x38, x38 :e int -> x16 x38 = mul_SNo x38 x38) -> x17 = 1 -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x18 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x19 x38 x39 = x39)) -> (forall x38, x38 :e int -> x20 x38 = add_SNo 1 x38) -> x21 = 1 -> x22 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (minus_SNo 1) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x23 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x18 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x24 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x19 (x23 (add_SNo x38 (minus_SNo 1)) x39 x40) (x24 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x25 x38 = x23 (x20 x38) x21 x22) -> (forall x38, x38 :e int -> x26 x38 = x25 x38) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x27 x38 x39 = If_i (SNoLe x38 0) x39 (x16 (x27 (add_SNo x38 (minus_SNo 1)) x39)))) -> (forall x38, x38 :e int -> x28 x38 = x27 x17 (x26 x38)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x29 x38 x39 = mul_SNo x38 x39)) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> x30 x38 x39 = x39)) -> (forall x38, x38 :e int -> x31 x38 = add_SNo 1 (add_SNo x38 x38)) -> x32 = 1 -> x33 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (minus_SNo 1) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x34 x38 x39 x40 = If_i (SNoLe x38 0) x39 (x29 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> (forall x39, x39 :e int -> (forall x40, x40 :e int -> x35 x38 x39 x40 = If_i (SNoLe x38 0) x40 (x30 (x34 (add_SNo x38 (minus_SNo 1)) x39 x40) (x35 (add_SNo x38 (minus_SNo 1)) x39 x40))))) -> (forall x38, x38 :e int -> x36 x38 = x34 (x31 x38) x32 x33) -> (forall x38, x38 :e int -> x37 x38 = mul_SNo (x28 x38) (x36 x38)) -> (forall x38, x38 :e int -> SNoLe 0 x38 -> x15 x38 = x37 x38))))))))))))))))))))))))))))))))))))))).
Admitted.
Theorem missingprop_9fa333465fce64e39c1e6bac5b690ff2a4f50c2067c92204bff58e5725156791 : (forall x0 : set -> set, (forall x1, x1 :e int -> x0 x1 :e int) -> (forall x1, x1 :e int -> (forall x2, x2 :e int -> (forall x3 : set -> set -> set, (forall x4, x4 :e int -> (forall x5, x5 :e int -> x3 x4 x5 :e int)) -> (forall x4, x4 :e int -> (forall x5 : set -> set, (forall x6, x6 :e int -> x5 x6 :e int) -> (forall x6 : set -> set, (forall x7, x7 :e int -> x6 x7 :e int) -> (forall x7, x7 :e int -> (forall x8 : set -> set -> set, (forall x9, x9 :e int -> (forall x10, x10 :e int -> x8 x9 x10 :e int)) -> (forall x9 : set -> set, (forall x10, x10 :e int -> x9 x10 :e int) -> (forall x10 : set -> set, (forall x11, x11 :e int -> x10 x11 :e int) -> (forall x11 : set -> set -> set, (forall x12, x12 :e int -> (forall x13, x13 :e int -> x11 x12 x13 :e int)) -> (forall x12 : set -> set -> set, (forall x13, x13 :e int -> (forall x14, x14 :e int -> x12 x13 x14 :e int)) -> (forall x13 : set -> set, (forall x14, x14 :e int -> x13 x14 :e int) -> (forall x14, x14 :e int -> (forall x15, x15 :e int -> (forall x16 : set -> set -> set -> set, (forall x17, x17 :e int -> (forall x18, x18 :e int -> (forall x19, x19 :e int -> x16 x17 x18 x19 :e int))) -> (forall x17 : set -> set -> set -> set, (forall x18, x18 :e int -> (forall x19, x19 :e int -> (forall x20, x20 :e int -> x17 x18 x19 x20 :e int))) -> (forall x18 : set -> set, (forall x19, x19 :e int -> x18 x19 :e int) -> (forall x19 : set -> set -> set, (forall x20, x20 :e int -> (forall x21, x21 :e int -> x19 x20 x21 :e int)) -> (forall x20 : set -> set -> set, (forall x21, x21 :e int -> (forall x22, x22 :e int -> x20 x21 x22 :e int)) -> (forall x21 : set -> set, (forall x22, x22 :e int -> x21 x22 :e int) -> (forall x22, x22 :e int -> (forall x23, x23 :e int -> (forall x24 : set -> set -> set -> set, (forall x25, x25 :e int -> (forall x26, x26 :e int -> (forall x27, x27 :e int -> x24 x25 x26 x27 :e int))) -> (forall x25 : set -> set -> set -> set, (forall x26, x26 :e int -> (forall x27, x27 :e int -> (forall x28, x28 :e int -> x25 x26 x27 x28 :e int))) -> (forall x26 : set -> set, (forall x27, x27 :e int -> x26 x27 :e int) -> (forall x27 : set -> set, (forall x28, x28 :e int -> x27 x28 :e int) -> (forall x28, x28 :e int -> (forall x29 : set -> set -> set, (forall x30, x30 :e int -> (forall x31, x31 :e int -> x29 x30 x31 :e int)) -> (forall x30 : set -> set -> set, (forall x31, x31 :e int -> (forall x32, x32 :e int -> x30 x31 x32 :e int)) -> (forall x31 : set -> set, (forall x32, x32 :e int -> x31 x32 :e int) -> (forall x32, x32 :e int -> (forall x33, x33 :e int -> (forall x34 : set -> set -> set -> set, (forall x35, x35 :e int -> (forall x36, x36 :e int -> (forall x37, x37 :e int -> x34 x35 x36 x37 :e int))) -> (forall x35 : set -> set -> set -> set, (forall x36, x36 :e int -> (forall x37, x37 :e int -> (forall x38, x38 :e int -> x35 x36 x37 x38 :e int))) -> (forall x36 : set -> set, (forall x37, x37 :e int -> x36 x37 :e int) -> (forall x37 : set -> set, (forall x38, x38 :e int -> x37 x38 :e int) -> (forall x38 : set -> set -> set, (forall x39, x39 :e int -> (forall x40, x40 :e int -> x38 x39 x40 :e int)) -> (forall x39 : set -> set, (forall x40, x40 :e int -> x39 x40 :e int) -> (forall x40 : set -> set, (forall x41, x41 :e int -> x40 x41 :e int) -> (forall x41, x41 :e int -> x0 x41 = mul_SNo x41 x41) -> x1 = 2 -> x2 = 2 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x3 x41 x42 = If_i (SNoLe x41 0) x42 (x0 (x3 (add_SNo x41 (minus_SNo 1)) x42)))) -> x4 = x3 x1 x2 -> (forall x41, x41 :e int -> x5 x41 = add_SNo (mul_SNo x4 x41) (minus_SNo x41)) -> (forall x41, x41 :e int -> x6 x41 = add_SNo 1 (mul_SNo 2 (add_SNo x41 x41))) -> x7 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x8 x41 x42 = If_i (SNoLe x41 0) x42 (x5 (x8 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x9 x41 = x8 (x6 x41) x7) -> (forall x41, x41 :e int -> x10 x41 = x9 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x11 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x12 x41 x42 = x42)) -> (forall x41, x41 :e int -> x13 x41 = add_SNo 1 x41) -> x14 = 1 -> x15 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (minus_SNo 1) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x16 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x11 (x16 (add_SNo x41 (minus_SNo 1)) x42 x43) (x17 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x17 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x12 (x16 (add_SNo x41 (minus_SNo 1)) x42 x43) (x17 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x18 x41 = x16 (x13 x41) x14 x15) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x19 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x20 x41 x42 = x42)) -> (forall x41, x41 :e int -> x21 x41 = x41) -> x22 = 1 -> x23 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (minus_SNo 1) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x24 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x19 (x24 (add_SNo x41 (minus_SNo 1)) x42 x43) (x25 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x25 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x20 (x24 (add_SNo x41 (minus_SNo 1)) x42 x43) (x25 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x26 x41 = x24 (x21 x41) x22 x23) -> (forall x41, x41 :e int -> x27 x41 = mul_SNo x41 x41) -> x28 = 1 -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x29 x41 x42 = mul_SNo x41 x42)) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x30 x41 x42 = x42)) -> (forall x41, x41 :e int -> x31 x41 = x41) -> x32 = 1 -> x33 = add_SNo (mul_SNo 2 (mul_SNo 2 (add_SNo 2 2))) (minus_SNo 1) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x34 x41 x42 x43 = If_i (SNoLe x41 0) x42 (x29 (x34 (add_SNo x41 (minus_SNo 1)) x42 x43) (x35 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> (forall x43, x43 :e int -> x35 x41 x42 x43 = If_i (SNoLe x41 0) x43 (x30 (x34 (add_SNo x41 (minus_SNo 1)) x42 x43) (x35 (add_SNo x41 (minus_SNo 1)) x42 x43))))) -> (forall x41, x41 :e int -> x36 x41 = x34 (x31 x41) x32 x33) -> (forall x41, x41 :e int -> x37 x41 = x36 x41) -> (forall x41, x41 :e int -> (forall x42, x42 :e int -> x38 x41 x42 = If_i (SNoLe x41 0) x42 (x27 (x38 (add_SNo x41 (minus_SNo 1)) x42)))) -> (forall x41, x41 :e int -> x39 x41 = x38 x28 (x37 x41)) -> (forall x41, x41 :e int -> x40 x41 = mul_SNo (mul_SNo (x18 x41) (x26 x41)) (x39 x41)) -> (forall x41, x41 :e int -> SNoLe 0 x41 -> x10 x41 = x40 x41)))))))))))))))))))))))))))))))))))))))))).
Admitted.
