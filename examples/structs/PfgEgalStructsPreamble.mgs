(* Parameter pack_e "faab5f334ba3328f24def7e6fcb974000058847411a2eb0618014eca864e537f" "dd8f2d332fef3b4d27898ab88fa5ddad0462180c8d64536ce201f5a9394f40dd" *)
Parameter pack_e :set -> set -> set.

Axiom pack_e_0_eq : forall S X, forall c:set, S = pack_e X c -> X = S 0.

Axiom pack_e_0_eq2 : forall X, forall c:set, X = pack_e X c 0.

Axiom pack_e_1_eq : forall S X, forall c:set, S = pack_e X c -> c = S 1.

Axiom pack_e_1_eq2 : forall X, forall c:set, c = pack_e X c 1.

Axiom pack_e_inj: forall X X', forall c c', pack_e X c = pack_e X' c' -> X = X' /\ c = c'.

(* Parameter struct_e "a439fd04fdf53a240bd30662af698e730d4b04b510adff1d4a286718c31431e4" "d335d40e85580857cc0be3657b910d5bce202e0fab6875adec93e2fc5e5e57e4" *)
Parameter struct_e :set -> prop.

Axiom pack_struct_e_I: forall X, forall c:set, c :e X -> struct_e (pack_e X c).

Axiom pack_struct_e_E1: forall X, forall c:set, struct_e (pack_e X c) -> c :e X.

Axiom struct_e_eta: forall S, struct_e S -> S = pack_e (S 0) (S 1).

(* Parameter unpack_e_i "933a1383079fba002694718ec8040dc85a8cca2bd54c5066c99fff135594ad7c" "91fff70be2f95d6e5e3fe9071cbd57d006bdee7d805b0049eefb19947909cc4e" *)
Parameter unpack_e_i :set -> (set -> set -> set) -> set.

Axiom unpack_e_i_eq : forall Phi:set -> set -> set,
  forall X, forall c:set, unpack_e_i (pack_e X c) Phi = Phi X c.

(* Parameter unpack_e_o "f3affb534ca9027c56d1a15dee5adcbb277a5c372d01209261fee22c6dd6eab2" "8e748578991012f665a61609fe4f951aa5e3791f69c71f5a551e29e39855416c" *)
Parameter unpack_e_o :set -> (set -> set -> prop) -> prop.

Axiom unpack_e_o_eq : forall Phi:set -> set -> prop,
  forall X, forall c:set, unpack_e_o (pack_e X c) Phi = Phi X c.

(* Parameter pack_u "9575c80a2655d3953184d74d13bd5860d4f415acbfc25d279378b4036579af65" "119d13725af3373dd508f147836c2eff5ff5acf92a1074ad6c114b181ea8a933" *)
Parameter pack_u :set -> (set -> set) -> set.

Axiom pack_u_0_eq : forall S X, forall F:set -> set, S = pack_u X F -> X = S 0.

Axiom pack_u_0_eq2 : forall X, forall F:set -> set, X = pack_u X F 0.

Axiom pack_u_1_eq : forall S X, forall F:set -> set, S = pack_u X F -> forall x :e X, F x = decode_u (S 1) x.

Axiom pack_u_1_eq2 : forall X, forall F:set -> set, forall x :e X, F x = decode_u (pack_u X F 1) x.

Axiom pack_u_inj: forall X X', forall F F':set -> set, pack_u X F = pack_u X' F' -> X = X' /\ forall x :e X, F x = F' x.

Axiom pack_u_ext : forall X, forall F F':set -> set,
     (forall x :e X, F x = F' x)
  -> pack_u X F = pack_u X F'.

(* Parameter struct_u "5f8f4c8326fb150e4602e1f88fbe7bacc34f447e140c05d6f871baeb3b8edd0b" "df14296f07f39c656a6467de607eb3ced299a130355447584c264061b5275b93" *)
Parameter struct_u :set -> prop.

Axiom pack_struct_u_I: forall X, forall F:set -> set, (forall x :e X, F x :e X) -> struct_u (pack_u X F).

Axiom pack_struct_u_E1: forall X, forall F:set -> set, struct_u (pack_u X F) -> forall x :e X, F x :e X.

Axiom struct_u_eta: forall S, struct_u S -> S = pack_u (S 0) (decode_u (S 1)).

(* Parameter unpack_u_i "4e62ce5c996f13a11eb05d8dbff98e7acceaca2d3b3a570bea862ad74b79f4df" "111dc52d4fe7026b5a4da1edbfb7867d219362a0e5da0682d7a644a362d95997" *)
Parameter unpack_u_i :set -> (set -> (set -> set) -> set) -> set.

Axiom unpack_u_i_eq : forall Phi:set -> (set -> set) -> set,
  forall X, forall F:set -> set,
  (forall F':set -> set, (forall x :e X, F x = F' x) -> Phi X F' = Phi X F)
  ->
  unpack_u_i (pack_u X F) Phi = Phi X F.

(* Parameter unpack_u_o "22baf0455fa7619b6958e5bd762f4085bae580997860844329722650209d24bf" "eb32c2161bb5020efad8203cd45aa4738a4908823619b55963cc2fd1f9830098" *)
Parameter unpack_u_o :set -> (set -> (set -> set) -> prop) -> prop.

Axiom unpack_u_o_eq : forall Phi:set -> (set -> set) -> prop,
  forall X, forall F:set -> set,
  (forall F':set -> set, (forall x :e X, F x = F' x) -> Phi X F' = Phi X F)
  ->
  unpack_u_o (pack_u X F) Phi = Phi X F.

(* Parameter pack_b "e007d96601771e291e9083ce21b5e97703bce4ff5257fec59b7ed3dbb05b5319" "855387af88aad68b5f942a3a97029fcd79fe0a4e781cdf546d058297f8a483ce" *)
Parameter pack_b :set -> (set -> set -> set) -> set.

Axiom pack_b_0_eq : forall S X, forall F:set -> set -> set, S = pack_b X F -> X = S 0.

Axiom pack_b_0_eq2 : forall X, forall F:set -> set -> set, X = pack_b X F 0.

Axiom pack_b_1_eq : forall S X, forall F:set -> set -> set, S = pack_b X F -> forall x y :e X, F x y = decode_b (S 1) x y.

Axiom pack_b_1_eq2 : forall X, forall F:set -> set -> set, forall x y :e X, F x y = decode_b (pack_b X F 1) x y.

Axiom pack_b_inj: forall X X', forall F F':set -> set -> set, pack_b X F = pack_b X' F' -> X = X' /\ forall x y :e X, F x y = F' x y.

Axiom pack_b_ext : forall X, forall F F':set -> set -> set,
     (forall x y :e X, F x y = F' x y)
  -> pack_b X F = pack_b X F'.

(* Parameter struct_b "8362706412591cb4be4f57a479e94d2219507374d13076e2e8c6636ab9c4fc08" "54dbd3a1c5d7d09ab77e3b5f4c62ce5467ada0cf451d47ee29b7359cc44017cc" *)
Parameter struct_b :set -> prop.

Axiom pack_struct_b_I: forall X, forall F:set -> set -> set, (forall x y :e X, F x y :e X) -> struct_b (pack_b X F).

Axiom pack_struct_b_E1: forall X, forall F:set -> set -> set, struct_b (pack_b X F) -> forall x y :e X, F x y :e X.

Axiom struct_b_eta: forall S, struct_b S -> S = pack_b (S 0) (decode_b (S 1)).

(* Parameter unpack_b_i "2890e728fd41ee56580615f32603326f19352dda5a1deea69ef696e560d62300" "b3bb92bcc166500c6f6465bf41e67a407d3435b2ce2ac6763fb02fac8e30640e" *)
Parameter unpack_b_i :set -> (set -> (set -> set -> set) -> set) -> set.

Axiom unpack_b_i_eq : forall Phi:set -> (set -> set -> set) -> set,
  forall X, forall F:set -> set -> set,
  (forall F':set -> set -> set, (forall x y :e X, F x y = F' x y) -> Phi X F' = Phi X F)
  ->
  unpack_b_i (pack_b X F) Phi = Phi X F.

(* Parameter unpack_b_o "0fa2c67750f22ef718feacbb3375b43caa7129d02200572180f9cfe7abf54cec" "0601c1c35ff2c84ae36acdecfae98d553546d98a227f007481baf6b962cc1dc8" *)
Parameter unpack_b_o :set -> (set -> (set -> set -> set) -> prop) -> prop.

Axiom unpack_b_o_eq : forall Phi:set -> (set -> set -> set) -> prop,
  forall X, forall F:set -> set -> set,
  (forall F':set -> set -> set, (forall x y :e X, F x y = F' x y) -> Phi X F' = Phi X F)
  ->
  unpack_b_o (pack_b X F) Phi = Phi X F.

(* Parameter pack_p "3c539dbbee9d5ff440b9024180e52e9c2adde77bbaa8264d8f67d724d8c8cb25" "d5afae717eff5e7035dc846b590d96bd5a7727284f8ff94e161398c148ab897f" *)
Parameter pack_p :set -> (set -> prop) -> set.

Axiom pack_p_0_eq : forall S X, forall P:set -> prop, S = pack_p X P -> X = S 0.

Axiom pack_p_0_eq2 : forall X, forall P:set -> prop, X = pack_p X P 0.

Axiom pack_p_1_eq : forall S X, forall P:set -> prop, S = pack_p X P -> forall x :e X, P x = decode_p (S 1) x.

Axiom pack_p_1_eq2 : forall X, forall P:set -> prop, forall x :e X, P x = decode_p (pack_p X P 1) x.

Axiom pack_p_inj: forall X X', forall P P':set -> prop, pack_p X P = pack_p X' P' -> X = X' /\ forall x :e X, P x = P' x.

Axiom pack_p_ext : forall X, forall P P':set -> prop,
     (forall x :e X, P x <-> P' x)
  -> pack_p X P = pack_p X P'.

(* Parameter struct_p "1d236ab2eeffe5c2a0b53d462ef26ecaca94bfe3e1b51cd50fc0253d7c98b44a" "b927035076bdb3f2b856017733102a46ad6a0c52f1f4808b6c0cc6bde29328b6" *)
Parameter struct_p :set -> prop.

Axiom pack_struct_p_I: forall X, forall P:set -> prop, struct_p (pack_p X P).

Axiom struct_p_eta: forall S, struct_p S -> S = pack_p (S 0) (decode_p (S 1)).

(* Parameter unpack_p_i "e24c519b20075049733185165766605b441fbcc5ee0900c9bd48c0c792ba5859" "dda44134499f98b412d13481678ca2262d520390676ab6b40e0cb0e0768412f6" *)
Parameter unpack_p_i :set -> (set -> (set -> prop) -> set) -> set.

Axiom unpack_p_i_eq : forall Phi:set -> (set -> prop) -> set,
  forall X, forall P:set -> prop,
  (forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X P' = Phi X P)
  ->
  unpack_p_i (pack_p X P) Phi = Phi X P.

(* Parameter unpack_p_o "4b92ca0383b3989d01ddc4ec8bdf940b54163f9a29e460dfd502939eb880162f" "30f11fc88aca72af37fd2a4235aa22f28a552bbc44f1fb01f4edf7f2b7e376ac" *)
Parameter unpack_p_o :set -> (set -> (set -> prop) -> prop) -> prop.

Axiom unpack_p_o_eq : forall Phi:set -> (set -> prop) -> prop,
  forall X, forall P:set -> prop,
  (forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X P' = Phi X P)
  ->
  unpack_p_o (pack_p X P) Phi = Phi X P.

(* Parameter pack_r "39d80099e1b48aed4548f424ae4f1ff25b2d595828aff4b3a5abe232ca0348b5" "217a7f92acc207b15961c90039aa929f0bd5d9212f66ce5595c3af1dd8b9737e" *)
Parameter pack_r :set -> (set -> set -> prop) -> set.

Axiom pack_r_0_eq : forall S X, forall R:set -> set -> prop, S = pack_r X R -> X = S 0.

Axiom pack_r_0_eq2 : forall X, forall R:set -> set -> prop, X = pack_r X R 0.

Axiom pack_r_1_eq : forall S X, forall R:set -> set -> prop, S = pack_r X R -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_1_eq2 : forall X, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_r X R 1) x y.

Axiom pack_r_inj: forall X X', forall R R':set -> set -> prop, pack_r X R = pack_r X' R' -> X = X' /\ forall x y :e X, R x y = R' x y.

Axiom pack_r_ext : forall X, forall R R':set -> set -> prop,
     (forall x y :e X, R x y <-> R' x y)
  -> pack_r X R = pack_r X R'.

(* Parameter struct_r "40bec47cb8d77d09a8db5316dde8cb26bd415be5a40f26f59f167843da58eb63" "2c39441e10ec56a1684beb291702e235e2a9e44db516e916d62ce426108cfd26" *)
Parameter struct_r :set -> prop.

Axiom pack_struct_r_I: forall X, forall R:set -> set -> prop, struct_r (pack_r X R).

Axiom struct_r_eta: forall S, struct_r S -> S = pack_r (S 0) (decode_r (S 1)).

(* Parameter unpack_r_i "8e3580f89907c6b36f6b57ad7234db3561b008aa45f8fa86d5e51a7a85cd74b6" "3ace9e6e064ec2b6e839b94e81788f9c63b22e51ec9dec8ee535d50649401cf4" *)
Parameter unpack_r_i :set -> (set -> (set -> set -> prop) -> set) -> set.

Axiom unpack_r_i_eq : forall Phi:set -> (set -> set -> prop) -> set,
  forall X, forall R:set -> set -> prop,
  (forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X R' = Phi X R)
  ->
  unpack_r_i (pack_r X R) Phi = Phi X R.

(* Parameter unpack_r_o "8d2ef9c9e522891d1fe605a62dffeab8aefb6325650e4eab14135e7eee8002c5" "e3e6af0984cda0a02912e4f3e09614b67fc0167c625954f0ead4110f52ede086" *)
Parameter unpack_r_o :set -> (set -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_r_o_eq : forall Phi:set -> (set -> set -> prop) -> prop,
  forall X, forall R:set -> set -> prop,
  (forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X R' = Phi X R)
  ->
  unpack_r_o (pack_r X R) Phi = Phi X R.

(* Parameter pack_c "545700730c93ce350b761ead914d98adf2edbd5c9f253d9a6df972641fee3aed" "cd75b74e4a07d881da0b0eda458a004806ed5c24b08fd3fef0f43e91f64c4633" *)
Parameter pack_c :set -> ((set -> prop) -> prop) -> set.

Axiom pack_c_0_eq : forall S X, forall C:(set -> prop) -> prop, S = pack_c X C -> X = S 0.

Axiom pack_c_0_eq2 : forall X, forall C:(set -> prop) -> prop, X = pack_c X C 0.

Axiom pack_c_1_eq : forall S X, forall C:(set -> prop) -> prop, S = pack_c X C -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_1_eq2 : forall X, forall C:(set -> prop) -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c X C 1) U.

Axiom pack_c_inj: forall X X', forall C C':(set -> prop) -> prop, pack_c X C = pack_c X' C' -> X = X' /\ forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U.

Axiom pack_c_ext : forall X, forall C C':(set -> prop) -> prop,
     (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U))
  -> pack_c X C = pack_c X C'.

(* Parameter struct_c "6b9d57d639bb4c40d5626cf4d607e750e8cce237591fcc20c9faaf1e4b9791b2" "9e6b18b2a018f4fb700d2e18f2d46585471c8c96cd648d742b7dbda08c349b17" *)
Parameter struct_c :set -> prop.

Axiom pack_struct_c_I: forall X, forall C:(set -> prop) -> prop, struct_c (pack_c X C).

Axiom struct_c_eta: forall S, struct_c S -> S = pack_c (S 0) (decode_c (S 1)).

(* Parameter unpack_c_i "61506fb3d41686d186b4403e49371053ce82103f40b14367780a74e0d62e06bf" "a01360cac9e6ba0460797b632a50d83b7fadb5eadb897964c7102639062b23ba" *)
Parameter unpack_c_i :set -> (set -> ((set -> prop) -> prop) -> set) -> set.

Axiom unpack_c_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop,
  (forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) -> Phi X C' = Phi X C)
  ->
  unpack_c_i (pack_c X C) Phi = Phi X C.

(* Parameter unpack_c_o "de068dc4f75465842d1d600bf2bf3a79223eb41ba14d4767bbaf047938e706ec" "939baef108d0de16a824c79fc4e61d99b3a9047993a202a0f47c60d551b65834" *)
Parameter unpack_c_o :set -> (set -> ((set -> prop) -> prop) -> prop) -> prop.

Axiom unpack_c_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop,
  (forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) -> Phi X C' = Phi X C)
  ->
  unpack_c_o (pack_c X C) Phi = Phi X C.
(* Parameter pack_c_b "d8be281d1821af1fcc3d2ceb6ba5bb4809bc45969a90461ac1cd741d8e2b4d2c" "d35200701b54a62a53a281fc43cd6df2246a9943300c765f1988b7fcde263c68" *)
Parameter pack_c_b :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set.

Axiom pack_c_b_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, S = pack_c_b X C f -> X = S 0.

Axiom pack_c_b_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, X = pack_c_b X C f 0.

Axiom pack_c_b_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, S = pack_c_b X C f -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b X C f 1) U.

Axiom pack_c_b_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, S = pack_c_b X C f -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall x y :e X, f x y = decode_b (pack_c_b X C f 2) x y.

Axiom pack_c_b_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, pack_c_b X C f = pack_c_b X' C' f' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y).

Axiom pack_c_b_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 pack_c_b X C f = pack_c_b X C' f'.

(* Parameter struct_c_b "546009d11d59ac41fa9d3c8ef2eff46d28c48a3cd482fac9d1980125c73fa11c" "b2f9749e7ac03b1ecc376e65c89c7779052a6ead74d7e6d7774325509b168427" *)
Parameter struct_c_b :set -> prop.

Axiom pack_struct_c_b_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> struct_c_b (pack_c_b X C f).

Axiom pack_struct_c_b_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, struct_c_b (pack_c_b X C f) -> forall x y :e X, f x y :e X.

Axiom struct_c_b_eta: forall S, struct_c_b S -> S = pack_c_b (S 0) (decode_c (S 1)) (decode_b (S 2)).


(* Parameter unpack_c_b_i "f9f5ede2cc429177a107e782f1cb0467d7b0db3b96a7c8de3e565300501eda45" "fa593a80afb93527bac49f9287129fbda0d6fb9ee6392356ca46a5c64a42bbec" *)
Parameter unpack_c_b_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set) -> set.

Axiom unpack_c_b_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X C' f' = Phi X C f)
  ->
  unpack_c_b_i (pack_c_b X C f) Phi = Phi X C f.


(* Parameter unpack_c_b_o "c56ad2fb4137bb8a2d57d2665c8a331ab5bb82297c4c71503b79de3849184270" "c4696ff1329f68a98a33a2977258c2e9337c1a537d1e1d2524226d896b06de42" *)
Parameter unpack_c_b_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> prop) -> prop.

Axiom unpack_c_b_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X C' f' = Phi X C f)
  ->
  unpack_c_b_o (pack_c_b X C f) Phi = Phi X C f.


(* Parameter pack_c_u "7abbcc70de4aeac4a744a56b5012888489baf56c03e18030dd8e710c18364b21" "c1215a8575ddadedb7d1c7e1a736912c2f48f11d2eae3673fbdd29586c848f3f" *)
Parameter pack_c_u :set -> ((set -> prop) -> prop) -> (set -> set) -> set.

Axiom pack_c_u_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, S = pack_c_u X C i -> X = S 0.

Axiom pack_c_u_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, X = pack_c_u X C i 0.

Axiom pack_c_u_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, S = pack_c_u X C i -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u X C i 1) U.

Axiom pack_c_u_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, S = pack_c_u X C i -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall x :e X, i x = decode_u (pack_c_u X C i 2) x.

Axiom pack_c_u_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, pack_c_u X C i = pack_c_u X' C' i' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x).

Axiom pack_c_u_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 pack_c_u X C i = pack_c_u X C' i'.

(* Parameter struct_c_u "10c7edbdfea7c668fd8a51d3c28767488294039d754a8302ce4d30439b2fc428" "060534f892d9b0f266b9413fa66ec52856a3a52aa8d5db4349f318027729ae5f" *)
Parameter struct_c_u :set -> prop.

Axiom pack_struct_c_u_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> struct_c_u (pack_c_u X C i).

Axiom pack_struct_c_u_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, struct_c_u (pack_c_u X C i) -> forall x :e X, i x :e X.

Axiom struct_c_u_eta: forall S, struct_c_u S -> S = pack_c_u (S 0) (decode_c (S 1)) (decode_u (S 2)).


(* Parameter unpack_c_u_i "1a0ea5b498f5aa721572645799258ec12d7af96a543f2bb254eaeb844093ffc1" "ac880c74b2361cdb5b2644d07031381ddfe297807fe9b1ff7da0b75bd02af4f0" *)
Parameter unpack_c_u_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> set) -> set.

Axiom unpack_c_u_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' i' = Phi X C i)
  ->
  unpack_c_u_i (pack_c_u X C i) Phi = Phi X C i.


(* Parameter unpack_c_u_o "210879564e92548c0889c69fa8aa1298134532931e7bf63d5131005eea01e177" "3a8be134e1eb4c1926b1a3e825bdb30b8e14a4f66ab69158bd8cadc5c68693ea" *)
Parameter unpack_c_u_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> prop) -> prop.

Axiom unpack_c_u_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' i' = Phi X C i)
  ->
  unpack_c_u_o (pack_c_u X C i) Phi = Phi X C i.


(* Parameter pack_c_r "27f5c608b8352fef136d1c00ad843d99bd0f9f83b8dffdc96a4419ee97fc2f11" "b4a64e1fb52a756080a63cca89cabd3f5845972327d8f98653a366535b2e7d09" *)
Parameter pack_c_r :set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set.

Axiom pack_c_r_0_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, S = pack_c_r X C R -> X = S 0.

Axiom pack_c_r_0_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, X = pack_c_r X C R 0.

Axiom pack_c_r_1_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, S = pack_c_r X C R -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_r_1_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_r X C R 1) U.

Axiom pack_c_r_2_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, S = pack_c_r X C R -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_c_r_2_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_c_r X C R 2) x y.

Axiom pack_c_r_inj : forall X X', forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, pack_c_r X C R = pack_c_r X' C' R' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_c_r_ext : forall X, forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_r X C R = pack_c_r X C' R'.

(* Parameter struct_c_r "f3ce4893f17fbef8e7a751fbdf8a27525539382822e747dbaff3580a378783d1" "4809fc07e16e7911a96e76c3c360a245de4da3b38de49206e2cdd4e205262c8f" *)
Parameter struct_c_r :set -> prop.

Axiom pack_struct_c_r_I: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, struct_c_r (pack_c_r X C R).

Axiom struct_c_r_eta: forall S, struct_c_r S -> S = pack_c_r (S 0) (decode_c (S 1)) (decode_r (S 2)).


(* Parameter unpack_c_r_i "be3d75245c1a6d7328a6b807595efba757b38fd92f78bf959eae867b64802abd" "b93557e419f44ae37ede64cdd62233621aa933e01ff4fff1765c978bbec17c71" *)
Parameter unpack_c_r_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_c_r_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' R' = Phi X C R)
  ->
  unpack_c_r_i (pack_c_r X C R) Phi = Phi X C R.


(* Parameter unpack_c_r_o "19244321f8853f51343ed5164e6ca4a0ce9cce349b6b0c8148a8bb547c599a41" "e81ec8ac2698ad62030eb74967b08ca4fb6a6ab8d5cd5a006db81eff6640ad0e" *)
Parameter unpack_c_r_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_c_r_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' R' = Phi X C R)
  ->
  unpack_c_r_o (pack_c_r X C R) Phi = Phi X C R.


(* Parameter pack_c_p "6b84c9c3b797aace0bf55e2cb13c75eeb77f8e8b4bc570eabc64d5767ac35e55" "f9f7a3c4a509a6669ee92d2dcf94a810af1e9e876c294b028d86f35c63f36020" *)
Parameter pack_c_p :set -> ((set -> prop) -> prop) -> (set -> prop) -> set.

Axiom pack_c_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, S = pack_c_p X C P -> X = S 0.

Axiom pack_c_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, X = pack_c_p X C P 0.

Axiom pack_c_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, S = pack_c_p X C P -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_p X C P 1) U.

Axiom pack_c_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, S = pack_c_p X C P -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_c_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_c_p X C P 2) x.

Axiom pack_c_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall P P':set -> prop, pack_c_p X C P = pack_c_p X' C' P' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, P x = P' x).

Axiom pack_c_p_ext : forall X, forall C C':(set -> prop) -> prop, forall P P':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_p X C P = pack_c_p X C' P'.

(* Parameter struct_c_p "9fab64b226f13e289c0af13e939c25a7a85be482c5212135f556aa43dbf82402" "c1fc8dca24baedb5ff2d9ae52685431d3e44b9e4e81cef367ebf623a6efa32da" *)
Parameter struct_c_p :set -> prop.

Axiom pack_struct_c_p_I: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, struct_c_p (pack_c_p X C P).

Axiom struct_c_p_eta: forall S, struct_c_p S -> S = pack_c_p (S 0) (decode_c (S 1)) (decode_p (S 2)).


(* Parameter unpack_c_p_i "4951f8577ad2a47b5262aa0f5d17214694df2ea01d8546fe1136f26a6893d648" "4f282aafdd3f1ea565f32155f6b3638d467f41ccadc472d3af5c792782d2f1b1" *)
Parameter unpack_c_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_c_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' P' = Phi X C P)
  ->
  unpack_c_p_i (pack_c_p X C P) Phi = Phi X C P.


(* Parameter unpack_c_p_o "1d2a83e7f1d90cfa16fed1325b214d3b6c1f414ba1d0967f56d7aebcf40e03cc" "57b372a9898e957ca869a3f560d0947f31ebf6569dc987a20d9ac725e74d942a" *)
Parameter unpack_c_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' P' = Phi X C P)
  ->
  unpack_c_p_o (pack_c_p X C P) Phi = Phi X C P.


(* Parameter pack_c_e "445f54cdbad9b30e5945dc3cf10025cf8c04449c2af5649dc52dfad9931dcad2" "98f4edda78eb5bf525cc1a3bd6e62b00ca804f1391e861d4c62e26c539e9fe06" *)
Parameter pack_c_e :set -> ((set -> prop) -> prop) -> set -> set.

Axiom pack_c_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall c:set, S = pack_c_e X C c -> X = S 0.

Axiom pack_c_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall c:set, X = pack_c_e X C c 0.

Axiom pack_c_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall c:set, S = pack_c_e X C c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_e X C c 1) U.

Axiom pack_c_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall c:set, S = pack_c_e X C c -> c = S 2.

Axiom pack_c_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall c:set, c = pack_c_e X C c 2.

Axiom pack_c_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall c c':set, pack_c_e X C c = pack_c_e X' C' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ c = c'.

Axiom pack_c_e_ext : forall X, forall C C':(set -> prop) -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 pack_c_e X C c = pack_c_e X C' c.

(* Parameter struct_c_e "60aefac59c434b445557f59a5f298a1d61d61ad0031f82a7d9edf7f876a42eb2" "19cb92902316fefe9564b22e5ce76065fbd095d1315d8f1f0b3d021882224579" *)
Parameter struct_c_e :set -> prop.

Axiom pack_struct_c_e_I: forall X, forall C:(set -> prop) -> prop, forall c:set, c :e X -> struct_c_e (pack_c_e X C c).

Axiom pack_struct_c_e_E2: forall X, forall C:(set -> prop) -> prop, forall c:set, struct_c_e (pack_c_e X C c) -> c :e X.

Axiom struct_c_e_eta: forall S, struct_c_e S -> S = pack_c_e (S 0) (decode_c (S 1)) (S 2).


(* Parameter unpack_c_e_i "0357a47f3169c628a0b9a2d36d06b8ca714d764f30773d732efef79044f5f50e" "5eaf94508256ea3968c6d6882aadc14b0878b9478cc55175c2f6802dc24a9fa1" *)
Parameter unpack_c_e_i :set -> (set -> ((set -> prop) -> prop) -> set -> set) -> set.

Axiom unpack_c_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) -> Phi X C' c = Phi X C c)
  ->
  unpack_c_e_i (pack_c_e X C c) Phi = Phi X C c.


(* Parameter unpack_c_e_o "93c645c03ebc96add1f96dbe55089a776c996ab834ffaf4f9b5c946fc63f1d12" "8b9801f92c31811164d203dd705faa258353949bf47c0c887a1d9629976ac0b0" *)
Parameter unpack_c_e_o :set -> (set -> ((set -> prop) -> prop) -> set -> prop) -> prop.

Axiom unpack_c_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) -> Phi X C' c = Phi X C c)
  ->
  unpack_c_e_o (pack_c_e X C c) Phi = Phi X C c.


(* Parameter pack_b_b "340ad350ad3d16788af8d7d462d4004804bb7a8b334d6204c37c9a34b02b1486" "997116a5d3d74249a2b03eae8cf5fe113b057431dee26145e1926ea6af014a81" *)
Parameter pack_b_b :set -> (set -> set -> set) -> (set -> set -> set) -> set.

Axiom pack_b_b_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, S = pack_b_b X f g -> X = S 0.

Axiom pack_b_b_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, X = pack_b_b X f g 0.

Axiom pack_b_b_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, S = pack_b_b X f g -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall x y :e X, f x y = decode_b (pack_b_b X f g 1) x y.

Axiom pack_b_b_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, S = pack_b_b X f g -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall x y :e X, g x y = decode_b (pack_b_b X f g 2) x y.

Axiom pack_b_b_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, pack_b_b X f g = pack_b_b X' f' g' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y).

Axiom pack_b_b_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 pack_b_b X f g = pack_b_b X f' g'.

(* Parameter struct_b_b "8aecb427840b61e6757025949c6ddd68aacc216c16733b2f403726e79ae67f06" "1b68d0f2576e74f125932288b6b18c1fd8c669d13e374be1a07cff98d22e82c3" *)
Parameter struct_b_b :set -> prop.

Axiom pack_struct_b_b_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> struct_b_b (pack_b_b X f g).

Axiom pack_struct_b_b_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, struct_b_b (pack_b_b X f g) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, struct_b_b (pack_b_b X f g) -> forall x y :e X, g x y :e X.

Axiom struct_b_b_eta: forall S, struct_b_b S -> S = pack_b_b (S 0) (decode_b (S 1)) (decode_b (S 2)).


(* Parameter unpack_b_b_i "699c1970e3facbee3b574c2c7d03f9ff495b1836c518628b89ba693377b92e6a" "a08ed1095f4d10756ebe6595f9175ad9d47684b8de405acffdada6b86bc23d27" *)
Parameter unpack_b_b_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> set) -> set.

Axiom unpack_b_b_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) -> Phi X f' g' = Phi X f g)
  ->
  unpack_b_b_i (pack_b_b X f g) Phi = Phi X f g.


(* Parameter unpack_b_b_o "4665cb23e522724e83b2df4e9adaa8b6e83c04afd592bddf10804b4216e84618" "65acd9d1246a3f0b94c45c8b27b816fd6a387aa6718da0661a45baff720f730c" *)
Parameter unpack_b_b_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> prop) -> prop.

Axiom unpack_b_b_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) -> Phi X f' g' = Phi X f g)
  ->
  unpack_b_b_o (pack_b_b X f g) Phi = Phi X f g.


(* Parameter pack_b_u "e537b6fba4b59778a55976dde47dfe0243a4fdfe20ed3d76aece325fc7af7270" "45058950347c6373c0803f9fd795c12e8ad9859a329de0e3079ccc7cfef93823" *)
Parameter pack_b_u :set -> (set -> set -> set) -> (set -> set) -> set.

Axiom pack_b_u_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, S = pack_b_u X f i -> X = S 0.

Axiom pack_b_u_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, X = pack_b_u X f i 0.

Axiom pack_b_u_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, S = pack_b_u X f i -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall x y :e X, f x y = decode_b (pack_b_u X f i 1) x y.

Axiom pack_b_u_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, S = pack_b_u X f i -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall x :e X, i x = decode_u (pack_b_u X f i 2) x.

Axiom pack_b_u_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, pack_b_u X f i = pack_b_u X' f' i' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x).

Axiom pack_b_u_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_b_u X f i = pack_b_u X f' i'.

(* Parameter struct_b_u "0310fef5d6de3aefcdedd7233952666c0defc336e65e64aab369ae29825983db" "ae387c8a22b3bccf4137b456bd82b48485621f5c64fbec884db6cad3567b3e4e" *)
Parameter struct_b_u :set -> prop.

Axiom pack_struct_b_u_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> struct_b_u (pack_b_u X f i).

Axiom pack_struct_b_u_E1: forall X, forall f:set -> set -> set, forall i:set -> set, struct_b_u (pack_b_u X f i) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_E2: forall X, forall f:set -> set -> set, forall i:set -> set, struct_b_u (pack_b_u X f i) -> forall x :e X, i x :e X.

Axiom struct_b_u_eta: forall S, struct_b_u S -> S = pack_b_u (S 0) (decode_b (S 1)) (decode_u (S 2)).


(* Parameter unpack_b_u_i "b82947a654ad31e81dafaa3e723b17528c5ce2e67981f221138b9c5532d7df69" "82977e5cc262cfe3c4be845895ce6df9602517b9cee06a2b0ea9b48239b956ea" *)
Parameter unpack_b_u_i :set -> (set -> (set -> set -> set) -> (set -> set) -> set) -> set.

Axiom unpack_b_u_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' i' = Phi X f i)
  ->
  unpack_b_u_i (pack_b_u X f i) Phi = Phi X f i.


(* Parameter unpack_b_u_o "dea0f8e5ff7ac27cde761d4345df91c7db0c8c6b14b6af48f64893ab1f33f59a" "25b8526edc0d9d72ba01661bcbae107396f1301c2f47d8db64d321cf9303414c" *)
Parameter unpack_b_u_o :set -> (set -> (set -> set -> set) -> (set -> set) -> prop) -> prop.

Axiom unpack_b_u_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' i' = Phi X f i)
  ->
  unpack_b_u_o (pack_b_u X f i) Phi = Phi X f i.


(* Parameter pack_b_r "a2fc6f928ae41c209c5eac7be74a37f814d61c0745ef8f6034307ed09e1c5686" "c1a988f7bec2fcd091d09139d1ab36ad55ff3fcacc6e44b749cbd55180e07f83" *)
Parameter pack_b_r :set -> (set -> set -> set) -> (set -> set -> prop) -> set.

Axiom pack_b_r_0_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, S = pack_b_r X f R -> X = S 0.

Axiom pack_b_r_0_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, X = pack_b_r X f R 0.

Axiom pack_b_r_1_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, S = pack_b_r X f R -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_r_1_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_b_r X f R 1) x y.

Axiom pack_b_r_2_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, S = pack_b_r X f R -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_b_r_2_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_b_r X f R 2) x y.

Axiom pack_b_r_inj : forall X X', forall f f':set -> set -> set, forall R R':set -> set -> prop, pack_b_r X f R = pack_b_r X' f' R' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_b_r_ext : forall X, forall f f':set -> set -> set, forall R R':set -> set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_r X f R = pack_b_r X f' R'.

(* Parameter struct_b_r "076668a30dcbec81d5339dad5ed42265abd91a2e3312bee6c2fdd193d58b511f" "aeb0bbf26673f685cab741f56f39d76ee891145e7e9ebebfa2b0e5be7ff49498" *)
Parameter struct_b_r :set -> prop.

Axiom pack_struct_b_r_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, struct_b_r (pack_b_r X f R).

Axiom pack_struct_b_r_E1: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, struct_b_r (pack_b_r X f R) -> forall x y :e X, f x y :e X.

Axiom struct_b_r_eta: forall S, struct_b_r S -> S = pack_b_r (S 0) (decode_b (S 1)) (decode_r (S 2)).


(* Parameter unpack_b_r_i "e45a44e6eb4c58896812ff5b84e10ee4b7bcc201501ab85d5275aa403db86f13" "2f58a77d18214537eaabc2cd537c06c37060e7887b9fc2a59296df8642e2c6d3" *)
Parameter unpack_b_r_i :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_b_r_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' R' = Phi X f R)
  ->
  unpack_b_r_i (pack_b_r X f R) Phi = Phi X f R.


(* Parameter unpack_b_r_o "432a9d24a149d71cc910f69e6ab01202a5bc39aa43e1edf2cb80d5145994d2df" "77ba7b7e34dcaeb29aac7a74a11c335f0ac684257fa8dfb66cdad71c277d2f99" *)
Parameter unpack_b_r_o :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_b_r_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' R' = Phi X f R)
  ->
  unpack_b_r_o (pack_b_r X f R) Phi = Phi X f R.


(* Parameter pack_b_p "13612f3129da8b4946244197cc6322e9c5a1d97feaadb46e4f199ada0b9e321a" "042a24200e6f087d685f710440258dd53c887a0f3fea0e1354fd032ef8c461dd" *)
Parameter pack_b_p :set -> (set -> set -> set) -> (set -> prop) -> set.

Axiom pack_b_p_0_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, S = pack_b_p X f P -> X = S 0.

Axiom pack_b_p_0_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, X = pack_b_p X f P 0.

Axiom pack_b_p_1_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, S = pack_b_p X f P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_p_1_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_p X f P 1) x y.

Axiom pack_b_p_2_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, S = pack_b_p X f P -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_b_p_2_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_p X f P 2) x.

Axiom pack_b_p_inj : forall X X', forall f f':set -> set -> set, forall P P':set -> prop, pack_b_p X f P = pack_b_p X' f' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_b_p_ext : forall X, forall f f':set -> set -> set, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_p X f P = pack_b_p X f' P'.

(* Parameter struct_b_p "91dec9684ffbf80c5812ce3b1466150e658399284964922623267ff1c14d5cdd" "d53de96c47ffaba052fe0dc73d899a0fc5fd675367b39ecbf6468f7c94d97443" *)
Parameter struct_b_p :set -> prop.

Axiom pack_struct_b_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall P:set -> prop, struct_b_p (pack_b_p X f P).

Axiom pack_struct_b_p_E1: forall X, forall f:set -> set -> set, forall P:set -> prop, struct_b_p (pack_b_p X f P) -> forall x y :e X, f x y :e X.

Axiom struct_b_p_eta: forall S, struct_b_p S -> S = pack_b_p (S 0) (decode_b (S 1)) (decode_p (S 2)).


(* Parameter unpack_b_p_i "ba673bd25ac10061be593bc9dfc4dbcf221aa6eec46d748ec1ca551ad6cc3909" "3b27dda090e2760904ab4af718d8b955ccf967cb3d997135ff4fc56784ff3c50" *)
Parameter unpack_b_p_i :set -> (set -> (set -> set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_b_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' P' = Phi X f P)
  ->
  unpack_b_p_i (pack_b_p X f P) Phi = Phi X f P.


(* Parameter unpack_b_p_o "2456cc4e9b343333350b22a559675ebf79e0bef8b99b0cbf00673823641eadd4" "ef7502196331d4ae2a2844ad13a40dbf3defe5e56551e0cac245fc6e268a0752" *)
Parameter unpack_b_p_o :set -> (set -> (set -> set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' P' = Phi X f P)
  ->
  unpack_b_p_o (pack_b_p X f P) Phi = Phi X f P.


(* Parameter pack_b_e "c6b28773f5a22a1cd9965989aebe154b493105b012c02e95771e58a941652073" "7fd27a2858dffdd99e081ecfd69f61f8869ca6a049c3cd2e7d6275f489f71f01" *)
Parameter pack_b_e :set -> (set -> set -> set) -> set -> set.

Axiom pack_b_e_0_eq: forall S X, forall f:set -> set -> set, forall c:set, S = pack_b_e X f c -> X = S 0.

Axiom pack_b_e_0_eq2: forall X, forall f:set -> set -> set, forall c:set, X = pack_b_e X f c 0.

Axiom pack_b_e_1_eq: forall S X, forall f:set -> set -> set, forall c:set, S = pack_b_e X f c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_e_1_eq2: forall X, forall f:set -> set -> set, forall c:set, forall x y :e X, f x y = decode_b (pack_b_e X f c 1) x y.

Axiom pack_b_e_2_eq: forall S X, forall f:set -> set -> set, forall c:set, S = pack_b_e X f c -> c = S 2.

Axiom pack_b_e_2_eq2: forall X, forall f:set -> set -> set, forall c:set, c = pack_b_e X f c 2.

Axiom pack_b_e_inj : forall X X', forall f f':set -> set -> set, forall c c':set, pack_b_e X f c = pack_b_e X' f' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ c = c'.

Axiom pack_b_e_ext : forall X, forall f f':set -> set -> set, forall c,
 (forall x y :e X, f x y = f' x y) ->
 pack_b_e X f c = pack_b_e X f' c.

(* Parameter struct_b_e "666e54e52662d60e53e1542e53129f9cc131ba191c38c8522ceb22df27c747df" "cad2197ffbf0740521cd7e3d23adb6a1efe06e48e6f552650023373d05078282" *)
Parameter struct_b_e :set -> prop.

Axiom pack_struct_b_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall c:set, c :e X -> struct_b_e (pack_b_e X f c).

Axiom pack_struct_b_e_E1: forall X, forall f:set -> set -> set, forall c:set, struct_b_e (pack_b_e X f c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_e_E2: forall X, forall f:set -> set -> set, forall c:set, struct_b_e (pack_b_e X f c) -> c :e X.

Axiom struct_b_e_eta: forall S, struct_b_e S -> S = pack_b_e (S 0) (decode_b (S 1)) (S 2).


(* Parameter unpack_b_e_i "f1826f01eda375893945abf5af7a7ea2524297db20a66e58c29315e5722527e9" "0e7e528ac0497ec6053bf268deec2e9018ed62855eed8dba8b1e8afa4a2f5dbc" *)
Parameter unpack_b_e_i :set -> (set -> (set -> set -> set) -> set -> set) -> set.

Axiom unpack_b_e_i_eq : forall Phi:set -> (set -> set -> set) -> set -> set,
  forall X, forall f:set -> set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X f' c = Phi X f c)
  ->
  unpack_b_e_i (pack_b_e X f c) Phi = Phi X f c.


(* Parameter unpack_b_e_o "d2f34d760f98b2d5064a93b27882f25b753bac8237d9d436bc0acadd6f41bd13" "8cf72781f020b758a8145a9d949df29005ada6f5e2e85e56234e7611f44b4b23" *)
Parameter unpack_b_e_o :set -> (set -> (set -> set -> set) -> set -> prop) -> prop.

Axiom unpack_b_e_o_eq : forall Phi:set -> (set -> set -> set) -> set -> prop,
  forall X, forall f:set -> set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X f' c = Phi X f c)
  ->
  unpack_b_e_o (pack_b_e X f c) Phi = Phi X f c.


(* Parameter pack_u_u "7c68d9837c93b5bb9d9899e09a7de3b165c99a75a6a1e0ba328799ca7b177a2d" "3d856ee3948a657690fec7de9c5ba38aa84daec555f5ed8b12d91e302539979a" *)
Parameter pack_u_u :set -> (set -> set) -> (set -> set) -> set.

Axiom pack_u_u_0_eq: forall S X, forall i:set -> set, forall j:set -> set, S = pack_u_u X i j -> X = S 0.

Axiom pack_u_u_0_eq2: forall X, forall i:set -> set, forall j:set -> set, X = pack_u_u X i j 0.

Axiom pack_u_u_1_eq: forall S X, forall i:set -> set, forall j:set -> set, S = pack_u_u X i j -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall x :e X, i x = decode_u (pack_u_u X i j 1) x.

Axiom pack_u_u_2_eq: forall S X, forall i:set -> set, forall j:set -> set, S = pack_u_u X i j -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall x :e X, j x = decode_u (pack_u_u X i j 2) x.

Axiom pack_u_u_inj : forall X X', forall i i':set -> set, forall j j':set -> set, pack_u_u X i j = pack_u_u X' i' j' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x).

Axiom pack_u_u_ext : forall X, forall i i':set -> set, forall j j':set -> set,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 pack_u_u X i j = pack_u_u X i' j'.

(* Parameter struct_u_u "3e6db9a7cdd7b129997426465647488f6080a894eabd9aa3370cb4d1948627f5" "1bc98ccdfd4f38a6e7b2e8a4c7ed385c842363c826f9e969ccb941927cc8603b" *)
Parameter struct_u_u :set -> prop.

Axiom pack_struct_u_u_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> struct_u_u (pack_u_u X i j).

Axiom pack_struct_u_u_E1: forall X, forall i:set -> set, forall j:set -> set, struct_u_u (pack_u_u X i j) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_E2: forall X, forall i:set -> set, forall j:set -> set, struct_u_u (pack_u_u X i j) -> forall x :e X, j x :e X.

Axiom struct_u_u_eta: forall S, struct_u_u S -> S = pack_u_u (S 0) (decode_u (S 1)) (decode_u (S 2)).


(* Parameter unpack_u_u_i "db8d00d40d257aec72ee98550bf819308629cf4897a421a628a1fd161b544b27" "f8badd95d971e20511a4c5f59914848b9d070032346a2f2afaf80979245dcf36" *)
Parameter unpack_u_u_i :set -> (set -> (set -> set) -> (set -> set) -> set) -> set.

Axiom unpack_u_u_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> set,
  forall X, forall i:set -> set, forall j:set -> set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X i' j' = Phi X i j)
  ->
  unpack_u_u_i (pack_u_u X i j) Phi = Phi X i j.


(* Parameter unpack_u_u_o "0633e5508d2f3909be0d5ddffa659a289848fb3612843d55ef8817470e06ceb2" "f1cc54c79f28c8d8eacc009842fcd6105c19f3606a638ebf6c67e459cff77f41" *)
Parameter unpack_u_u_o :set -> (set -> (set -> set) -> (set -> set) -> prop) -> prop.

Axiom unpack_u_u_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> prop,
  forall X, forall i:set -> set, forall j:set -> set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X i' j' = Phi X i j)
  ->
  unpack_u_u_o (pack_u_u X i j) Phi = Phi X i j.


(* Parameter pack_u_r "c754900d9c69b84b530d535f764fe853c09f28f0a2325f7a96e05b59265f1854" "e514aa2a9042712344fe6654a1f3db39d882c0de2b1dce0ab8f21643afc4d859" *)
Parameter pack_u_r :set -> (set -> set) -> (set -> set -> prop) -> set.

Axiom pack_u_r_0_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, S = pack_u_r X i R -> X = S 0.

Axiom pack_u_r_0_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, X = pack_u_r X i R 0.

Axiom pack_u_r_1_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, S = pack_u_r X i R -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_r_1_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall x :e X, i x = decode_u (pack_u_r X i R 1) x.

Axiom pack_u_r_2_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, S = pack_u_r X i R -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_u_r_2_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_u_r X i R 2) x y.

Axiom pack_u_r_inj : forall X X', forall i i':set -> set, forall R R':set -> set -> prop, pack_u_r X i R = pack_u_r X' i' R' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_u_r_ext : forall X, forall i i':set -> set, forall R R':set -> set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_u_r X i R = pack_u_r X i' R'.

(* Parameter struct_u_r "5799d138e050dcc93847fcf8fcab1826b22a666be5d10e02f4231dedbd9350a3" "eb423a79b2d46776a515f9329f094b91079c1c483e2f958a14d2c432e381819e" *)
Parameter struct_u_r :set -> prop.

Axiom pack_struct_u_r_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, struct_u_r (pack_u_r X i R).

Axiom pack_struct_u_r_E1: forall X, forall i:set -> set, forall R:set -> set -> prop, struct_u_r (pack_u_r X i R) -> forall x :e X, i x :e X.

Axiom struct_u_r_eta: forall S, struct_u_r S -> S = pack_u_r (S 0) (decode_u (S 1)) (decode_r (S 2)).


(* Parameter unpack_u_r_i "a04a98131843489b34590b7342a3446e4ba5f0b891b26827f8eab11c7de765b3" "f6cd2c8aba2a89458deb8f978f784f8ab51a689ec71e9df4975b9a43fa84278f" *)
Parameter unpack_u_r_i :set -> (set -> (set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_u_r_i_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> set,
  forall X, forall i:set -> set, forall R:set -> set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' R' = Phi X i R)
  ->
  unpack_u_r_i (pack_u_r X i R) Phi = Phi X i R.


(* Parameter unpack_u_r_o "0a99eed2a3cc1d434e93beb95235f8eee77748b5f6196a17484b28e3bcb0b8a7" "e6ca8678734a03ca1165d0f40f681a9ed91b8cf0087b02147bf30cea641f730a" *)
Parameter unpack_u_r_o :set -> (set -> (set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_u_r_o_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall i:set -> set, forall R:set -> set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' R' = Phi X i R)
  ->
  unpack_u_r_o (pack_u_r X i R) Phi = Phi X i R.


(* Parameter pack_u_p "06a2ccbfd350e40ba95b870e8cc7a183cb108c400c213e6e7a69ed20f2431eeb" "5f3a4440b78df281af0b9068554814dce0310719d811fdd87d9008095e81ee07" *)
Parameter pack_u_p :set -> (set -> set) -> (set -> prop) -> set.

Axiom pack_u_p_0_eq: forall S X, forall i:set -> set, forall P:set -> prop, S = pack_u_p X i P -> X = S 0.

Axiom pack_u_p_0_eq2: forall X, forall i:set -> set, forall P:set -> prop, X = pack_u_p X i P 0.

Axiom pack_u_p_1_eq: forall S X, forall i:set -> set, forall P:set -> prop, S = pack_u_p X i P -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_p_1_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall x :e X, i x = decode_u (pack_u_p X i P 1) x.

Axiom pack_u_p_2_eq: forall S X, forall i:set -> set, forall P:set -> prop, S = pack_u_p X i P -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_u_p_2_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_u_p X i P 2) x.

Axiom pack_u_p_inj : forall X X', forall i i':set -> set, forall P P':set -> prop, pack_u_p X i P = pack_u_p X' i' P' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x).

Axiom pack_u_p_ext : forall X, forall i i':set -> set, forall P P':set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_p X i P = pack_u_p X i' P'.

(* Parameter struct_u_p "1a579654987eb474745f353a17ddddecd95ec26b0fc30b877208d2ad805e5173" "13462e11ed9328a36e7c1320b28647b94fe7aa3502f8f4aa957a66dbbfe5a502" *)
Parameter struct_u_p :set -> prop.

Axiom pack_struct_u_p_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, struct_u_p (pack_u_p X i P).

Axiom pack_struct_u_p_E1: forall X, forall i:set -> set, forall P:set -> prop, struct_u_p (pack_u_p X i P) -> forall x :e X, i x :e X.

Axiom struct_u_p_eta: forall S, struct_u_p S -> S = pack_u_p (S 0) (decode_u (S 1)) (decode_p (S 2)).


(* Parameter unpack_u_p_i "7e5b56a178d57ba9e7c950fa85041313e6099af700dd0e8e6ce7f7c4d2a3c2fd" "0c65f27eb52a838f730d298c998ad0036c49fc29c588cac77b18107c94c73ed8" *)
Parameter unpack_u_p_i :set -> (set -> (set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_u_p_i_eq : forall Phi:set -> (set -> set) -> (set -> prop) -> set,
  forall X, forall i:set -> set, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' P' = Phi X i P)
  ->
  unpack_u_p_i (pack_u_p X i P) Phi = Phi X i P.


(* Parameter unpack_u_p_o "7675ea6c8b532ff188f19ade971bae9fe274cb0dccdfc3955108de6e7fdf5448" "2cce0daa5907bb9a919d2f8f0459dc97b3b332d4668337677745f22814f1f805" *)
Parameter unpack_u_p_o :set -> (set -> (set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_u_p_o_eq : forall Phi:set -> (set -> set) -> (set -> prop) -> prop,
  forall X, forall i:set -> set, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' P' = Phi X i P)
  ->
  unpack_u_p_o (pack_u_p X i P) Phi = Phi X i P.


(* Parameter pack_u_e "4319960e5916a92bde9ee98510416d194e31e6f57ab1184efaf6f9012f438089" "bc05c9d3696937f3697eeb6f0f4e7f461bb84881af82dd05cc383241a138faac" *)
Parameter pack_u_e :set -> (set -> set) -> set -> set.

Axiom pack_u_e_0_eq: forall S X, forall i:set -> set, forall c:set, S = pack_u_e X i c -> X = S 0.

Axiom pack_u_e_0_eq2: forall X, forall i:set -> set, forall c:set, X = pack_u_e X i c 0.

Axiom pack_u_e_1_eq: forall S X, forall i:set -> set, forall c:set, S = pack_u_e X i c -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_e_1_eq2: forall X, forall i:set -> set, forall c:set, forall x :e X, i x = decode_u (pack_u_e X i c 1) x.

Axiom pack_u_e_2_eq: forall S X, forall i:set -> set, forall c:set, S = pack_u_e X i c -> c = S 2.

Axiom pack_u_e_2_eq2: forall X, forall i:set -> set, forall c:set, c = pack_u_e X i c 2.

Axiom pack_u_e_inj : forall X X', forall i i':set -> set, forall c c':set, pack_u_e X i c = pack_u_e X' i' c' -> X = X' /\ (forall x :e X, i x = i' x) /\ c = c'.

Axiom pack_u_e_ext : forall X, forall i i':set -> set, forall c,
 (forall x :e X, i x = i' x) ->
 pack_u_e X i c = pack_u_e X i' c.

(* Parameter struct_u_e "33658b2c2b6d21d1170663c29fc2f1d2ddc9799c17a1051cd4c4fb8dc4affcce" "bdeeaf26473237ff4d0b8c83251ca88f469d05d4e6b6a9134e86dae797ae7fdc" *)
Parameter struct_u_e :set -> prop.

Axiom pack_struct_u_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall c:set, c :e X -> struct_u_e (pack_u_e X i c).

Axiom pack_struct_u_e_E1: forall X, forall i:set -> set, forall c:set, struct_u_e (pack_u_e X i c) -> forall x :e X, i x :e X.

Axiom pack_struct_u_e_E2: forall X, forall i:set -> set, forall c:set, struct_u_e (pack_u_e X i c) -> c :e X.

Axiom struct_u_e_eta: forall S, struct_u_e S -> S = pack_u_e (S 0) (decode_u (S 1)) (S 2).


(* Parameter unpack_u_e_i "e98d70742a27e263918f720c54df8da9cb8ae4dbddfc02956d666ca85d4ddb7c" "4ff67185102efbff3698817b3f66f27d70659e3b9f4b25ac5601cd06a296bef9" *)
Parameter unpack_u_e_i :set -> (set -> (set -> set) -> set -> set) -> set.

Axiom unpack_u_e_i_eq : forall Phi:set -> (set -> set) -> set -> set,
  forall X, forall i:set -> set, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X i' c = Phi X i c)
  ->
  unpack_u_e_i (pack_u_e X i c) Phi = Phi X i c.


(* Parameter unpack_u_e_o "8099a2079ee963dbfc658754a250a224d34748062bce37e4fcb423c5eab72ad3" "901aecfcf768fe873145995154ca017f07257a93e6d762b34463c1a7389da528" *)
Parameter unpack_u_e_o :set -> (set -> (set -> set) -> set -> prop) -> prop.

Axiom unpack_u_e_o_eq : forall Phi:set -> (set -> set) -> set -> prop,
  forall X, forall i:set -> set, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X i' c = Phi X i c)
  ->
  unpack_u_e_o (pack_u_e X i c) Phi = Phi X i c.


(* Parameter pack_r_r "ba20e0042efa65025d85dc455e41f123213b131957cce25b74acb329daa9370d" "6c0c36708140726eb79c4677d60cbe1921e8c76017c39f662c9755b7bb5021d3" *)
Parameter pack_r_r :set -> (set -> set -> prop) -> (set -> set -> prop) -> set.

Axiom pack_r_r_0_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_r_r X R T -> X = S 0.

Axiom pack_r_r_0_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, X = pack_r_r X R T 0.

Axiom pack_r_r_1_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_r_r X R T -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_r_1_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_r_r X R T 1) x y.

Axiom pack_r_r_2_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_r_r X R T -> forall x y :e X, T x y = decode_r (S 2) x y.

Axiom pack_r_r_2_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, T x y = decode_r (pack_r_r X R T 2) x y.

Axiom pack_r_r_inj : forall X X', forall R R':set -> set -> prop, forall T T':set -> set -> prop, pack_r_r X R T = pack_r_r X' R' T' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y).

Axiom pack_r_r_ext : forall X, forall R R':set -> set -> prop, forall T T':set -> set -> prop,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_r_r X R T = pack_r_r X R' T'.

(* Parameter struct_r_r "2a1620b714f2fde572a044a1c5f6902a5e8fc266fba947bb21a2d9eced0abc58" "1c9222fbad61f836b4b4632c4227c6a28bbb48861f2053f45cfd5ef008940d7f" *)
Parameter struct_r_r :set -> prop.

Axiom pack_struct_r_r_I: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_r_r (pack_r_r X R T).

Axiom struct_r_r_eta: forall S, struct_r_r S -> S = pack_r_r (S 0) (decode_r (S 1)) (decode_r (S 2)).


(* Parameter unpack_r_r_i "91c83bb88ae0fb7390a031b9d0fd7b1a50c5f27dc2d863a820a8050aa072ae2f" "71e0f643550539a46ab027af2bc95864e4007d70d19c26c534bbd1c61dab6b1e" *)
Parameter unpack_r_r_i :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_r_r_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> set,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X R' T' = Phi X R T)
  ->
  unpack_r_r_i (pack_r_r X R T) Phi = Phi X R T.


(* Parameter unpack_r_r_o "537dcc2c39a901d3febf7fefcc4bad2a85dbe0bdc9d869148534e0b1bd549a07" "33360982fa5e2513285f3ab2ade79b82a19a3ada3e68dcdb880aa26e292e1e49" *)
Parameter unpack_r_r_o :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_r_r_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> prop,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X R' T' = Phi X R T)
  ->
  unpack_r_r_o (pack_r_r X R T) Phi = Phi X R T.


(* Parameter pack_r_p "71f76333b5414bdf1ac1b9e172b38f1a12f2d402dddfbcbdc79e64bb9f1de38a" "53cd4e09154fe139486dbc87152391d0da27883957f65cc7af6344917e00e1cc" *)
Parameter pack_r_p :set -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_r_p_0_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, S = pack_r_p X R P -> X = S 0.

Axiom pack_r_p_0_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, X = pack_r_p X R P 0.

Axiom pack_r_p_1_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, S = pack_r_p X R P -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_p_1_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_r_p X R P 1) x y.

Axiom pack_r_p_2_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, S = pack_r_p X R P -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_r_p_2_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_r_p X R P 2) x.

Axiom pack_r_p_inj : forall X X', forall R R':set -> set -> prop, forall P P':set -> prop, pack_r_p X R P = pack_r_p X' R' P' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_r_p_ext : forall X, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_r_p X R P = pack_r_p X R' P'.

(* Parameter struct_r_p "48e721f6c014994d2a8e56ef386bce6509646843f54cb3a21879389b013a29cd" "0efe3f0f0607d97b545679e4520a6cde4c15ac7e4a727dc042ece6c2644b0e6c" *)
Parameter struct_r_p :set -> prop.

Axiom pack_struct_r_p_I: forall X, forall R:set -> set -> prop, forall P:set -> prop, struct_r_p (pack_r_p X R P).

Axiom struct_r_p_eta: forall S, struct_r_p S -> S = pack_r_p (S 0) (decode_r (S 1)) (decode_p (S 2)).


(* Parameter unpack_r_p_i "3cfd92eaffbbf3021c777fcdeb3ad3e8955c45db1b8f0b94dabd7a069ea66599" "012c1858188f292fa1e531bb4f063cea01fd2fc12f716fe99c39f87d5d57c1e2" *)
Parameter unpack_r_p_i :set -> (set -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_r_p_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' P' = Phi X R P)
  ->
  unpack_r_p_i (pack_r_p X R P) Phi = Phi X R P.


(* Parameter unpack_r_p_o "007b14109647401252e430e19ecc3e2354e504e5e89539fe804ae3be67a9b0b1" "18b8585878f79744b509db96b8ab9f54b9c46260b46bb87c5be56ffedcec8a4d" *)
Parameter unpack_r_p_o :set -> (set -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_r_p_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' P' = Phi X R P)
  ->
  unpack_r_p_o (pack_r_p X R P) Phi = Phi X R P.


(* Parameter pack_r_e "5e170b7efd21444d85d9bcb1691c35e2a5465afe08610e1d4cddb5be70290322" "aa4fbd7a4e2ce6e8a15548c6a145b1a21a22d0bda915d8579d365129f4dcd37c" *)
Parameter pack_r_e :set -> (set -> set -> prop) -> set -> set.

Axiom pack_r_e_0_eq: forall S X, forall R:set -> set -> prop, forall c:set, S = pack_r_e X R c -> X = S 0.

Axiom pack_r_e_0_eq2: forall X, forall R:set -> set -> prop, forall c:set, X = pack_r_e X R c 0.

Axiom pack_r_e_1_eq: forall S X, forall R:set -> set -> prop, forall c:set, S = pack_r_e X R c -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_e_1_eq2: forall X, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_r_e X R c 1) x y.

Axiom pack_r_e_2_eq: forall S X, forall R:set -> set -> prop, forall c:set, S = pack_r_e X R c -> c = S 2.

Axiom pack_r_e_2_eq2: forall X, forall R:set -> set -> prop, forall c:set, c = pack_r_e X R c 2.

Axiom pack_r_e_inj : forall X X', forall R R':set -> set -> prop, forall c c':set, pack_r_e X R c = pack_r_e X' R' c' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_r_e_ext : forall X, forall R R':set -> set -> prop, forall c,
 (forall x y :e X, R x y <-> R' x y) ->
 pack_r_e X R c = pack_r_e X R' c.

(* Parameter struct_r_e "20ef164993077693d21dfbd3e184930447dc5651b7b2514d5e70c3d4c7e57c4b" "364557409a6e9656b7ffdd5f218b8f52fdb1cfebf9ed6a29b130c00de7b86eeb" *)
Parameter struct_r_e :set -> prop.

Axiom pack_struct_r_e_I: forall X, forall R:set -> set -> prop, forall c:set, c :e X -> struct_r_e (pack_r_e X R c).

Axiom pack_struct_r_e_E2: forall X, forall R:set -> set -> prop, forall c:set, struct_r_e (pack_r_e X R c) -> c :e X.

Axiom struct_r_e_eta: forall S, struct_r_e S -> S = pack_r_e (S 0) (decode_r (S 1)) (S 2).


(* Parameter unpack_r_e_i "3a762a8bc136d2ac4d571f34849785277f22b3954e3b06e6b2762b6c0b330030" "82827ea5de4442cf4e54c837adfd1e88c7b2a9caa88922fbc58b3367c95850cb" *)
Parameter unpack_r_e_i :set -> (set -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_r_e_i_eq : forall Phi:set -> (set -> set -> prop) -> set -> set,
  forall X, forall R:set -> set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X R' c = Phi X R c)
  ->
  unpack_r_e_i (pack_r_e X R c) Phi = Phi X R c.


(* Parameter unpack_r_e_o "c6a8864069f1f743298bd27b2653f5abb12b3e337f5058af1ed921f0b6bf2318" "948ccb4c19fb8691158d0e4fa2c22c9e9cb857734dc8b39304665543d0b88882" *)
Parameter unpack_r_e_o :set -> (set -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_r_e_o_eq : forall Phi:set -> (set -> set -> prop) -> set -> prop,
  forall X, forall R:set -> set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X R' c = Phi X R c)
  ->
  unpack_r_e_o (pack_r_e X R c) Phi = Phi X R c.


(* Parameter pack_p_p "d297770312547725b67bc1b18ccf9676e88da8ec3a2f939aa931fa624bba7e6a" "aef10565cf238a3380ad0ce313639320c83d74af0471a79ca1d2e4e02605a1e9" *)
Parameter pack_p_p :set -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_p_p_0_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, S = pack_p_p X P Q -> X = S 0.

Axiom pack_p_p_0_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, X = pack_p_p X P Q 0.

Axiom pack_p_p_1_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, S = pack_p_p X P Q -> forall x :e X, P x = decode_p (S 1) x.

Axiom pack_p_p_1_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_p_p X P Q 1) x.

Axiom pack_p_p_2_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, S = pack_p_p X P Q -> forall x :e X, Q x = decode_p (S 2) x.

Axiom pack_p_p_2_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_p_p X P Q 2) x.

Axiom pack_p_p_inj : forall X X', forall P P':set -> prop, forall Q Q':set -> prop, pack_p_p X P Q = pack_p_p X' P' Q' -> X = X' /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_p_p_ext : forall X, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_p_p X P Q = pack_p_p X P' Q'.

(* Parameter struct_p_p "9a8c41e920575c2183e58d43541add604cdaf897fa2e63df2c4952570c921345" "c923a08399746a1635331e9585846e0557df71a9960cf7865bead6fdc472eeaa" *)
Parameter struct_p_p :set -> prop.

Axiom pack_struct_p_p_I: forall X, forall P:set -> prop, forall Q:set -> prop, struct_p_p (pack_p_p X P Q).

Axiom struct_p_p_eta: forall S, struct_p_p S -> S = pack_p_p (S 0) (decode_p (S 1)) (decode_p (S 2)).


(* Parameter unpack_p_p_i "270f2e6c063c3bf2c40708f63a71265d3a306a1c20f8d6e0cc29f94510d429b3" "b94d8989dfeb5ea1ce32799af9267bc9204a8e3190513331d6e293484a595480" *)
Parameter unpack_p_p_i :set -> (set -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_p_p_i_eq : forall Phi:set -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall P:set -> prop, forall Q:set -> prop,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X P' Q' = Phi X P Q)
  ->
  unpack_p_p_i (pack_p_p X P Q) Phi = Phi X P Q.


(* Parameter unpack_p_p_o "972300b0b237688d33c4f5f43d739a5af29b3e591c78f9fadc5d2b00172826ea" "8dd23c94b6e7142df5d35973135b5bc0682d3fd756f9a0c74b546330e5fcd55f" *)
Parameter unpack_p_p_o :set -> (set -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_p_p_o_eq : forall Phi:set -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall P:set -> prop, forall Q:set -> prop,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X P' Q' = Phi X P Q)
  ->
  unpack_p_p_o (pack_p_p X P Q) Phi = Phi X P Q.


(* Parameter pack_p_e "f88c9e44c3869ccb562ca2239593b5a334972a2abd9bdd472d12840a7cde3220" "eba0648d62f3f21938816c93d5acfad0e46cfbf88adb31c93dab80697a4ba022" *)
Parameter pack_p_e :set -> (set -> prop) -> set -> set.

Axiom pack_p_e_0_eq: forall S X, forall P:set -> prop, forall c:set, S = pack_p_e X P c -> X = S 0.

Axiom pack_p_e_0_eq2: forall X, forall P:set -> prop, forall c:set, X = pack_p_e X P c 0.

Axiom pack_p_e_1_eq: forall S X, forall P:set -> prop, forall c:set, S = pack_p_e X P c -> forall x :e X, P x = decode_p (S 1) x.

Axiom pack_p_e_1_eq2: forall X, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_p_e X P c 1) x.

Axiom pack_p_e_2_eq: forall S X, forall P:set -> prop, forall c:set, S = pack_p_e X P c -> c = S 2.

Axiom pack_p_e_2_eq2: forall X, forall P:set -> prop, forall c:set, c = pack_p_e X P c 2.

Axiom pack_p_e_inj : forall X X', forall P P':set -> prop, forall c c':set, pack_p_e X P c = pack_p_e X' P' c' -> X = X' /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_p_e_ext : forall X, forall P P':set -> prop, forall c,
 (forall x :e X, P x <-> P' x) ->
 pack_p_e X P c = pack_p_e X P' c.

(* Parameter struct_p_e "f1bae9eff0a83e28c138e078dba11b9bf5d2d9afdfd90f3bed6c5e36d76ab489" "a2b47513ee6d043349470d50ec56d91024a5cb46e7d1a454edd83ca825c6a673" *)
Parameter struct_p_e :set -> prop.

Axiom pack_struct_p_e_I: forall X, forall P:set -> prop, forall c:set, c :e X -> struct_p_e (pack_p_e X P c).

Axiom pack_struct_p_e_E2: forall X, forall P:set -> prop, forall c:set, struct_p_e (pack_p_e X P c) -> c :e X.

Axiom struct_p_e_eta: forall S, struct_p_e S -> S = pack_p_e (S 0) (decode_p (S 1)) (S 2).


(* Parameter unpack_p_e_i "8a27bec36ad9915ac9d5f5020ecc76545aa091b7259e3169502a10bd55f0e206" "8f2dad7b662a3e20a1e3706ee8888db341856e4f1f1f1f1fabf99fca81f8fbcd" *)
Parameter unpack_p_e_i :set -> (set -> (set -> prop) -> set -> set) -> set.

Axiom unpack_p_e_i_eq : forall Phi:set -> (set -> prop) -> set -> set,
  forall X, forall P:set -> prop, forall c:set,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X P' c = Phi X P c)
  ->
  unpack_p_e_i (pack_p_e X P c) Phi = Phi X P c.


(* Parameter unpack_p_e_o "a35b5c673fc2e6f9eb30a0d50c3683a5996528c383cc784fe894c78c851fedbe" "1f2d09762e88c35523edd321c27066a37d00e92ee6a505544d148de939d9a71a" *)
Parameter unpack_p_e_o :set -> (set -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_p_e_o_eq : forall Phi:set -> (set -> prop) -> set -> prop,
  forall X, forall P:set -> prop, forall c:set,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X P' c = Phi X P c)
  ->
  unpack_p_e_o (pack_p_e X P c) Phi = Phi X P c.


(* Parameter pack_e_e "6ce5b4ac24e1710438bb96ea5e60a80093c241c2b7060d76859073c905c48b37" "64b6b0f6606bd9ff17e7cf3cf465189e1380ca45c96f19f77632d9e7a64f133f" *)
Parameter pack_e_e :set -> set -> set -> set.

Axiom pack_e_e_0_eq: forall S X, forall c:set, forall d:set, S = pack_e_e X c d -> X = S 0.

Axiom pack_e_e_0_eq2: forall X, forall c:set, forall d:set, X = pack_e_e X c d 0.

Axiom pack_e_e_1_eq: forall S X, forall c:set, forall d:set, S = pack_e_e X c d -> c = S 1.

Axiom pack_e_e_1_eq2: forall X, forall c:set, forall d:set, c = pack_e_e X c d 1.

Axiom pack_e_e_2_eq: forall S X, forall c:set, forall d:set, S = pack_e_e X c d -> d = S 2.

Axiom pack_e_e_2_eq2: forall X, forall c:set, forall d:set, d = pack_e_e X c d 2.

Axiom pack_e_e_inj : forall X X', forall c c':set, forall d d':set, pack_e_e X c d = pack_e_e X' c' d' -> X = X' /\ c = c' /\ d = d'.

(* Parameter struct_e_e "28f76ac430eb06168c4c601a7adf978dee4cca2388c112e42ba0ebe69697075e" "b065a005c186ce9758376f578f709a7688d5dac8bf212d24fe5c65665916be27" *)
Parameter struct_e_e :set -> prop.

Axiom pack_struct_e_e_I: forall X, forall c:set, c :e X -> forall d:set, d :e X -> struct_e_e (pack_e_e X c d).

Axiom pack_struct_e_e_E1: forall X, forall c:set, forall d:set, struct_e_e (pack_e_e X c d) -> c :e X.

Axiom pack_struct_e_e_E2: forall X, forall c:set, forall d:set, struct_e_e (pack_e_e X c d) -> d :e X.

Axiom struct_e_e_eta: forall S, struct_e_e S -> S = pack_e_e (S 0) (S 1) (S 2).


(* Parameter unpack_e_e_i "70d1be3a38668b77e3b612af1ae9c285887299acba98954cf3795acc10505d25" "eb6da2a340cebe595eefe752ced5d3950722b1c6ff3f754fa15fe94e013b511b" *)
Parameter unpack_e_e_i :set -> (set -> set -> set -> set) -> set.

Axiom unpack_e_e_i_eq : forall Phi:set -> set -> set -> set,
  forall X, forall c:set, forall d:set,
  unpack_e_e_i (pack_e_e X c d) Phi = Phi X c d.


(* Parameter unpack_e_e_o "9a123198e94cbdbd4a4f92a29268801cfd00667ca57f1c36bfcf7b4c9881bc62" "54c8e329a550e461fa6ede0f916e89015ead41461bc544ae3d80d0e4fc2acb23" *)
Parameter unpack_e_e_o :set -> (set -> set -> set -> prop) -> prop.

Axiom unpack_e_e_o_eq : forall Phi:set -> set -> set -> prop,
  forall X, forall c:set, forall d:set,
  unpack_e_e_o (pack_e_e X c d) Phi = Phi X c d.

(* Parameter pack_c_b_u "99360bbee09ee9a9fd062de809752217950ce942117a7d705abe1cc5040c9cad" "8f13fec64be409c6e571c23050471f1bb64eca698f6acef0a31994c922625fe9" *)
Parameter pack_c_b_u :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set.

Axiom pack_c_b_u_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, S = pack_c_b_u X C f i -> X = S 0.

Axiom pack_c_b_u_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, X = pack_c_b_u X C f i 0.

Axiom pack_c_b_u_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, S = pack_c_b_u X C f i -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_u_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_u X C f i 1) U.

Axiom pack_c_b_u_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, S = pack_c_b_u X C f i -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_u_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall x y :e X, f x y = decode_b (pack_c_b_u X C f i 2) x y.

Axiom pack_c_b_u_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, S = pack_c_b_u X C f i -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_c_b_u_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall x :e X, i x = decode_u (pack_c_b_u X C f i 3) x.

Axiom pack_c_b_u_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, pack_c_b_u X C f i = pack_c_b_u X' C' f' i' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x).

Axiom pack_c_b_u_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_c_b_u X C f i = pack_c_b_u X C' f' i'.

(* Parameter struct_c_b_u "5dac273214220bb7cf68bcdd1f6d902199114ed29ae013fbbae5631af0250fa4" "c621cd3b8adca6611c926416fa83cfb7e8571e4fc5f9c044b66c32c0b4566b1b" *)
Parameter struct_c_b_u :set -> prop.

Axiom pack_struct_c_b_u_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> struct_c_b_u (pack_c_b_u X C f i).

Axiom pack_struct_c_b_u_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, struct_c_b_u (pack_c_b_u X C f i) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_u_E3: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, struct_c_b_u (pack_c_b_u X C f i) -> forall x :e X, i x :e X.

Axiom struct_c_b_u_eta: forall S, struct_c_b_u S -> S = pack_c_b_u (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_u (S 3)).


(* Parameter unpack_c_b_u_i "cf9ca0358096a07b1213c4bef9e6240c79e30b2fe307b1996457e3ed2e66a2cd" "1b7eba04c679090800c6ca488c10eff5b07ab82fbbf6fe002e5a7f5c481a2109" *)
Parameter unpack_c_b_u_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set) -> set.

Axiom unpack_c_b_u_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' f' i' = Phi X C f i)
  ->
  unpack_c_b_u_i (pack_c_b_u X C f i) Phi = Phi X C f i.


(* Parameter unpack_c_b_u_o "90ee73818f7f631530c7c2c544f82872a21caa3b413fe89b37e78d49a812a202" "da17008d03d71eadf97eb5a85e2191a06756a545c06021965fe9d2ab4790fdd2" *)
Parameter unpack_c_b_u_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> prop) -> prop.

Axiom unpack_c_b_u_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' f' i' = Phi X C f i)
  ->
  unpack_c_b_u_o (pack_c_b_u X C f i) Phi = Phi X C f i.


(* Parameter pack_c_b_r "1b7733c9f54b3104fcf656f7aeaf36fb6d597cce7f03e2861a40fa66c54618f2" "4e5bd88819cc6e64b0a7b58c8396b696634a1b30d6fe63c35bdcd2bd5f300c2d" *)
Parameter pack_c_b_r :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set.

Axiom pack_c_b_r_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, S = pack_c_b_r X C f R -> X = S 0.

Axiom pack_c_b_r_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, X = pack_c_b_r X C f R 0.

Axiom pack_c_b_r_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, S = pack_c_b_r X C f R -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_r_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_r X C f R 1) U.

Axiom pack_c_b_r_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, S = pack_c_b_r X C f R -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_r_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_c_b_r X C f R 2) x y.

Axiom pack_c_b_r_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, S = pack_c_b_r X C f R -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_b_r_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_c_b_r X C f R 3) x y.

Axiom pack_c_b_r_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop, pack_c_b_r X C f R = pack_c_b_r X' C' f' R' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_c_b_r_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_b_r X C f R = pack_c_b_r X C' f' R'.

(* Parameter struct_c_b_r "b13d5e1e98748dcd622528baef5051c4390df27729fee3052d7113e65406686d" "b699fe9c93bde46c2759367ced567ecede534ceb75fd04d714801123d3b13f11" *)
Parameter struct_c_b_r :set -> prop.

Axiom pack_struct_c_b_r_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, struct_c_b_r (pack_c_b_r X C f R).

Axiom pack_struct_c_b_r_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, struct_c_b_r (pack_c_b_r X C f R) -> forall x y :e X, f x y :e X.

Axiom struct_c_b_r_eta: forall S, struct_c_b_r S -> S = pack_c_b_r (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_r (S 3)).


(* Parameter unpack_c_b_r_i "2b2bb74b764d9a8577ae7b1e9e73223955dba59d7ddc8f16837ed12ca5aa6e78" "76071b7be9da9c1e73a0407ef0d8e2dd7136dbc047c600e92ed21948acc83c2f" *)
Parameter unpack_c_b_r_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_c_b_r_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' f' R' = Phi X C f R)
  ->
  unpack_c_b_r_i (pack_c_b_r X C f R) Phi = Phi X C f R.


(* Parameter unpack_c_b_r_o "00671f33f10538fb4b8a2d63e64cd3f1720eb8e6b66da0f115780b2a91b3b852" "8f32b19532446f53f4e74a8fd614fa2db3452d9ac0864b4e0a94477a82704feb" *)
Parameter unpack_c_b_r_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_c_b_r_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' f' R' = Phi X C f R)
  ->
  unpack_c_b_r_o (pack_c_b_r X C f R) Phi = Phi X C f R.


(* Parameter pack_c_b_p "5222132bfa836822afc3b76de134b7e0eaefc5d3e7a22ff5ae6876696e902baf" "eee1543c8703c775124c2ab6ba86fa784c072928e8af7e85d784845c227e47b3" *)
Parameter pack_c_b_p :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set.

Axiom pack_c_b_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, S = pack_c_b_p X C f P -> X = S 0.

Axiom pack_c_b_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, X = pack_c_b_p X C f P 0.

Axiom pack_c_b_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, S = pack_c_b_p X C f P -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_p X C f P 1) U.

Axiom pack_c_b_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, S = pack_c_b_p X C f P -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_c_b_p X C f P 2) x y.

Axiom pack_c_b_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, S = pack_c_b_p X C f P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_b_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_c_b_p X C f P 3) x.

Axiom pack_c_b_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall P P':set -> prop, pack_c_b_p X C f P = pack_c_b_p X' C' f' P' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_c_b_p_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall P P':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_b_p X C f P = pack_c_b_p X C' f' P'.

(* Parameter struct_c_b_p "3ef0783d3dd1a33ac200500d1349e48add7a96a58afc37c9b1085fd6a99362fa" "9c4c8fb6534463935b80762d971c1b53a5e09263a04814f932ce1b52243bee43" *)
Parameter struct_c_b_p :set -> prop.

Axiom pack_struct_c_b_p_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall P:set -> prop, struct_c_b_p (pack_c_b_p X C f P).

Axiom pack_struct_c_b_p_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, struct_c_b_p (pack_c_b_p X C f P) -> forall x y :e X, f x y :e X.

Axiom struct_c_b_p_eta: forall S, struct_c_b_p S -> S = pack_c_b_p (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_p (S 3)).


(* Parameter unpack_c_b_p_i "1b1162adc2d182693b06467c1f192888e828aa4bf919297196751e5195bea408" "5448cda41496c09f4b186abf3639d08f1dd41ab6ad673ac553832b76bb029538" *)
Parameter unpack_c_b_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_c_b_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' P' = Phi X C f P)
  ->
  unpack_c_b_p_i (pack_c_b_p X C f P) Phi = Phi X C f P.


(* Parameter unpack_c_b_p_o "552a5240ac3fcb3172b697dca869d49ec5911e777ae9cf2e683a2b57fdb6ee60" "cf22d4b570597952f34b210271e8ea7723444bbd4094f82ebb9981aecd52b414" *)
Parameter unpack_c_b_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_b_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' P' = Phi X C f P)
  ->
  unpack_c_b_p_o (pack_c_b_p X C f P) Phi = Phi X C f P.


(* Parameter pack_c_b_e "4d9e81c35f928755e32e6aabe86639410186d1e61c917e87b021851e6c85897c" "685141de1eb01fc11162c3fdfdfd81e3a2cd2ddfa7cad56c21284920fd1a46b6" *)
Parameter pack_c_b_e :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set.

Axiom pack_c_b_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, S = pack_c_b_e X C f c -> X = S 0.

Axiom pack_c_b_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, X = pack_c_b_e X C f c 0.

Axiom pack_c_b_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, S = pack_c_b_e X C f c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_e X C f c 1) U.

Axiom pack_c_b_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, S = pack_c_b_e X C f c -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall x y :e X, f x y = decode_b (pack_c_b_e X C f c 2) x y.

Axiom pack_c_b_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, S = pack_c_b_e X C f c -> c = S 3.

Axiom pack_c_b_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, c = pack_c_b_e X C f c 3.

Axiom pack_c_b_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall c c':set, pack_c_b_e X C f c = pack_c_b_e X' C' f' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ c = c'.

Axiom pack_c_b_e_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 pack_c_b_e X C f c = pack_c_b_e X C' f' c.

(* Parameter struct_c_b_e "90b348d67415c0609774ada4126c8ca7aed2228cd31f027bbf9174acba7a30d9" "e3048d3645615bbcae450f4336907ef1274e3d37a16e483a3a7b3fffa99df564" *)
Parameter struct_c_b_e :set -> prop.

Axiom pack_struct_c_b_e_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall c:set, c :e X -> struct_c_b_e (pack_c_b_e X C f c).

Axiom pack_struct_c_b_e_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, struct_c_b_e (pack_c_b_e X C f c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_e_E3: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, struct_c_b_e (pack_c_b_e X C f c) -> c :e X.

Axiom struct_c_b_e_eta: forall S, struct_c_b_e S -> S = pack_c_b_e (S 0) (decode_c (S 1)) (decode_b (S 2)) (S 3).


(* Parameter unpack_c_b_e_i "31d0350ef9db205e19f48ba66414af87072329fb7f640fe52306c0d1abd771ed" "103b7f1d4bb71d29fd8963a2f4d72797f657bc16b697f1ce688e84be0aa6603e" *)
Parameter unpack_c_b_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set) -> set.

Axiom unpack_c_b_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X C' f' c = Phi X C f c)
  ->
  unpack_c_b_e_i (pack_c_b_e X C f c) Phi = Phi X C f c.


(* Parameter unpack_c_b_e_o "1d79636e5079ec613c890df7959a100ef524b8e51f8c0cbd8d661a81592a22c4" "bc7671a2cbd310d6c51b41b714a1ec08d2a1376db37ff7f407bdc8709e219396" *)
Parameter unpack_c_b_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> prop) -> prop.

Axiom unpack_c_b_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X C' f' c = Phi X C f c)
  ->
  unpack_c_b_e_o (pack_c_b_e X C f c) Phi = Phi X C f c.


(* Parameter pack_c_u_r "811fc2c6bdce01f0d8df49afca710e51c75bef129c31b6ead67239f26aa9bc77" "96e641d55a050582a66ab23ce4aaaaf47ec9f9670052fba7b091c5add8f91881" *)
Parameter pack_c_u_r :set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set.

Axiom pack_c_u_r_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_u_r X C i R -> X = S 0.

Axiom pack_c_u_r_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, X = pack_c_u_r X C i R 0.

Axiom pack_c_u_r_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_u_r X C i R -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_r_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_r X C i R 1) U.

Axiom pack_c_u_r_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_u_r X C i R -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_r_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall x :e X, i x = decode_u (pack_c_u_r X C i R 2) x.

Axiom pack_c_u_r_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_u_r X C i R -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_u_r_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_c_u_r X C i R 3) x y.

Axiom pack_c_u_r_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop, pack_c_u_r X C i R = pack_c_u_r X' C' i' R' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_c_u_r_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_u_r X C i R = pack_c_u_r X C' i' R'.

(* Parameter struct_c_u_r "3da5b52bd58bc965d9d06af6ff011a0d48fda67cb1671518f30c198dd087b3e3" "63a0843b702d192400c6c82b1983fdc01ad0f75b0cbeca06bf7c6fb21505f65c" *)
Parameter struct_c_u_r :set -> prop.

Axiom pack_struct_c_u_r_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, struct_c_u_r (pack_c_u_r X C i R).

Axiom pack_struct_c_u_r_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, struct_c_u_r (pack_c_u_r X C i R) -> forall x :e X, i x :e X.

Axiom struct_c_u_r_eta: forall S, struct_c_u_r S -> S = pack_c_u_r (S 0) (decode_c (S 1)) (decode_u (S 2)) (decode_r (S 3)).


(* Parameter unpack_c_u_r_i "70b54c2849964d3e99363cec64b9a1c89a4c04ad37a4d1f574fcfe46337e7c29" "0f7918dbce9b7862609f8051390fdeff9abd67f96c1ae7d58ab67717c09fd2b8" *)
Parameter unpack_c_u_r_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_c_u_r_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' i' R' = Phi X C i R)
  ->
  unpack_c_u_r_i (pack_c_u_r X C i R) Phi = Phi X C i R.


(* Parameter unpack_c_u_r_o "ac6abcf53d35e2fdfdddf6e7fd0d6d1bbaa7e6e6dcc5c318798f5d459f519ae4" "43531db944c710ada10a96ce190a36ec2c3cd69ac8fcea6bd8efd9c25609d908" *)
Parameter unpack_c_u_r_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_c_u_r_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' i' R' = Phi X C i R)
  ->
  unpack_c_u_r_o (pack_c_u_r X C i R) Phi = Phi X C i R.


(* Parameter pack_c_u_p "5c40bf85fb548b925cac9d1c5af8b841995b9e4a8ca13591e6d8e7c0372340cc" "1a6357127cc30f87e5308eacfc1e6f9e9e4b2a51e1b619f66ae4a7d9d2dea5a3" *)
Parameter pack_c_u_p :set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set.

Axiom pack_c_u_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, S = pack_c_u_p X C i P -> X = S 0.

Axiom pack_c_u_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, X = pack_c_u_p X C i P 0.

Axiom pack_c_u_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, S = pack_c_u_p X C i P -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_p X C i P 1) U.

Axiom pack_c_u_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, S = pack_c_u_p X C i P -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall x :e X, i x = decode_u (pack_c_u_p X C i P 2) x.

Axiom pack_c_u_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, S = pack_c_u_p X C i P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_u_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_c_u_p X C i P 3) x.

Axiom pack_c_u_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall P P':set -> prop, pack_c_u_p X C i P = pack_c_u_p X' C' i' P' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x).

Axiom pack_c_u_p_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall P P':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_u_p X C i P = pack_c_u_p X C' i' P'.

(* Parameter struct_c_u_p "fe61aee6c1263ac187993eb19e568d32ef3f7fb60226597da4d0d12912f9e16a" "6e5fd5f81bd22b7a196e96a2bda29df9fdefda1b8a6920456c0f39f4d8bec0c8" *)
Parameter struct_c_u_p :set -> prop.

Axiom pack_struct_c_u_p_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, struct_c_u_p (pack_c_u_p X C i P).

Axiom pack_struct_c_u_p_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, struct_c_u_p (pack_c_u_p X C i P) -> forall x :e X, i x :e X.

Axiom struct_c_u_p_eta: forall S, struct_c_u_p S -> S = pack_c_u_p (S 0) (decode_c (S 1)) (decode_u (S 2)) (decode_p (S 3)).


(* Parameter unpack_c_u_p_i "bd69013a7ddb04adc46ac39fe3c6f1e4824e00431578f2a4ab37ea81a0a3dcb7" "21cd8cb41b5762a17ab7ec63e08ce88771638b1974abac64a5867e08e47d207b" *)
Parameter unpack_c_u_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_c_u_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' i' P' = Phi X C i P)
  ->
  unpack_c_u_p_i (pack_c_u_p X C i P) Phi = Phi X C i P.


(* Parameter unpack_c_u_p_o "490f4cba869a357db8fdaf9ed96829dc28d9404785d4b9aa270fdbbf662354c9" "7de61b61595ae396bee2c3cf86a1a54cc3213441cfcf0f39d410e0a410e61eb8" *)
Parameter unpack_c_u_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_u_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' i' P' = Phi X C i P)
  ->
  unpack_c_u_p_o (pack_c_u_p X C i P) Phi = Phi X C i P.


(* Parameter pack_c_u_e "3e7c9c30b7a9ab2d882d59ced44f241373beaa9b03f29ea4877c6ceab2e36993" "d0bcde2e6b3809203645460a07e84cbf27d6eb5de69a5fb9121e271804d480aa" *)
Parameter pack_c_u_e :set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set.

Axiom pack_c_u_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, S = pack_c_u_e X C i c -> X = S 0.

Axiom pack_c_u_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, X = pack_c_u_e X C i c 0.

Axiom pack_c_u_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, S = pack_c_u_e X C i c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_e X C i c 1) U.

Axiom pack_c_u_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, S = pack_c_u_e X C i c -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall x :e X, i x = decode_u (pack_c_u_e X C i c 2) x.

Axiom pack_c_u_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, S = pack_c_u_e X C i c -> c = S 3.

Axiom pack_c_u_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, c = pack_c_u_e X C i c 3.

Axiom pack_c_u_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall c c':set, pack_c_u_e X C i c = pack_c_u_e X' C' i' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ c = c'.

Axiom pack_c_u_e_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 pack_c_u_e X C i c = pack_c_u_e X C' i' c.

(* Parameter struct_c_u_e "35b4665b9c982227d6e608a6dbe9bff49021ecd08d247b8d6491670fe4619156" "fe2e94e9780bfbd823db01f59ca416fff3dca4262c00703aeae71f16c383b656" *)
Parameter struct_c_u_e :set -> prop.

Axiom pack_struct_c_u_e_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall c:set, c :e X -> struct_c_u_e (pack_c_u_e X C i c).

Axiom pack_struct_c_u_e_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, struct_c_u_e (pack_c_u_e X C i c) -> forall x :e X, i x :e X.

Axiom pack_struct_c_u_e_E3: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, struct_c_u_e (pack_c_u_e X C i c) -> c :e X.

Axiom struct_c_u_e_eta: forall S, struct_c_u_e S -> S = pack_c_u_e (S 0) (decode_c (S 1)) (decode_u (S 2)) (S 3).


(* Parameter unpack_c_u_e_i "1a3f4cc0520a7b1b275f1f01560cf1f116e224ba4bff4e56217354410a16e9ff" "8aac19412818d3942a679b81975c9b44e4690c3928c79d9cae873ac31661827c" *)
Parameter unpack_c_u_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set) -> set.

Axiom unpack_c_u_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' i' c = Phi X C i c)
  ->
  unpack_c_u_e_i (pack_c_u_e X C i c) Phi = Phi X C i c.


(* Parameter unpack_c_u_e_o "32c55d6f727e297e8f25b02f683b308732b23712a074751f41e55dada1a46d45" "e709d7bf0b15523d9360b8bd764a7fa49684b10c29338fa10360922b15778ec1" *)
Parameter unpack_c_u_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> set -> prop) -> prop.

Axiom unpack_c_u_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' i' c = Phi X C i c)
  ->
  unpack_c_u_e_o (pack_c_u_e X C i c) Phi = Phi X C i c.


(* Parameter pack_c_r_p "bd7489f7274dc7c5928b73b7f53ce5bf063d707a7d46329e2143590c19fc04d6" "2b3ddf6369cc90e116e7de9da1efdd0032fe36219faae4a783b12c8585b498c9" *)
Parameter pack_c_r_p :set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_c_r_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_r_p X C R P -> X = S 0.

Axiom pack_c_r_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, X = pack_c_r_p X C R P 0.

Axiom pack_c_r_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_r_p X C R P -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_r_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_r_p X C R P 1) U.

Axiom pack_c_r_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_r_p X C R P -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_c_r_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_c_r_p X C R P 2) x y.

Axiom pack_c_r_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_r_p X C R P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_r_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_c_r_p X C R P 3) x.

Axiom pack_c_r_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall P P':set -> prop, pack_c_r_p X C R P = pack_c_r_p X' C' R' P' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_c_r_p_ext : forall X, forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_r_p X C R P = pack_c_r_p X C' R' P'.

(* Parameter struct_c_r_p "a061aec6f47b710c4ca02cbbe64e04ebdbf3d2f3e693a1f5011156d8141c0362" "0b944a0863a8fa5a4e2bb6f396c3be22e69da9f8d9d48014d2506065fe98964b" *)
Parameter struct_c_r_p :set -> prop.

Axiom pack_struct_c_r_p_I: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, struct_c_r_p (pack_c_r_p X C R P).

Axiom struct_c_r_p_eta: forall S, struct_c_r_p S -> S = pack_c_r_p (S 0) (decode_c (S 1)) (decode_r (S 2)) (decode_p (S 3)).


(* Parameter unpack_c_r_p_i "8405689a5259a62cede8b0c3f0d15242a34958ecb1930e8661ec4862a5dd1dde" "36a80eb853e084229624ddcec87eaa071f2a768bda54fab4d56d5f83f5fc555b" *)
Parameter unpack_c_r_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_c_r_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' R' P' = Phi X C R P)
  ->
  unpack_c_r_p_i (pack_c_r_p X C R P) Phi = Phi X C R P.


(* Parameter unpack_c_r_p_o "f420204f44d879977cf3750ddf025be13ac9f5d620c8d70557d9b4adab50a557" "5d891697d117cfbc615773b23149a674a3b8f3480ea14f561c3bd69cd50631ef" *)
Parameter unpack_c_r_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_r_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' R' P' = Phi X C R P)
  ->
  unpack_c_r_p_o (pack_c_r_p X C R P) Phi = Phi X C R P.


(* Parameter pack_c_r_e "1431a7a43be09a9d58ced082a833168bdfbc04f12937b58f163e583f1772334c" "233555fa74e24f3bea60233b6d59187bd022cf0b2dfaff3d2b62b6daaf494453" *)
Parameter pack_c_r_e :set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set.

Axiom pack_c_r_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, S = pack_c_r_e X C R c -> X = S 0.

Axiom pack_c_r_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, X = pack_c_r_e X C R c 0.

Axiom pack_c_r_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, S = pack_c_r_e X C R c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_r_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_r_e X C R c 1) U.

Axiom pack_c_r_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, S = pack_c_r_e X C R c -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_c_r_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_c_r_e X C R c 2) x y.

Axiom pack_c_r_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, S = pack_c_r_e X C R c -> c = S 3.

Axiom pack_c_r_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, c = pack_c_r_e X C R c 3.

Axiom pack_c_r_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall c c':set, pack_c_r_e X C R c = pack_c_r_e X' C' R' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_c_r_e_ext : forall X, forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_r_e X C R c = pack_c_r_e X C' R' c.

(* Parameter struct_c_r_e "6fa39970893ec9507b6d91cf7bba7b13c3c4a9dd71cd645b3a682eb5ae854bee" "284ea4b4a1cfda7254613d57c521a51c4166f414dd0d475dd3590fcf0f62d7b3" *)
Parameter struct_c_r_e :set -> prop.

Axiom pack_struct_c_r_e_I: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, c :e X -> struct_c_r_e (pack_c_r_e X C R c).

Axiom pack_struct_c_r_e_E3: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, struct_c_r_e (pack_c_r_e X C R c) -> c :e X.

Axiom struct_c_r_e_eta: forall S, struct_c_r_e S -> S = pack_c_r_e (S 0) (decode_c (S 1)) (decode_r (S 2)) (S 3).


(* Parameter unpack_c_r_e_i "23a21f16bc6dba21e155424a96d43b6a923f50e0e1624447506f63b72db20c8f" "d2238ba7c1a9d971c10665c2af42428444c6e9419e6efa57e920f8a425afc73b" *)
Parameter unpack_c_r_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_c_r_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' R' c = Phi X C R c)
  ->
  unpack_c_r_e_i (pack_c_r_e X C R c) Phi = Phi X C R c.


(* Parameter unpack_c_r_e_o "4160d4e11a09ccbd5e24992fc4b1ca840a4f0b2d3cc666e2923d978ac4669a13" "f5745651c63c316940f42255d71677d49491fa54a310adc7364ffad703a84759" *)
Parameter unpack_c_r_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_c_r_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' R' c = Phi X C R c)
  ->
  unpack_c_r_e_o (pack_c_r_e X C R c) Phi = Phi X C R c.


(* Parameter pack_c_p_e "4bdbc5f70cabd56f06e636e9e3d5ffabdf425a136f11f69936912f23abfaeabd" "b2aebfde3d4b3039efd54e371d6d6227f0287d201acc0e18d4ffe505ee825345" *)
Parameter pack_c_p_e :set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set.

Axiom pack_c_p_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, S = pack_c_p_e X C P c -> X = S 0.

Axiom pack_c_p_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, X = pack_c_p_e X C P c 0.

Axiom pack_c_p_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, S = pack_c_p_e X C P c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_p_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_p_e X C P c 1) U.

Axiom pack_c_p_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, S = pack_c_p_e X C P c -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_c_p_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_c_p_e X C P c 2) x.

Axiom pack_c_p_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, S = pack_c_p_e X C P c -> c = S 3.

Axiom pack_c_p_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, c = pack_c_p_e X C P c 3.

Axiom pack_c_p_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall P P':set -> prop, forall c c':set, pack_c_p_e X C P c = pack_c_p_e X' C' P' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_c_p_e_ext : forall X, forall C C':(set -> prop) -> prop, forall P P':set -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_p_e X C P c = pack_c_p_e X C' P' c.

(* Parameter struct_c_p_e "bb9a233e1cfe76bcd0deb8a66ade981305b41de49e53fc6583ada8cade8ba59e" "a590c29f883bbbff15e1687f701a8e085351f71cf576ee2ad41366bdf814ad05" *)
Parameter struct_c_p_e :set -> prop.

Axiom pack_struct_c_p_e_I: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, c :e X -> struct_c_p_e (pack_c_p_e X C P c).

Axiom pack_struct_c_p_e_E3: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, struct_c_p_e (pack_c_p_e X C P c) -> c :e X.

Axiom struct_c_p_e_eta: forall S, struct_c_p_e S -> S = pack_c_p_e (S 0) (decode_c (S 1)) (decode_p (S 2)) (S 3).


(* Parameter unpack_c_p_e_i "aa7f34d1eecd9f2b864358096ca172b3d3f76d379e7c21790530eb5cd5e35532" "dfca613072d4e608fa642535c91b819c9c9770ae1799e070f7a9698b0331a15d" *)
Parameter unpack_c_p_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_c_p_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' P' c = Phi X C P c)
  ->
  unpack_c_p_e_i (pack_c_p_e X C P c) Phi = Phi X C P c.


(* Parameter unpack_c_p_e_o "d446b56cc350a9b53b6a967e704f2c733a662f30ed74f7a1dc6756a1824df035" "00a18c69868d5ff746c48a6f433e5fd4a002bee1bac9c44a1ea00e93c7a09e6b" *)
Parameter unpack_c_p_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_c_p_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' P' c = Phi X C P c)
  ->
  unpack_c_p_e_o (pack_c_p_e X C P c) Phi = Phi X C P c.


(* Parameter pack_b_b_b "78987e6038018858f5a2fb23e7ad908a9459d8d6212a724825f68f796877110c" "a349cf47be70392f43f810b6bdc0888e3c607ce99d777874655b380547dfbcf0" *)
Parameter pack_b_b_b :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set.

Axiom pack_b_b_b_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, S = pack_b_b_b X f g h -> X = S 0.

Axiom pack_b_b_b_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, X = pack_b_b_b X f g h 0.

Axiom pack_b_b_b_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, S = pack_b_b_b X f g h -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_b_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall x y :e X, f x y = decode_b (pack_b_b_b X f g h 1) x y.

Axiom pack_b_b_b_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, S = pack_b_b_b X f g h -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_b_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall x y :e X, g x y = decode_b (pack_b_b_b X f g h 2) x y.

Axiom pack_b_b_b_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, S = pack_b_b_b X f g h -> forall x y :e X, h x y = decode_b (S 3) x y.

Axiom pack_b_b_b_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall x y :e X, h x y = decode_b (pack_b_b_b X f g h 3) x y.

Axiom pack_b_b_b_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, pack_b_b_b X f g h = pack_b_b_b X' f' g' h' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, h x y = h' x y).

Axiom pack_b_b_b_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, h x y = h' x y) ->
 pack_b_b_b X f g h = pack_b_b_b X f' g' h'.

(* Parameter struct_b_b_b "3e793684b1addcd218212526a72be5635db67ed49f73be3529ff95ab37b73cdd" "0004027ff960a5996b206b1e15d793ecc035e3e376badaabddcd441d11184538" *)
Parameter struct_b_b_b :set -> prop.

Axiom pack_struct_b_b_b_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall h:set -> set -> set, (forall x y :e X, h x y :e X) -> struct_b_b_b (pack_b_b_b X f g h).

Axiom pack_struct_b_b_b_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, struct_b_b_b (pack_b_b_b X f g h) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_b_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, struct_b_b_b (pack_b_b_b X f g h) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_b_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, struct_b_b_b (pack_b_b_b X f g h) -> forall x y :e X, h x y :e X.

Axiom struct_b_b_b_eta: forall S, struct_b_b_b S -> S = pack_b_b_b (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_b (S 3)).


(* Parameter unpack_b_b_b_i "c517aa279ec8febee0bcb0dc0e62738cf8758e5ac8e1d39a1727eed88500ac3d" "86445a7e1b5aaf93718f5bf38b6b079a71fd58535f6c16e104f4ed9bafd6f3f9" *)
Parameter unpack_b_b_b_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set) -> set.

Axiom unpack_b_b_b_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) -> Phi X f' g' h' = Phi X f g h)
  ->
  unpack_b_b_b_i (pack_b_b_b X f g h) Phi = Phi X f g h.


(* Parameter unpack_b_b_b_o "fdd9dd2c377178a0f1e23a76a9b730531e029d83b41e54cb799c0dd3974f0bed" "2ff32ad5e2a92335aca651325bac8303352567725032a867f53cd0aaceadb844" *)
Parameter unpack_b_b_b_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> prop) -> prop.

Axiom unpack_b_b_b_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) -> Phi X f' g' h' = Phi X f g h)
  ->
  unpack_b_b_b_o (pack_b_b_b X f g h) Phi = Phi X f g h.


(* Parameter pack_b_b_u "b1bec0f8759838ffaa108904af3ea66a3ba3f72be69f1069a1c1490cf13cf260" "584c3c09071bc6dce145a3c24e6158874ca4f8c245ce5f2a29957a3884bdabae" *)
Parameter pack_b_b_u :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set.

Axiom pack_b_b_u_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, S = pack_b_b_u X f g i -> X = S 0.

Axiom pack_b_b_u_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, X = pack_b_b_u X f g i 0.

Axiom pack_b_b_u_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, S = pack_b_b_u X f g i -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_u_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall x y :e X, f x y = decode_b (pack_b_b_u X f g i 1) x y.

Axiom pack_b_b_u_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, S = pack_b_b_u X f g i -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_u_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall x y :e X, g x y = decode_b (pack_b_b_u X f g i 2) x y.

Axiom pack_b_b_u_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, S = pack_b_b_u X f g i -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_b_b_u_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall x :e X, i x = decode_u (pack_b_b_u X f g i 3) x.

Axiom pack_b_b_u_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, pack_b_b_u X f g i = pack_b_b_u X' f' g' i' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, i x = i' x).

Axiom pack_b_b_u_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_b_b_u X f g i = pack_b_b_u X f' g' i'.

(* Parameter struct_b_b_u "81dc7fcbb73b82e3d98455d8ff2b9bc61777b03ab6271d6c7dc0f25556888fb3" "1f289d381c78ce2899140a302a0ff497414f2db252b1a57d94a01239193294e6" *)
Parameter struct_b_b_u :set -> prop.

Axiom pack_struct_b_b_u_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> struct_b_b_u (pack_b_b_u X f g i).

Axiom pack_struct_b_b_u_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, struct_b_b_u (pack_b_b_u X f g i) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_u_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, struct_b_b_u (pack_b_b_u X f g i) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_u_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, struct_b_b_u (pack_b_b_u X f g i) -> forall x :e X, i x :e X.

Axiom struct_b_b_u_eta: forall S, struct_b_b_u S -> S = pack_b_b_u (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_u (S 3)).


(* Parameter unpack_b_b_u_i "9e9705176ccc338edbb437851f69466a6053527424223eb8ccd001e919abbb98" "ba3d8735df1a9677f77cf1086b822f080ed9edd829b4e590e2073d9745d0bc27" *)
Parameter unpack_b_b_u_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set) -> set.

Axiom unpack_b_b_u_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' g' i' = Phi X f g i)
  ->
  unpack_b_b_u_i (pack_b_b_u X f g i) Phi = Phi X f g i.


(* Parameter unpack_b_b_u_o "e9dd0c27a8b0cdb6b3d52606ca7631701912ea9db8d458896511cca92d779969" "842daf7ac4b5653b939631e93c679d3e6b333a55c13baa9c5e8f49548123a2d4" *)
Parameter unpack_b_b_u_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> prop) -> prop.

Axiom unpack_b_b_u_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' g' i' = Phi X f g i)
  ->
  unpack_b_b_u_o (pack_b_b_u X f g i) Phi = Phi X f g i.


(* Parameter pack_b_b_r "c70e2939ae9e106dcf8d8e6a2fc8a4522d039bdb882bd5fd34c9bb38529bcbe4" "09b398329317357ec399afc73d5d25cb8c90a28088c6f78743391363c050d598" *)
Parameter pack_b_b_r :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set.

Axiom pack_b_b_r_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_r X f g R -> X = S 0.

Axiom pack_b_b_r_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, X = pack_b_b_r X f g R 0.

Axiom pack_b_b_r_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_r X f g R -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_r_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_r X f g R 1) x y.

Axiom pack_b_b_r_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_r X f g R -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_r_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_r X f g R 2) x y.

Axiom pack_b_b_r_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_r X f g R -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_b_r_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_b_b_r X f g R 3) x y.

Axiom pack_b_b_r_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, pack_b_b_r X f g R = pack_b_b_r X' f' g' R' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_b_b_r_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_b_r X f g R = pack_b_b_r X f' g' R'.

(* Parameter struct_b_b_r "0031e96c6fb0d6adf4896553d0f0c34914a51053aec23f189557736115dc381d" "2c8d6cdb20b24974e920070c509ee09fd0e46783833f792290fc127772cf8465" *)
Parameter struct_b_b_r :set -> prop.

Axiom pack_struct_b_b_r_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall R:set -> set -> prop, struct_b_b_r (pack_b_b_r X f g R).

Axiom pack_struct_b_b_r_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, struct_b_b_r (pack_b_b_r X f g R) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_r_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, struct_b_b_r (pack_b_b_r X f g R) -> forall x y :e X, g x y :e X.

Axiom struct_b_b_r_eta: forall S, struct_b_b_r S -> S = pack_b_b_r (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_r (S 3)).


(* Parameter unpack_b_b_r_i "f505ab47ae68cf824493a012ddebfe51b5f6f64947b2d44a4f1caf2f5ab90a1e" "7507eb3084e59bb0aec8dff9b10a21385e639ffddd1238fcdb92f988e5dfdd99" *)
Parameter unpack_b_b_r_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_b_b_r_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' R' = Phi X f g R)
  ->
  unpack_b_b_r_i (pack_b_b_r X f g R) Phi = Phi X f g R.


(* Parameter unpack_b_b_r_o "e89d6aeefd20380272c7023b94e7a02751a5dd862d2c94517be397a65df9fbc7" "2272224beaa532c9e511b8fa42701ba559235ff314c0812d1e6cb36a4a9bd9e7" *)
Parameter unpack_b_b_r_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_b_b_r_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' R' = Phi X f g R)
  ->
  unpack_b_b_r_o (pack_b_b_r X f g R) Phi = Phi X f g R.


(* Parameter pack_b_b_p "b10c3046141f713dca82d4184c8b78ddbe9d50e10b72716a21aa01e12de25e17" "bf93cb89b80bd64f8236317590041eac6fddde6bebd2b062be4830eed6241a7b" *)
Parameter pack_b_b_p :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set.

Axiom pack_b_b_p_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, S = pack_b_b_p X f g P -> X = S 0.

Axiom pack_b_b_p_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, X = pack_b_b_p X f g P 0.

Axiom pack_b_b_p_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, S = pack_b_b_p X f g P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_p_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_p X f g P 1) x y.

Axiom pack_b_b_p_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, S = pack_b_b_p X f g P -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_p_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_p X f g P 2) x y.

Axiom pack_b_b_p_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, S = pack_b_b_p X f g P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_b_p_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_b_p X f g P 3) x.

Axiom pack_b_b_p_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall P P':set -> prop, pack_b_b_p X f g P = pack_b_b_p X' f' g' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_b_b_p_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_b_p X f g P = pack_b_b_p X f' g' P'.

(* Parameter struct_b_b_p "fa1f8d6ec8951bb56e8b4d21e233cc1496384102ea4df35398bd2b621cb27ed7" "908b7a89beb09326c39fc22e257aa237073fc8a02b46df12c282134194a99ddb" *)
Parameter struct_b_b_p :set -> prop.

Axiom pack_struct_b_b_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall P:set -> prop, struct_b_b_p (pack_b_b_p X f g P).

Axiom pack_struct_b_b_p_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, struct_b_b_p (pack_b_b_p X f g P) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_p_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, struct_b_b_p (pack_b_b_p X f g P) -> forall x y :e X, g x y :e X.

Axiom struct_b_b_p_eta: forall S, struct_b_b_p S -> S = pack_b_b_p (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_p (S 3)).


(* Parameter unpack_b_b_p_i "34d6d3fe679045472def7d4dcd0e2d007c46f591c790d6f3c74d8dc93ac9923e" "3f3ab23f64662dd4684faeebb16def9eab38c59423b8029d2ac1fe8dadef6e96" *)
Parameter unpack_b_b_p_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_b_b_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' P' = Phi X f g P)
  ->
  unpack_b_b_p_i (pack_b_b_p X f g P) Phi = Phi X f g P.


(* Parameter unpack_b_b_p_o "323fc27559f71ab7d506bf4f61c431373e24ddeea21e6c6e3789c3a403d5f991" "b54d09ddf958742d27989955700a1fe4f07436089c5d1839820e2a9a5dd02ae1" *)
Parameter unpack_b_b_p_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_b_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' P' = Phi X f g P)
  ->
  unpack_b_b_p_o (pack_b_b_p X f g P) Phi = Phi X f g P.


(* Parameter pack_b_b_e "0c2f8a60f76952627b3e2c9597ef5771553931819c727dea75b98b59b548b5ec" "c9ca029e75ae9f47e0821539f84775cc07258db662e0b5ccf4a423c45a480766" *)
Parameter pack_b_b_e :set -> (set -> set -> set) -> (set -> set -> set) -> set -> set.

Axiom pack_b_b_e_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, S = pack_b_b_e X f g c -> X = S 0.

Axiom pack_b_b_e_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, X = pack_b_b_e X f g c 0.

Axiom pack_b_b_e_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, S = pack_b_b_e X f g c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_e_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall x y :e X, f x y = decode_b (pack_b_b_e X f g c 1) x y.

Axiom pack_b_b_e_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, S = pack_b_b_e X f g c -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_e_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall x y :e X, g x y = decode_b (pack_b_b_e X f g c 2) x y.

Axiom pack_b_b_e_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, S = pack_b_b_e X f g c -> c = S 3.

Axiom pack_b_b_e_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, c = pack_b_b_e X f g c 3.

Axiom pack_b_b_e_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall c c':set, pack_b_b_e X f g c = pack_b_b_e X' f' g' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ c = c'.

Axiom pack_b_b_e_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 pack_b_b_e X f g c = pack_b_b_e X f' g' c.

(* Parameter struct_b_b_e "0dcb26ac08141ff1637a69d653711c803f750140584a4da769aefebb168b9257" "755e4e2e4854b160b8c7e63bfc53bb4f4d968d82ce993ef8c5b5c176c4d14b33" *)
Parameter struct_b_b_e :set -> prop.

Axiom pack_struct_b_b_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall c:set, c :e X -> struct_b_b_e (pack_b_b_e X f g c).

Axiom pack_struct_b_b_e_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, struct_b_b_e (pack_b_b_e X f g c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_e_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, struct_b_b_e (pack_b_b_e X f g c) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_e_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, struct_b_b_e (pack_b_b_e X f g c) -> c :e X.

Axiom struct_b_b_e_eta: forall S, struct_b_b_e S -> S = pack_b_b_e (S 0) (decode_b (S 1)) (decode_b (S 2)) (S 3).


(* Parameter unpack_b_b_e_i "1c031505cc8bf49a0512a2238ae989977d9857fddee5960613267874496a28be" "7004278ccd490dc5f231c346523a94ad983051f8775b8942916378630dd40008" *)
Parameter unpack_b_b_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> set -> set) -> set.

Axiom unpack_b_b_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> set -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) -> Phi X f' g' c = Phi X f g c)
  ->
  unpack_b_b_e_i (pack_b_b_e X f g c) Phi = Phi X f g c.


(* Parameter unpack_b_b_e_o "81ac7e6231b8c316b5c2cb16fbb5f8038e2425b2efd9bd0fc382bc3d448a259d" "b94d6880c1961cc8323e2d6df4491604a11b5f2bf723511a06e0ab22f677364d" *)
Parameter unpack_b_b_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> set -> prop) -> prop.

Axiom unpack_b_b_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> set -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) -> Phi X f' g' c = Phi X f g c)
  ->
  unpack_b_b_e_o (pack_b_b_e X f g c) Phi = Phi X f g c.


(* Parameter pack_b_u_r "052ee0dca90b0b76bfd4cd8614df731b9b6c640092203e8125f68b0e9c087a64" "25cd1e820442b83e2709543379ec293163f654c02c1cbf36ffcbf2d2796995a8" *)
Parameter pack_b_u_r :set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set.

Axiom pack_b_u_r_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_u_r X f i R -> X = S 0.

Axiom pack_b_u_r_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, X = pack_b_u_r X f i R 0.

Axiom pack_b_u_r_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_u_r X f i R -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_r_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_b_u_r X f i R 1) x y.

Axiom pack_b_u_r_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_u_r X f i R -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_r_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x :e X, i x = decode_u (pack_b_u_r X f i R 2) x.

Axiom pack_b_u_r_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_u_r X f i R -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_u_r_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_b_u_r X f i R 3) x y.

Axiom pack_b_u_r_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, pack_b_u_r X f i R = pack_b_u_r X' f' i' R' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_b_u_r_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_u_r X f i R = pack_b_u_r X f' i' R'.

(* Parameter struct_b_u_r "197e22d9a67ce8a150759817ee583505c0b5c8f3fa51b9b7cebec8a33dcd22cc" "11c17953d6063f86b26972edfb529598953033eefb266682147b3e1fc6359396" *)
Parameter struct_b_u_r :set -> prop.

Axiom pack_struct_b_u_r_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, struct_b_u_r (pack_b_u_r X f i R).

Axiom pack_struct_b_u_r_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, struct_b_u_r (pack_b_u_r X f i R) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_r_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, struct_b_u_r (pack_b_u_r X f i R) -> forall x :e X, i x :e X.

Axiom struct_b_u_r_eta: forall S, struct_b_u_r S -> S = pack_b_u_r (S 0) (decode_b (S 1)) (decode_u (S 2)) (decode_r (S 3)).


(* Parameter unpack_b_u_r_i "f48241d7bf9f78ecad2cea187a22636bd3af7512fd991200339f71601a1012f3" "da4396ddda5f85694907b5377d9a068ea639acd75c1d1f644a529c15c97d4395" *)
Parameter unpack_b_u_r_i :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_b_u_r_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' i' R' = Phi X f i R)
  ->
  unpack_b_u_r_i (pack_b_u_r X f i R) Phi = Phi X f i R.


(* Parameter unpack_b_u_r_o "5445797194c6324f17564c2e4f902671f9592d7d1c5c3d226a4413e906748142" "5dfe3b12d9e9e43815df48c63f3f0da3e43a9b0c6c5c33d479fbb72786a146f8" *)
Parameter unpack_b_u_r_o :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_b_u_r_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' i' R' = Phi X f i R)
  ->
  unpack_b_u_r_o (pack_b_u_r X f i R) Phi = Phi X f i R.


(* Parameter pack_b_u_p "9054775b8651b0ce4d8a5413b8c163f6a90f5ef01e00490e65f5171a7586d6d2" "dd4ec8b754a49402f6d8faf6372c7351f9bba1056d50eba98d41333b3619d4d3" *)
Parameter pack_b_u_p :set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set.

Axiom pack_b_u_p_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_u_p X f i P -> X = S 0.

Axiom pack_b_u_p_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, X = pack_b_u_p X f i P 0.

Axiom pack_b_u_p_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_u_p X f i P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_p_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_u_p X f i P 1) x y.

Axiom pack_b_u_p_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_u_p X f i P -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_p_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x :e X, i x = decode_u (pack_b_u_p X f i P 2) x.

Axiom pack_b_u_p_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_u_p X f i P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_u_p_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_u_p X f i P 3) x.

Axiom pack_b_u_p_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop, pack_b_u_p X f i P = pack_b_u_p X' f' i' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x).

Axiom pack_b_u_p_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_u_p X f i P = pack_b_u_p X f' i' P'.

(* Parameter struct_b_u_p "4326139c530c640a1854bd9a222317e596a3f805e2f3d33fd3d6aec1eb6bd2b0" "e6d60afaf4c887aa2ef19bbb5d0b14adcf2fc80a65243e0bd04503f906ffbcd5" *)
Parameter struct_b_u_p :set -> prop.

Axiom pack_struct_b_u_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, struct_b_u_p (pack_b_u_p X f i P).

Axiom pack_struct_b_u_p_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, struct_b_u_p (pack_b_u_p X f i P) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_p_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, struct_b_u_p (pack_b_u_p X f i P) -> forall x :e X, i x :e X.

Axiom struct_b_u_p_eta: forall S, struct_b_u_p S -> S = pack_b_u_p (S 0) (decode_b (S 1)) (decode_u (S 2)) (decode_p (S 3)).


(* Parameter unpack_b_u_p_i "cf010ad5adad614a42043c0fe4a1b5a7141fe0ad43b0a176ee323a3ac583d2c8" "ee3ffb00acef6a80614fd5300a417435e307893339872ce9844aacc5db211b15" *)
Parameter unpack_b_u_p_i :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_b_u_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' i' P' = Phi X f i P)
  ->
  unpack_b_u_p_i (pack_b_u_p X f i P) Phi = Phi X f i P.


(* Parameter unpack_b_u_p_o "bce17a5242857f709c2dc74624ef394f2374b3853793cc3bfd45a639cd194b6e" "424a46cad6e5d74a302195b5f3c547a808768d1f08f01a7232d0e0ac965aa6ae" *)
Parameter unpack_b_u_p_o :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_u_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' i' P' = Phi X f i P)
  ->
  unpack_b_u_p_o (pack_b_u_p X f i P) Phi = Phi X f i P.


(* Parameter pack_b_u_e "7b577ee79883a18213b8709e977789e3cf107bcd9ff31008fe968bdfaf7d315f" "19a4f497d133a1e0680b1104ae3fcef07eac096741109e68252a04812f2154fc" *)
Parameter pack_b_u_e :set -> (set -> set -> set) -> (set -> set) -> set -> set.

Axiom pack_b_u_e_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_u_e X f i c -> X = S 0.

Axiom pack_b_u_e_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, X = pack_b_u_e X f i c 0.

Axiom pack_b_u_e_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_u_e X f i c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_e_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall x y :e X, f x y = decode_b (pack_b_u_e X f i c 1) x y.

Axiom pack_b_u_e_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_u_e X f i c -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_e_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall x :e X, i x = decode_u (pack_b_u_e X f i c 2) x.

Axiom pack_b_u_e_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_u_e X f i c -> c = S 3.

Axiom pack_b_u_e_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, c = pack_b_u_e X f i c 3.

Axiom pack_b_u_e_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall c c':set, pack_b_u_e X f i c = pack_b_u_e X' f' i' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ c = c'.

Axiom pack_b_u_e_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_b_u_e X f i c = pack_b_u_e X f' i' c.

(* Parameter struct_b_u_e "077fe8eb3c54f448498bdb665bd6aeca1ccf894226d42fdf3bcdb737b9f3954c" "f7180c2205788883f7d0c6adc64a6451743bab4ac2d6f7c266be3b1b4e72fd1f" *)
Parameter struct_b_u_e :set -> prop.

Axiom pack_struct_b_u_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall c:set, c :e X -> struct_b_u_e (pack_b_u_e X f i c).

Axiom pack_struct_b_u_e_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, struct_b_u_e (pack_b_u_e X f i c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_e_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, struct_b_u_e (pack_b_u_e X f i c) -> forall x :e X, i x :e X.

Axiom pack_struct_b_u_e_E3: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, struct_b_u_e (pack_b_u_e X f i c) -> c :e X.

Axiom struct_b_u_e_eta: forall S, struct_b_u_e S -> S = pack_b_u_e (S 0) (decode_b (S 1)) (decode_u (S 2)) (S 3).


(* Parameter unpack_b_u_e_i "b574db278bdea258d80d45d75d9d25ff216150bb92f9a1deb9236f8708fb5e22" "8f75ef40a253f3f34f6cb844f06c8876362d2624382e5e15abb3e75ac83bf116" *)
Parameter unpack_b_u_e_i :set -> (set -> (set -> set -> set) -> (set -> set) -> set -> set) -> set.

Axiom unpack_b_u_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> set -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' i' c = Phi X f i c)
  ->
  unpack_b_u_e_i (pack_b_u_e X f i c) Phi = Phi X f i c.


(* Parameter unpack_b_u_e_o "ee95e40cdf75d05b409485c3d47d4ba0d737276af0c1b1e326540cb739b066cc" "6a1ee7f80cebcd4d5a9ac27815588c5dbd678ad9fb9717538adca7929187f83d" *)
Parameter unpack_b_u_e_o :set -> (set -> (set -> set -> set) -> (set -> set) -> set -> prop) -> prop.

Axiom unpack_b_u_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> set -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' i' c = Phi X f i c)
  ->
  unpack_b_u_e_o (pack_b_u_e X f i c) Phi = Phi X f i c.


(* Parameter pack_b_r_p "c8b6f8e03bed9b2d0de976b2b30b81fdb597cdd0bcc9b820a42bbc161f6b50eb" "feb3c571c1c3191974784b62d572f431eb6c9b900ebfe2f5a6361e82dd547f50" *)
Parameter pack_b_r_p :set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_b_r_p_0_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_r_p X f R P -> X = S 0.

Axiom pack_b_r_p_0_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, X = pack_b_r_p X f R P 0.

Axiom pack_b_r_p_1_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_r_p X f R P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_r_p_1_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_r_p X f R P 1) x y.

Axiom pack_b_r_p_2_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_r_p X f R P -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_b_r_p_2_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_b_r_p X f R P 2) x y.

Axiom pack_b_r_p_3_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_r_p X f R P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_r_p_3_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_r_p X f R P 3) x.

Axiom pack_b_r_p_inj : forall X X', forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, pack_b_r_p X f R P = pack_b_r_p X' f' R' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_b_r_p_ext : forall X, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_r_p X f R P = pack_b_r_p X f' R' P'.

(* Parameter struct_b_r_p "2a005aa89167824a5dc8b5af9fa6c5b6fbef0387c949149d9dd5e521f0b69bc2" "b2802dc1dc959cc46c5e566581c2d545c2b5a3561771aa668725f1f9fddbc471" *)
Parameter struct_b_r_p :set -> prop.

Axiom pack_struct_b_r_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall P:set -> prop, struct_b_r_p (pack_b_r_p X f R P).

Axiom pack_struct_b_r_p_E1: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_b_r_p (pack_b_r_p X f R P) -> forall x y :e X, f x y :e X.

Axiom struct_b_r_p_eta: forall S, struct_b_r_p S -> S = pack_b_r_p (S 0) (decode_b (S 1)) (decode_r (S 2)) (decode_p (S 3)).


(* Parameter unpack_b_r_p_i "5ac30153047f6b91588bdb449ab0f805a13756e55d0997d92a49cc888bd31771" "f847909048aecb26a304a1003ea0d77a1691cd57c64f8593f798c00ce8d40320" *)
Parameter unpack_b_r_p_i :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_b_r_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' R' P' = Phi X f R P)
  ->
  unpack_b_r_p_i (pack_b_r_p X f R P) Phi = Phi X f R P.


(* Parameter unpack_b_r_p_o "00d96d79eac5a16ff57bce3eed8ec786133de1162978053aa41a0953406ea705" "51d60d68b90f796d7259d8cbe63ebe8cbe892984f07909a1ddeb793f97bddb6a" *)
Parameter unpack_b_r_p_o :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_r_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' R' P' = Phi X f R P)
  ->
  unpack_b_r_p_o (pack_b_r_p X f R P) Phi = Phi X f R P.


(* Parameter pack_b_r_e "ca7e1e0b877f48c432ad7c2afbf4adc6801303a644b94357423deb9237731df1" "8a5fefc0b3ddb532e1fb7eeb8179f46589733aaf3952be0837958161d29184f3" *)
Parameter pack_b_r_e :set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set.

Axiom pack_b_r_e_0_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_r_e X f R c -> X = S 0.

Axiom pack_b_r_e_0_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, X = pack_b_r_e X f R c 0.

Axiom pack_b_r_e_1_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_r_e X f R c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_r_e_1_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_b_r_e X f R c 1) x y.

Axiom pack_b_r_e_2_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_r_e X f R c -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_b_r_e_2_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_b_r_e X f R c 2) x y.

Axiom pack_b_r_e_3_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_r_e X f R c -> c = S 3.

Axiom pack_b_r_e_3_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, c = pack_b_r_e X f R c 3.

Axiom pack_b_r_e_inj : forall X X', forall f f':set -> set -> set, forall R R':set -> set -> prop, forall c c':set, pack_b_r_e X f R c = pack_b_r_e X' f' R' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_b_r_e_ext : forall X, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_r_e X f R c = pack_b_r_e X f' R' c.

(* Parameter struct_b_r_e "027e53400db56db5263421743bf167ef29c835dce9328a41fd2dbf3ebdb50e65" "389c29db46c524c2f7c446c09f08884cc0698e87a428507089f0bdcb6eed53bc" *)
Parameter struct_b_r_e :set -> prop.

Axiom pack_struct_b_r_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> struct_b_r_e (pack_b_r_e X f R c).

Axiom pack_struct_b_r_e_E1: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, struct_b_r_e (pack_b_r_e X f R c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_r_e_E3: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, struct_b_r_e (pack_b_r_e X f R c) -> c :e X.

Axiom struct_b_r_e_eta: forall S, struct_b_r_e S -> S = pack_b_r_e (S 0) (decode_b (S 1)) (decode_r (S 2)) (S 3).


(* Parameter unpack_b_r_e_i "bf47a71abcce20a685901d65ca0f2c87052845daa97244eab3a80a9107122f3e" "f453b0222a69dcdf353710afdcb3bc6e1c079a0d02f46aa93109aa23e8b1c024" *)
Parameter unpack_b_r_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_b_r_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' R' c = Phi X f R c)
  ->
  unpack_b_r_e_i (pack_b_r_e X f R c) Phi = Phi X f R c.


(* Parameter unpack_b_r_e_o "def13b5bc3a00c0b636ff105e65064f9ab466ba50e814198af23d4ad651d8e25" "795f6a9381a0ab69eed1b6e46835dd8999065c3069127d8d08a236dd1325c576" *)
Parameter unpack_b_r_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_b_r_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> set -> prop,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' R' c = Phi X f R c)
  ->
  unpack_b_r_e_o (pack_b_r_e X f R c) Phi = Phi X f R c.


(* Parameter pack_b_p_e "0f609dedbafb80e521aa0414259e9122f6ddf825975802350f9fe12787c8b7ea" "3cc4ab95fa10b6b69f08688c63696da5e2c31d8f131d3fa1818f4327d78f4593" *)
Parameter pack_b_p_e :set -> (set -> set -> set) -> (set -> prop) -> set -> set.

Axiom pack_b_p_e_0_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_p_e X f P c -> X = S 0.

Axiom pack_b_p_e_0_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, X = pack_b_p_e X f P c 0.

Axiom pack_b_p_e_1_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_p_e X f P c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_p_e_1_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_b_p_e X f P c 1) x y.

Axiom pack_b_p_e_2_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_p_e X f P c -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_b_p_e_2_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_b_p_e X f P c 2) x.

Axiom pack_b_p_e_3_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_p_e X f P c -> c = S 3.

Axiom pack_b_p_e_3_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, c = pack_b_p_e X f P c 3.

Axiom pack_b_p_e_inj : forall X X', forall f f':set -> set -> set, forall P P':set -> prop, forall c c':set, pack_b_p_e X f P c = pack_b_p_e X' f' P' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_b_p_e_ext : forall X, forall f f':set -> set -> set, forall P P':set -> prop, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_p_e X f P c = pack_b_p_e X f' P' c.

(* Parameter struct_b_p_e "b2fea87533731ce218fc5ab4344d14278bf5c7611bfb8d8dd1bc7d9ae4358fb9" "427ff0017dcd4f8496dda259976e1e8ea7bf40bd148a324f5896dc89af9af2fc" *)
Parameter struct_b_p_e :set -> prop.

Axiom pack_struct_b_p_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall P:set -> prop, forall c:set, c :e X -> struct_b_p_e (pack_b_p_e X f P c).

Axiom pack_struct_b_p_e_E1: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, struct_b_p_e (pack_b_p_e X f P c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_p_e_E3: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, struct_b_p_e (pack_b_p_e X f P c) -> c :e X.

Axiom struct_b_p_e_eta: forall S, struct_b_p_e S -> S = pack_b_p_e (S 0) (decode_b (S 1)) (decode_p (S 2)) (S 3).


(* Parameter unpack_b_p_e_i "c2d89ff71a7e2d3c4f1b209dc4981275172173ae20013cea031073cd3fca9165" "6dc34e1a61155e593ef53f2062f9c130bebb490d1c6e6fdce395cfe511cd938a" *)
Parameter unpack_b_p_e_i :set -> (set -> (set -> set -> set) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_b_p_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> prop) -> set -> set,
  forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' P' c = Phi X f P c)
  ->
  unpack_b_p_e_i (pack_b_p_e X f P c) Phi = Phi X f P c.


(* Parameter unpack_b_p_e_o "a925d386cddb632a0b5020a3516865062622a1f6b4b9cb5c10fe9a2f86431400" "4f155a3871fb46ec32296002eed567c4bdbf3798c29a7d22c9ed70bd9849a33e" *)
Parameter unpack_b_p_e_o :set -> (set -> (set -> set -> set) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_b_p_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> prop) -> set -> prop,
  forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' P' c = Phi X f P c)
  ->
  unpack_b_p_e_o (pack_b_p_e X f P c) Phi = Phi X f P c.


(* Parameter pack_u_u_r "fdfc5a3d501ab0f99d491fb1094de1975e21fd34305d0b415745c2599b9efb81" "c4ee87f4c8db100f868c7112d4f9f40e7e22418f0f15c4583c5d118da43dfc4a" *)
Parameter pack_u_u_r :set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set.

Axiom pack_u_u_r_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, S = pack_u_u_r X i j R -> X = S 0.

Axiom pack_u_u_r_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, X = pack_u_u_r X i j R 0.

Axiom pack_u_u_r_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, S = pack_u_u_r X i j R -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_r_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall x :e X, i x = decode_u (pack_u_u_r X i j R 1) x.

Axiom pack_u_u_r_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, S = pack_u_u_r X i j R -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_r_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall x :e X, j x = decode_u (pack_u_u_r X i j R 2) x.

Axiom pack_u_u_r_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, S = pack_u_u_r X i j R -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_u_u_r_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_u_u_r X i j R 3) x y.

Axiom pack_u_u_r_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop, pack_u_u_r X i j R = pack_u_u_r X' i' j' R' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_u_u_r_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_u_u_r X i j R = pack_u_u_r X i' j' R'.

(* Parameter struct_u_u_r "1d0e19a029951bdf020ea05e5f97e89c29ccf2711bb9fb68c3149244d13ec43c" "38cf2b6266d554cd31716ea889acb59281f11b53add172f75942eb1ac6f37184" *)
Parameter struct_u_u_r :set -> prop.

Axiom pack_struct_u_u_r_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall R:set -> set -> prop, struct_u_u_r (pack_u_u_r X i j R).

Axiom pack_struct_u_u_r_E1: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, struct_u_u_r (pack_u_u_r X i j R) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_r_E2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, struct_u_u_r (pack_u_u_r X i j R) -> forall x :e X, j x :e X.

Axiom struct_u_u_r_eta: forall S, struct_u_u_r S -> S = pack_u_u_r (S 0) (decode_u (S 1)) (decode_u (S 2)) (decode_r (S 3)).


(* Parameter unpack_u_u_r_i "c4a40d9fa02f0e94f84b37aa6fa03dcba6ce102b60cd60195a7a8abd32b478d1" "117e9e054b334c7c32ecbbeec2b79f2470a377dd76ddaa958f7cd1d8cb868874" *)
Parameter unpack_u_u_r_i :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_u_u_r_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' j' R' = Phi X i j R)
  ->
  unpack_u_u_r_i (pack_u_u_r X i j R) Phi = Phi X i j R.


(* Parameter unpack_u_u_r_o "2d8bf73e27455c982a4acd25339d57305c72b2e1a4531dd509fae2675976a33c" "637dcedb63169d23c24c7d4377220b5fe5045f014f12a41c37eb899f2ace1d92" *)
Parameter unpack_u_u_r_o :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_u_u_r_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' j' R' = Phi X i j R)
  ->
  unpack_u_u_r_o (pack_u_u_r X i j R) Phi = Phi X i j R.


(* Parameter pack_u_u_p "56ada129a0809cc1db9e303bd793169ef9f181482f4f2b6429858656c8f843b1" "f8dcaaa96320bb23d1495620537ed43683b037b5b56b397724a626697a958e54" *)
Parameter pack_u_u_p :set -> (set -> set) -> (set -> set) -> (set -> prop) -> set.

Axiom pack_u_u_p_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, S = pack_u_u_p X i j P -> X = S 0.

Axiom pack_u_u_p_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, X = pack_u_u_p X i j P 0.

Axiom pack_u_u_p_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, S = pack_u_u_p X i j P -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_p_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall x :e X, i x = decode_u (pack_u_u_p X i j P 1) x.

Axiom pack_u_u_p_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, S = pack_u_u_p X i j P -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_p_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall x :e X, j x = decode_u (pack_u_u_p X i j P 2) x.

Axiom pack_u_u_p_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, S = pack_u_u_p X i j P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_u_u_p_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_u_u_p X i j P 3) x.

Axiom pack_u_u_p_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall P P':set -> prop, pack_u_u_p X i j P = pack_u_u_p X' i' j' P' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ (forall x :e X, P x = P' x).

Axiom pack_u_u_p_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall P P':set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_u_p X i j P = pack_u_u_p X i' j' P'.

(* Parameter struct_u_u_p "041760e519fd5b52ebf68b01d72aeb4c74724ded24aca463849705946b70a954" "de4d3c080acf7605ab9373bdda9ab7742cdc6270e0addec4cd69788e44035ecc" *)
Parameter struct_u_u_p :set -> prop.

Axiom pack_struct_u_u_p_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall P:set -> prop, struct_u_u_p (pack_u_u_p X i j P).

Axiom pack_struct_u_u_p_E1: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, struct_u_u_p (pack_u_u_p X i j P) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_p_E2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, struct_u_u_p (pack_u_u_p X i j P) -> forall x :e X, j x :e X.

Axiom struct_u_u_p_eta: forall S, struct_u_u_p S -> S = pack_u_u_p (S 0) (decode_u (S 1)) (decode_u (S 2)) (decode_p (S 3)).


(* Parameter unpack_u_u_p_i "fb47241f0c47f285cb367a78f7477c056227b59dc60d051fca368d4ec77c873e" "0cce0196643178d52d0d92ba27c2b1b9dc3665239ac920f8371d83b6b078cc80" *)
Parameter unpack_u_u_p_i :set -> (set -> (set -> set) -> (set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_u_u_p_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> prop) -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' j' P' = Phi X i j P)
  ->
  unpack_u_u_p_i (pack_u_u_p X i j P) Phi = Phi X i j P.


(* Parameter unpack_u_u_p_o "0802755f8c843542348022318a1e609b46f6e528ad984abc19e87bac79eff58c" "7c00ec2471691614937b749824cf6915ea7ba0998ce07d54be196197fbfc9200" *)
Parameter unpack_u_u_p_o :set -> (set -> (set -> set) -> (set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_u_u_p_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> prop) -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' j' P' = Phi X i j P)
  ->
  unpack_u_u_p_o (pack_u_u_p X i j P) Phi = Phi X i j P.


(* Parameter pack_u_u_e "f5032df4bb2ffbd51f48144dc9a569ac6db1e7dc7423d94eb3e3d605b706af92" "02d7e11397173881affcd27a312eb45e21d53b0116bf3602e7f42aeb2daa08fa" *)
Parameter pack_u_u_e :set -> (set -> set) -> (set -> set) -> set -> set.

Axiom pack_u_u_e_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, S = pack_u_u_e X i j c -> X = S 0.

Axiom pack_u_u_e_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, X = pack_u_u_e X i j c 0.

Axiom pack_u_u_e_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, S = pack_u_u_e X i j c -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_e_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall x :e X, i x = decode_u (pack_u_u_e X i j c 1) x.

Axiom pack_u_u_e_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, S = pack_u_u_e X i j c -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_e_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall x :e X, j x = decode_u (pack_u_u_e X i j c 2) x.

Axiom pack_u_u_e_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, S = pack_u_u_e X i j c -> c = S 3.

Axiom pack_u_u_e_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, c = pack_u_u_e X i j c 3.

Axiom pack_u_u_e_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall c c':set, pack_u_u_e X i j c = pack_u_u_e X' i' j' c' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ c = c'.

Axiom pack_u_u_e_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall c,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 pack_u_u_e X i j c = pack_u_u_e X i' j' c.

(* Parameter struct_u_u_e "9fd0c0e101e8c20fff753a8b23b3328a26c4db803c1d08b1c8b0854ba1bbed02" "db5c0384aad42841c63f72320c6661c6273d0e9271273803846c6030dbe43e69" *)
Parameter struct_u_u_e :set -> prop.

Axiom pack_struct_u_u_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall c:set, c :e X -> struct_u_u_e (pack_u_u_e X i j c).

Axiom pack_struct_u_u_e_E1: forall X, forall i:set -> set, forall j:set -> set, forall c:set, struct_u_u_e (pack_u_u_e X i j c) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_e_E2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, struct_u_u_e (pack_u_u_e X i j c) -> forall x :e X, j x :e X.

Axiom pack_struct_u_u_e_E3: forall X, forall i:set -> set, forall j:set -> set, forall c:set, struct_u_u_e (pack_u_u_e X i j c) -> c :e X.

Axiom struct_u_u_e_eta: forall S, struct_u_u_e S -> S = pack_u_u_e (S 0) (decode_u (S 1)) (decode_u (S 2)) (S 3).


(* Parameter unpack_u_u_e_i "17580d5df197cac1d095de02419addef044bef7010126661990b6edf792fb21e" "148ff85fd0d8248db0c185888c1f4398a219abbaed47a431191cc4297cd5b852" *)
Parameter unpack_u_u_e_i :set -> (set -> (set -> set) -> (set -> set) -> set -> set) -> set.

Axiom unpack_u_u_e_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> set -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X i' j' c = Phi X i j c)
  ->
  unpack_u_u_e_i (pack_u_u_e X i j c) Phi = Phi X i j c.


(* Parameter unpack_u_u_e_o "b2b01665071e240f5f7f7b9f2cdb34a741e57c37fd745ac9396d3a96b60ac77e" "247bfbb273c94a8fe62317e41b8717c129eb4605bff8b43d30dd16a449b2bb46" *)
Parameter unpack_u_u_e_o :set -> (set -> (set -> set) -> (set -> set) -> set -> prop) -> prop.

Axiom unpack_u_u_e_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> set -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X i' j' c = Phi X i j c)
  ->
  unpack_u_u_e_o (pack_u_u_e X i j c) Phi = Phi X i j c.


(* Parameter pack_u_r_p "22b393cd12b4165110dd9473bd57eff59796c9ca341b128fa71eaf5f6cfaf3d2" "83053b7d57ff125e6dc0a2627981d774386872b286e68cbcdf9b09ae63d06a35" *)
Parameter pack_u_r_p :set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_u_r_p_0_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_r_p X i R P -> X = S 0.

Axiom pack_u_r_p_0_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, X = pack_u_r_p X i R P 0.

Axiom pack_u_r_p_1_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_r_p X i R P -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_r_p_1_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, i x = decode_u (pack_u_r_p X i R P 1) x.

Axiom pack_u_r_p_2_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_r_p X i R P -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_u_r_p_2_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_u_r_p X i R P 2) x y.

Axiom pack_u_r_p_3_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_r_p X i R P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_u_r_p_3_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_u_r_p X i R P 3) x.

Axiom pack_u_r_p_inj : forall X X', forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, pack_u_r_p X i R P = pack_u_r_p X' i' R' P' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_u_r_p_ext : forall X, forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_r_p X i R P = pack_u_r_p X i' R' P'.

(* Parameter struct_u_r_p "107cc6685376714d6f273e53f3fa3cb90dc3fb6729a156dca1dcdd9fef6f1b4d" "bd6bf5dff974189ab987ecb61f8e3e98533ea55a4f57bde320344f6f3059947f" *)
Parameter struct_u_r_p :set -> prop.

Axiom pack_struct_u_r_p_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall P:set -> prop, struct_u_r_p (pack_u_r_p X i R P).

Axiom pack_struct_u_r_p_E1: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_u_r_p (pack_u_r_p X i R P) -> forall x :e X, i x :e X.

Axiom struct_u_r_p_eta: forall S, struct_u_r_p S -> S = pack_u_r_p (S 0) (decode_u (S 1)) (decode_r (S 2)) (decode_p (S 3)).


(* Parameter unpack_u_r_p_i "cf95c73d579983b023529a746e890eedc9933e050f32cdd3ce54b919c21960d0" "162cff9e2618be08d85537d0795d90abe76f0344d1c95c855821824db5f5ae62" *)
Parameter unpack_u_r_p_i :set -> (set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_u_r_p_i_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' R' P' = Phi X i R P)
  ->
  unpack_u_r_p_i (pack_u_r_p X i R P) Phi = Phi X i R P.


(* Parameter unpack_u_r_p_o "e3a11403a820cd47b3d4286feabdfab730af878ffe1433f353b2825dd1564957" "9e5110329af9541c19835a694065f7f44047419ceff4f57082e8da32aeff785d" *)
Parameter unpack_u_r_p_o :set -> (set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_u_r_p_o_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' R' P' = Phi X i R P)
  ->
  unpack_u_r_p_o (pack_u_r_p X i R P) Phi = Phi X i R P.


(* Parameter pack_u_r_e "2f36ea8ab2296db6e1991823175fe3ac05e7cd1c324d0093098ee29b1641f38a" "0c16f7aca428a7b72124049d7a0d88b7aa45c9ca87a9a629404f2f3ebc7a3ea4" *)
Parameter pack_u_r_e :set -> (set -> set) -> (set -> set -> prop) -> set -> set.

Axiom pack_u_r_e_0_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_r_e X i R c -> X = S 0.

Axiom pack_u_r_e_0_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, X = pack_u_r_e X i R c 0.

Axiom pack_u_r_e_1_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_r_e X i R c -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_r_e_1_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_u_r_e X i R c 1) x.

Axiom pack_u_r_e_2_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_r_e X i R c -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_u_r_e_2_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_u_r_e X i R c 2) x y.

Axiom pack_u_r_e_3_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_r_e X i R c -> c = S 3.

Axiom pack_u_r_e_3_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, c = pack_u_r_e X i R c 3.

Axiom pack_u_r_e_inj : forall X X', forall i i':set -> set, forall R R':set -> set -> prop, forall c c':set, pack_u_r_e X i R c = pack_u_r_e X' i' R' c' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_u_r_e_ext : forall X, forall i i':set -> set, forall R R':set -> set -> prop, forall c,
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_u_r_e X i R c = pack_u_r_e X i' R' c.

(* Parameter struct_u_r_e "9158242b0270a8215bc2d3d246afb94a99f6df13ca5b875d772a23f990d03b91" "66332731028f49429fbc07af9b0a51758f1e705e46f6161a6cfc3dfbc16d1a1c" *)
Parameter struct_u_r_e :set -> prop.

Axiom pack_struct_u_r_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> struct_u_r_e (pack_u_r_e X i R c).

Axiom pack_struct_u_r_e_E1: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, struct_u_r_e (pack_u_r_e X i R c) -> forall x :e X, i x :e X.

Axiom pack_struct_u_r_e_E3: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, struct_u_r_e (pack_u_r_e X i R c) -> c :e X.

Axiom struct_u_r_e_eta: forall S, struct_u_r_e S -> S = pack_u_r_e (S 0) (decode_u (S 1)) (decode_r (S 2)) (S 3).


(* Parameter unpack_u_r_e_i "89a6eab8b1761071897d0ec315ba52af41d91025cce4e2e8b8528685a4357fb3" "4c8ac09c9969e75e1ccae1a06b0ddc4027045d6a7413d24859d5179d758db860" *)
Parameter unpack_u_r_e_i :set -> (set -> (set -> set) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_u_r_e_i_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> set -> set,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' R' c = Phi X i R c)
  ->
  unpack_u_r_e_i (pack_u_r_e X i R c) Phi = Phi X i R c.


(* Parameter unpack_u_r_e_o "94bb68cc10acc59ff431a3dda64eb11c230234b5926aeb999459e760ea41ea6f" "e63a6c2ab5ea0d20a733d6722086b24dcf6531735575a3147cbf1417bf04b69d" *)
Parameter unpack_u_r_e_o :set -> (set -> (set -> set) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_u_r_e_o_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> set -> prop,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' R' c = Phi X i R c)
  ->
  unpack_u_r_e_o (pack_u_r_e X i R c) Phi = Phi X i R c.


(* Parameter pack_u_p_e "dd15c02edd5cdde0bd599bd94de232d405e56338fee4db328b9b3a7852b8c1db" "fff18701434cce22ec484192929dfcef89b5b0dc8279da9788d982ec9423cf86" *)
Parameter pack_u_p_e :set -> (set -> set) -> (set -> prop) -> set -> set.

Axiom pack_u_p_e_0_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_u_p_e X i P c -> X = S 0.

Axiom pack_u_p_e_0_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, X = pack_u_p_e X i P c 0.

Axiom pack_u_p_e_1_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_u_p_e X i P c -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_p_e_1_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_u_p_e X i P c 1) x.

Axiom pack_u_p_e_2_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_u_p_e X i P c -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_u_p_e_2_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_u_p_e X i P c 2) x.

Axiom pack_u_p_e_3_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_u_p_e X i P c -> c = S 3.

Axiom pack_u_p_e_3_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, c = pack_u_p_e X i P c 3.

Axiom pack_u_p_e_inj : forall X X', forall i i':set -> set, forall P P':set -> prop, forall c c':set, pack_u_p_e X i P c = pack_u_p_e X' i' P' c' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_u_p_e_ext : forall X, forall i i':set -> set, forall P P':set -> prop, forall c,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_p_e X i P c = pack_u_p_e X i' P' c.

(* Parameter struct_u_p_e "075c344e49e0edd4421630e6f9a4bb1828247b9a4838724ceb3a11be867b4c93" "04c96d41ac71dd346efdcaf411b33bdf46261fe3f21aeaf2c2db6737bf882477" *)
Parameter struct_u_p_e :set -> prop.

Axiom pack_struct_u_p_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, forall c:set, c :e X -> struct_u_p_e (pack_u_p_e X i P c).

Axiom pack_struct_u_p_e_E1: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, struct_u_p_e (pack_u_p_e X i P c) -> forall x :e X, i x :e X.

Axiom pack_struct_u_p_e_E3: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, struct_u_p_e (pack_u_p_e X i P c) -> c :e X.

Axiom struct_u_p_e_eta: forall S, struct_u_p_e S -> S = pack_u_p_e (S 0) (decode_u (S 1)) (decode_p (S 2)) (S 3).


(* Parameter unpack_u_p_e_i "781ccb96fb9dfdc96a2ab5cce6cc5ff98d9494b2be43abddfc058b66b9b0282e" "98b3c55a43ac97eae8013ea53cf39bbaf2acbfe6d71edb04ebbdd6b00d965cd0" *)
Parameter unpack_u_p_e_i :set -> (set -> (set -> set) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_u_p_e_i_eq : forall Phi:set -> (set -> set) -> (set -> prop) -> set -> set,
  forall X, forall i:set -> set, forall P:set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' P' c = Phi X i P c)
  ->
  unpack_u_p_e_i (pack_u_p_e X i P c) Phi = Phi X i P c.


(* Parameter unpack_u_p_e_o "a93a7bca2de50b8a0fc39923bb4c66eaed1f14d7572c8981134b4ca85901bbc2" "f83dbee2bb757e8bf841803755cf8e16879c9b1c15cd7bb3150ae8d1951fad12" *)
Parameter unpack_u_p_e_o :set -> (set -> (set -> set) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_u_p_e_o_eq : forall Phi:set -> (set -> set) -> (set -> prop) -> set -> prop,
  forall X, forall i:set -> set, forall P:set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' P' c = Phi X i P c)
  ->
  unpack_u_p_e_o (pack_u_p_e X i P c) Phi = Phi X i P c.


(* Parameter pack_r_r_p "e9ddbb77734d5b89a1a835a2fecf9bac7be0699b1c8b4d733dc2c4fcb137c023" "ef6eea0672bb5b6221c7a16420baeb5b71be940382fe21316718919d87b17727" *)
Parameter pack_r_r_p :set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_r_r_p_0_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, S = pack_r_r_p X R T P -> X = S 0.

Axiom pack_r_r_p_0_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, X = pack_r_r_p X R T P 0.

Axiom pack_r_r_p_1_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, S = pack_r_r_p X R T P -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_r_p_1_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_r_r_p X R T P 1) x y.

Axiom pack_r_r_p_2_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, S = pack_r_r_p X R T P -> forall x y :e X, T x y = decode_r (S 2) x y.

Axiom pack_r_r_p_2_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall x y :e X, T x y = decode_r (pack_r_r_p X R T P 2) x y.

Axiom pack_r_r_p_3_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, S = pack_r_r_p X R T P -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_r_r_p_3_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_r_r_p X R T P 3) x.

Axiom pack_r_r_p_inj : forall X X', forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall P P':set -> prop, pack_r_r_p X R T P = pack_r_r_p X' R' T' P' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_r_r_p_ext : forall X, forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall P P':set -> prop,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_r_r_p X R T P = pack_r_r_p X R' T' P'.

(* Parameter struct_r_r_p "8fe8c719cbf98deb6b6a2c70f8a7fa6baf20ed652cd67241181a6c1013fa357b" "a2e30b14982c5dfd90320937687dea040d181564899f71f4121790ade76e931c" *)
Parameter struct_r_r_p :set -> prop.

Axiom pack_struct_r_r_p_I: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, struct_r_r_p (pack_r_r_p X R T P).

Axiom struct_r_r_p_eta: forall S, struct_r_r_p S -> S = pack_r_r_p (S 0) (decode_r (S 1)) (decode_r (S 2)) (decode_p (S 3)).


(* Parameter unpack_r_r_p_i "6e88e83550fe896d33354d4b97976e96acbcb2f18c8bd27280f7b91b24b62ae3" "8e7c7e231c197210c46b6ab851f0ea78d4f44a646809bc18b3840e2b90598426" *)
Parameter unpack_r_r_p_i :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_r_r_p_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' T' P' = Phi X R T P)
  ->
  unpack_r_r_p_i (pack_r_r_p X R T P) Phi = Phi X R T P.


(* Parameter unpack_r_r_p_o "6fbc0085e027a3cc4eeb12462dff1d0920d14dedcf4c62204d257672ca397091" "2cbb7aa2bbcb6d2a0c9b4af1a4aa7580c4b918e82b236fd260b9c2ef808ff08e" *)
Parameter unpack_r_r_p_o :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_r_r_p_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' T' P' = Phi X R T P)
  ->
  unpack_r_r_p_o (pack_r_r_p X R T P) Phi = Phi X R T P.


(* Parameter pack_r_r_e "8a6c4e272d3ac94d1c1af1f2189c6a3d3b27206ec55053dc3b7776df605a3c65" "375275f1fd0e11a08d53148663748b651b140faf41a92e23ee13406c7343186b" *)
Parameter pack_r_r_e :set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set.

Axiom pack_r_r_e_0_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, S = pack_r_r_e X R T c -> X = S 0.

Axiom pack_r_r_e_0_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, X = pack_r_r_e X R T c 0.

Axiom pack_r_r_e_1_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, S = pack_r_r_e X R T c -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_r_e_1_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_r_r_e X R T c 1) x y.

Axiom pack_r_r_e_2_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, S = pack_r_r_e X R T c -> forall x y :e X, T x y = decode_r (S 2) x y.

Axiom pack_r_r_e_2_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall x y :e X, T x y = decode_r (pack_r_r_e X R T c 2) x y.

Axiom pack_r_r_e_3_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, S = pack_r_r_e X R T c -> c = S 3.

Axiom pack_r_r_e_3_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, c = pack_r_r_e X R T c 3.

Axiom pack_r_r_e_inj : forall X X', forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall c c':set, pack_r_r_e X R T c = pack_r_r_e X' R' T' c' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y) /\ c = c'.

Axiom pack_r_r_e_ext : forall X, forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall c,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_r_r_e X R T c = pack_r_r_e X R' T' c.

(* Parameter struct_r_r_e "3f0f9d7d8d1dda3e6b14b5f1a55262df088b79d68b38836664c561b0fcc4f814" "1612ef90db05ae8c664e138bc97fb33b49130fb90cdf3b1c86c17b5f6d57ab06" *)
Parameter struct_r_r_e :set -> prop.

Axiom pack_struct_r_r_e_I: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, c :e X -> struct_r_r_e (pack_r_r_e X R T c).

Axiom pack_struct_r_r_e_E3: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, struct_r_r_e (pack_r_r_e X R T c) -> c :e X.

Axiom struct_r_r_e_eta: forall S, struct_r_r_e S -> S = pack_r_r_e (S 0) (decode_r (S 1)) (decode_r (S 2)) (S 3).


(* Parameter unpack_r_r_e_i "20b8500adedec7ee10c58967a909b1690afb6d4c04a01aad4a0916644e88162a" "6bf5a21daea62f2e3db5303c1e08f2a405a5b4b3189026789af058212fc439be" *)
Parameter unpack_r_r_e_i :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_r_r_e_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X R' T' c = Phi X R T c)
  ->
  unpack_r_r_e_i (pack_r_r_e X R T c) Phi = Phi X R T c.


(* Parameter unpack_r_r_e_o "c93d0625e7be81aabbd0506343c25015500c7867fac3b1c1a1d456e03378c00c" "05e470986897495202247555195bc52029ac29fa099f96b1b6785c2405ca2dfd" *)
Parameter unpack_r_r_e_o :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_r_r_e_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> prop,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X R' T' c = Phi X R T c)
  ->
  unpack_r_r_e_o (pack_r_r_e X R T c) Phi = Phi X R T c.


(* Parameter pack_r_p_e "4321104cce0d9062d53521911e21be1c9caee5ae1a2098d43035aa02c745f6b8" "c4d8e27eade2b0cfd0f7770b4207cc69bd63c4ccd9acc7ec37edc525f00b0267" *)
Parameter pack_r_p_e :set -> (set -> set -> prop) -> (set -> prop) -> set -> set.

Axiom pack_r_p_e_0_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_p_e X R P c -> X = S 0.

Axiom pack_r_p_e_0_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, X = pack_r_p_e X R P c 0.

Axiom pack_r_p_e_1_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_p_e X R P c -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_p_e_1_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_r_p_e X R P c 1) x y.

Axiom pack_r_p_e_2_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_p_e X R P c -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_r_p_e_2_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_r_p_e X R P c 2) x.

Axiom pack_r_p_e_3_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_p_e X R P c -> c = S 3.

Axiom pack_r_p_e_3_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c = pack_r_p_e X R P c 3.

Axiom pack_r_p_e_inj : forall X X', forall R R':set -> set -> prop, forall P P':set -> prop, forall c c':set, pack_r_p_e X R P c = pack_r_p_e X' R' P' c' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_r_p_e_ext : forall X, forall R R':set -> set -> prop, forall P P':set -> prop, forall c,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_r_p_e X R P c = pack_r_p_e X R' P' c.

(* Parameter struct_r_p_e "4e95b2dd2888b8ee5c306bfe8140a9db3071f253b29775dcaa9644fed6cf9f7c" "0492808b6a8765162db7f075ac2593264198464c84cd20992af33f4805175496" *)
Parameter struct_r_p_e :set -> prop.

Axiom pack_struct_r_p_e_I: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c :e X -> struct_r_p_e (pack_r_p_e X R P c).

Axiom pack_struct_r_p_e_E3: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, struct_r_p_e (pack_r_p_e X R P c) -> c :e X.

Axiom struct_r_p_e_eta: forall S, struct_r_p_e S -> S = pack_r_p_e (S 0) (decode_r (S 1)) (decode_p (S 2)) (S 3).


(* Parameter unpack_r_p_e_i "e391e7e265d3f0ac642ed581e362bb749bbd609dda16756dcee4f861b1c71fcb" "87754e7652c6fa00aa427fdf77ec5372e851b46efb01ecf2748a9a6ad33e00cb" *)
Parameter unpack_r_p_e_i :set -> (set -> (set -> set -> prop) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_r_p_e_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> prop) -> set -> set,
  forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' P' c = Phi X R P c)
  ->
  unpack_r_p_e_i (pack_r_p_e X R P c) Phi = Phi X R P c.


(* Parameter unpack_r_p_e_o "18293279fe804e7e0ef3c31f4c105e9963ca09925ad2d9a52f98d0a5afa0c52d" "37081781cd568281593d0d504b3c909509802055b8e8c79b69919a94b29385ed" *)
Parameter unpack_r_p_e_o :set -> (set -> (set -> set -> prop) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_r_p_e_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> prop) -> set -> prop,
  forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' P' c = Phi X R P c)
  ->
  unpack_r_p_e_o (pack_r_p_e X R P c) Phi = Phi X R P c.


(* Parameter pack_p_p_e "b66493991f7aa7546404ded0ea3691ee6a691d9e5fcc6bbea697a3b32b4d3ef7" "5731a645b11c39412326f67b3dcd5e3932e78e4ec85e05990b877d9fd81f1772" *)
Parameter pack_p_p_e :set -> (set -> prop) -> (set -> prop) -> set -> set.

Axiom pack_p_p_e_0_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, S = pack_p_p_e X P Q c -> X = S 0.

Axiom pack_p_p_e_0_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, X = pack_p_p_e X P Q c 0.

Axiom pack_p_p_e_1_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, S = pack_p_p_e X P Q c -> forall x :e X, P x = decode_p (S 1) x.

Axiom pack_p_p_e_1_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_p_p_e X P Q c 1) x.

Axiom pack_p_p_e_2_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, S = pack_p_p_e X P Q c -> forall x :e X, Q x = decode_p (S 2) x.

Axiom pack_p_p_e_2_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall x :e X, Q x = decode_p (pack_p_p_e X P Q c 2) x.

Axiom pack_p_p_e_3_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, S = pack_p_p_e X P Q c -> c = S 3.

Axiom pack_p_p_e_3_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, c = pack_p_p_e X P Q c 3.

Axiom pack_p_p_e_inj : forall X X', forall P P':set -> prop, forall Q Q':set -> prop, forall c c':set, pack_p_p_e X P Q c = pack_p_p_e X' P' Q' c' -> X = X' /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x) /\ c = c'.

Axiom pack_p_p_e_ext : forall X, forall P P':set -> prop, forall Q Q':set -> prop, forall c,
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_p_p_e X P Q c = pack_p_p_e X P' Q' c.

(* Parameter struct_p_p_e "8bbdca2f1fb0cd8481d71a5579d35a1fa36119fdb70456f98f852feef3c9bc13" "b66998352219cce4acba8e11648502b25d799b0d48aed14359ff8c79bd5cbbcc" *)
Parameter struct_p_p_e :set -> prop.

Axiom pack_struct_p_p_e_I: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, c :e X -> struct_p_p_e (pack_p_p_e X P Q c).

Axiom pack_struct_p_p_e_E3: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, struct_p_p_e (pack_p_p_e X P Q c) -> c :e X.

Axiom struct_p_p_e_eta: forall S, struct_p_p_e S -> S = pack_p_p_e (S 0) (decode_p (S 1)) (decode_p (S 2)) (S 3).


(* Parameter unpack_p_p_e_i "9008b8ed7fe63fcb190756e5a4c34dd9fe42a6a1efb183ec8425824cb6fe6451" "7747b26af70aa6e7bcacbd51e083e60788a8bf326f179f478e99475bc6e63e7b" *)
Parameter unpack_p_p_e_i :set -> (set -> (set -> prop) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_p_p_e_i_eq : forall Phi:set -> (set -> prop) -> (set -> prop) -> set -> set,
  forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X P' Q' c = Phi X P Q c)
  ->
  unpack_p_p_e_i (pack_p_p_e X P Q c) Phi = Phi X P Q c.


(* Parameter unpack_p_p_e_o "2b2a2855a69304e8a20a80f25e76de97e530452ecd3b381c21a353e0d9eafcfc" "bd345acfbd60201316135696f48d63aacd4da385f69421614e583cef8d12a448" *)
Parameter unpack_p_p_e_o :set -> (set -> (set -> prop) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_p_p_e_o_eq : forall Phi:set -> (set -> prop) -> (set -> prop) -> set -> prop,
  forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X P' Q' c = Phi X P Q c)
  ->
  unpack_p_p_e_o (pack_p_p_e X P Q c) Phi = Phi X P Q c.

(* Parameter pack_c_b_u_u "5303b10cc8bf18a538259390c50a28db19c3ba634fadb151681d758c19781d05" "f4c339a56c9494e8d4b4a7d755f4f5398bdfbd8f1369c2a5e68d5527c5bc4513" *)
Parameter pack_c_b_u_u :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> set.

Axiom pack_c_b_u_u_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_c_b_u_u X C f i j -> X = S 0.

Axiom pack_c_b_u_u_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, X = pack_c_b_u_u X C f i j 0.

Axiom pack_c_b_u_u_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_c_b_u_u X C f i j -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_u_u_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_u_u X C f i j 1) U.

Axiom pack_c_b_u_u_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_c_b_u_u X C f i j -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_u_u_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, forall x y :e X, f x y = decode_b (pack_c_b_u_u X C f i j 2) x y.

Axiom pack_c_b_u_u_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_c_b_u_u X C f i j -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_c_b_u_u_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, forall x :e X, i x = decode_u (pack_c_b_u_u X C f i j 3) x.

Axiom pack_c_b_u_u_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_c_b_u_u X C f i j -> forall x :e X, j x = decode_u (S 4) x.

Axiom pack_c_b_u_u_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, forall x :e X, j x = decode_u (pack_c_b_u_u X C f i j 4) x.

Axiom pack_c_b_u_u_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall j j':set -> set, pack_c_b_u_u X C f i j = pack_c_b_u_u X' C' f' i' j' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x).

Axiom pack_c_b_u_u_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall j j':set -> set,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 pack_c_b_u_u X C f i j = pack_c_b_u_u X C' f' i' j'.

(* Parameter struct_c_b_u_u "27b4e486614b631c78d53b90890e751a7118c014ade0c494181ca4a238a0a125" "614e4521d55bb22391f5f70f5f8665cbd665893678ce4af60fafefe0a790a3d9" *)
Parameter struct_c_b_u_u :set -> prop.

Axiom pack_struct_c_b_u_u_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> struct_c_b_u_u (pack_c_b_u_u X C f i j).

Axiom pack_struct_c_b_u_u_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, struct_c_b_u_u (pack_c_b_u_u X C f i j) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_u_u_E3: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, struct_c_b_u_u (pack_c_b_u_u X C f i j) -> forall x :e X, i x :e X.

Axiom pack_struct_c_b_u_u_E4: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set, struct_c_b_u_u (pack_c_b_u_u X C f i j) -> forall x :e X, j x :e X.

Axiom struct_c_b_u_u_eta: forall S, struct_c_b_u_u S -> S = pack_c_b_u_u (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_u (S 3)) (decode_u (S 4)).


(* Parameter unpack_c_b_u_u_i "5ede0cf476d967e6b4b32ee88eba087d973e264eacd0f70a297a6c1dd43eefc2" "c6d763e23af7d70f1a4f05d24eb92c9b3b9f81686f308b940531671b93ea5a61" *)
Parameter unpack_c_b_u_u_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> set) -> set.

Axiom unpack_c_b_u_u_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X C' f' i' j' = Phi X C f i j)
  ->
  unpack_c_b_u_u_i (pack_c_b_u_u X C f i j) Phi = Phi X C f i j.


(* Parameter unpack_c_b_u_u_o "7447da65bc371f72c6700eb5ec018ba777d1a05789af4f4dbc5819790aa5cc87" "2abc05799de2eb2d73409e65b3c7a27de461f98773b8f402c1961b462901b747" *)
Parameter unpack_c_b_u_u_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> prop) -> prop.

Axiom unpack_c_b_u_u_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall j:set -> set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X C' f' i' j' = Phi X C f i j)
  ->
  unpack_c_b_u_u_o (pack_c_b_u_u X C f i j) Phi = Phi X C f i j.


(* Parameter pack_c_b_u_r "5382fc77e01d2f6be7a45e931093de15d5907f3b524428bcfecf8a2ffaf5d1f9" "55a3b7c54f4b775c798f66b6dd3da6e3666b29f0ac9de8c4254686f7b61ab5a1" *)
Parameter pack_c_b_u_r :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set.

Axiom pack_c_b_u_r_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_b_u_r X C f i R -> X = S 0.

Axiom pack_c_b_u_r_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, X = pack_c_b_u_r X C f i R 0.

Axiom pack_c_b_u_r_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_b_u_r X C f i R -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_u_r_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_u_r X C f i R 1) U.

Axiom pack_c_b_u_r_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_b_u_r X C f i R -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_u_r_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_c_b_u_r X C f i R 2) x y.

Axiom pack_c_b_u_r_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_b_u_r X C f i R -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_c_b_u_r_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x :e X, i x = decode_u (pack_c_b_u_r X C f i R 3) x.

Axiom pack_c_b_u_r_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_c_b_u_r X C f i R -> forall x y :e X, R x y = decode_r (S 4) x y.

Axiom pack_c_b_u_r_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_c_b_u_r X C f i R 4) x y.

Axiom pack_c_b_u_r_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, pack_c_b_u_r X C f i R = pack_c_b_u_r X' C' f' i' R' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_c_b_u_r_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_b_u_r X C f i R = pack_c_b_u_r X C' f' i' R'.

(* Parameter struct_c_b_u_r "80fb70a8d1dff15e44796b1e78303eaa7ef179f797be1749888a9834e52dc5fa" "602e9ea9914dd8708f439fa3eab201948083d6398b3c9cea8be23b8f5c5d802e" *)
Parameter struct_c_b_u_r :set -> prop.

Axiom pack_struct_c_b_u_r_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, struct_c_b_u_r (pack_c_b_u_r X C f i R).

Axiom pack_struct_c_b_u_r_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, struct_c_b_u_r (pack_c_b_u_r X C f i R) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_u_r_E3: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, struct_c_b_u_r (pack_c_b_u_r X C f i R) -> forall x :e X, i x :e X.

Axiom struct_c_b_u_r_eta: forall S, struct_c_b_u_r S -> S = pack_c_b_u_r (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_u (S 3)) (decode_r (S 4)).


(* Parameter unpack_c_b_u_r_i "d4bdc86c2b3f8275946f2e681f6b152d0ffc13defd3bac05d116e341a2c22490" "451bc8299a3afb2ffc1877e59ed5c85777f5899af6e62d83dc5ce35d9fc7863d" *)
Parameter unpack_c_b_u_r_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_c_b_u_r_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' f' i' R' = Phi X C f i R)
  ->
  unpack_c_b_u_r_i (pack_c_b_u_r X C f i R) Phi = Phi X C f i R.


(* Parameter unpack_c_b_u_r_o "7fd70f11d193e373cd1ea6d77b91edf3de1fbf6187252b77c374bcc283821cbe" "50af3f0e202e31f5e1fbe2f6c1a9688c7acec4c91ebbab202e27570610746455" *)
Parameter unpack_c_b_u_r_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_c_b_u_r_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' f' i' R' = Phi X C f i R)
  ->
  unpack_c_b_u_r_o (pack_c_b_u_r X C f i R) Phi = Phi X C f i R.


(* Parameter pack_c_b_u_p "b4a9b075c53b822844c2ea3f9eef27522843196d70b65422607f9b4283de3def" "f0c6503244807062e1ecd1678059c6c7d8e383b2f299f1488ef407996c97301f" *)
Parameter pack_c_b_u_p :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set.

Axiom pack_c_b_u_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_c_b_u_p X C f i P -> X = S 0.

Axiom pack_c_b_u_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, X = pack_c_b_u_p X C f i P 0.

Axiom pack_c_b_u_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_c_b_u_p X C f i P -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_u_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_u_p X C f i P 1) U.

Axiom pack_c_b_u_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_c_b_u_p X C f i P -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_u_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_c_b_u_p X C f i P 2) x y.

Axiom pack_c_b_u_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_c_b_u_p X C f i P -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_c_b_u_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x :e X, i x = decode_u (pack_c_b_u_p X C f i P 3) x.

Axiom pack_c_b_u_p_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_c_b_u_p X C f i P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_c_b_u_p_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_c_b_u_p X C f i P 4) x.

Axiom pack_c_b_u_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop, pack_c_b_u_p X C f i P = pack_c_b_u_p X' C' f' i' P' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x).

Axiom pack_c_b_u_p_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_b_u_p X C f i P = pack_c_b_u_p X C' f' i' P'.

(* Parameter struct_c_b_u_p "c37e75acd07ea78a4136072aa775d5d4dfde506a4d783cbf8f7f5e6183389b0a" "46273e3280756faf73eb2136bf0d6e0dcfcd5bd6914a469dd940bda98f520a41" *)
Parameter struct_c_b_u_p :set -> prop.

Axiom pack_struct_c_b_u_p_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, struct_c_b_u_p (pack_c_b_u_p X C f i P).

Axiom pack_struct_c_b_u_p_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, struct_c_b_u_p (pack_c_b_u_p X C f i P) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_u_p_E3: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, struct_c_b_u_p (pack_c_b_u_p X C f i P) -> forall x :e X, i x :e X.

Axiom struct_c_b_u_p_eta: forall S, struct_c_b_u_p S -> S = pack_c_b_u_p (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_u (S 3)) (decode_p (S 4)).


(* Parameter unpack_c_b_u_p_i "b890ad6189c9cffe8dfaa3ece922f9827990711237b505010c3919dd7658da01" "d3c302ed230772570f7bbebd0704c1492717af3224e6ddda2ee18eb91d8d3efc" *)
Parameter unpack_c_b_u_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_c_b_u_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' i' P' = Phi X C f i P)
  ->
  unpack_c_b_u_p_i (pack_c_b_u_p X C f i P) Phi = Phi X C f i P.


(* Parameter unpack_c_b_u_p_o "4cbe182e416ca243f72765e023313819aca8f4b43290bd8c9c50e2133fe385dd" "bc24ccc6dddb853a4356d8592b25ea2a27c019a3b10e467d9b8681b2de5d5322" *)
Parameter unpack_c_b_u_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_b_u_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' i' P' = Phi X C f i P)
  ->
  unpack_c_b_u_p_o (pack_c_b_u_p X C f i P) Phi = Phi X C f i P.


(* Parameter pack_c_b_u_e "2f00b3f3149094496065c74a18affe4b43f7d94055a943aae5185beeacec9c99" "f9d5b55ed9bd265caa75b9db9ca861d6a8e5412c19ce265d4cecfb326d154642" *)
Parameter pack_c_b_u_e :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set -> set.

Axiom pack_c_b_u_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_c_b_u_e X C f i c -> X = S 0.

Axiom pack_c_b_u_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, X = pack_c_b_u_e X C f i c 0.

Axiom pack_c_b_u_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_c_b_u_e X C f i c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_u_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_u_e X C f i c 1) U.

Axiom pack_c_b_u_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_c_b_u_e X C f i c -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_u_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall x y :e X, f x y = decode_b (pack_c_b_u_e X C f i c 2) x y.

Axiom pack_c_b_u_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_c_b_u_e X C f i c -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_c_b_u_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall x :e X, i x = decode_u (pack_c_b_u_e X C f i c 3) x.

Axiom pack_c_b_u_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, S = pack_c_b_u_e X C f i c -> c = S 4.

Axiom pack_c_b_u_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, c = pack_c_b_u_e X C f i c 4.

Axiom pack_c_b_u_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall c c':set, pack_c_b_u_e X C f i c = pack_c_b_u_e X' C' f' i' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ c = c'.

Axiom pack_c_b_u_e_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall i i':set -> set, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_c_b_u_e X C f i c = pack_c_b_u_e X C' f' i' c.

(* Parameter struct_c_b_u_e "8e13f5f4e1b64ff341da653d34bc05443520f675b29d811d26387a4f468f5f30" "71bcdf9baad76c82fa10a8abc4f36775b4001d57b788efddbe8d65a2d09121c4" *)
Parameter struct_c_b_u_e :set -> prop.

Axiom pack_struct_c_b_u_e_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall c:set, c :e X -> struct_c_b_u_e (pack_c_b_u_e X C f i c).

Axiom pack_struct_c_b_u_e_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, struct_c_b_u_e (pack_c_b_u_e X C f i c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_u_e_E3: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, struct_c_b_u_e (pack_c_b_u_e X C f i c) -> forall x :e X, i x :e X.

Axiom pack_struct_c_b_u_e_E4: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set, struct_c_b_u_e (pack_c_b_u_e X C f i c) -> c :e X.

Axiom struct_c_b_u_e_eta: forall S, struct_c_b_u_e S -> S = pack_c_b_u_e (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_u (S 3)) (S 4).


(* Parameter unpack_c_b_u_e_i "e45440c53652105a4bad0e81f75b581bb5e6de6fd948b333789d616ac31eb509" "501c8dde58a8252739a0c50cf1f4a1dfe4b1f1ee08dbe2f7403e75da8f7dddd0" *)
Parameter unpack_c_b_u_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set -> set) -> set.

Axiom unpack_c_b_u_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' f' i' c = Phi X C f i c)
  ->
  unpack_c_b_u_e_i (pack_c_b_u_e X C f i c) Phi = Phi X C f i c.


(* Parameter unpack_c_b_u_e_o "56e71c6568b2445b53353fb31eb1ace71c26b258fa5f4867e9e184cb2f1b7bd9" "4bb4075625a67235438cad8ff173fd0f47fb81607b1f6f64920e85b274472871" *)
Parameter unpack_c_b_u_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set -> prop) -> prop.

Axiom unpack_c_b_u_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall i:set -> set, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' f' i' c = Phi X C f i c)
  ->
  unpack_c_b_u_e_o (pack_c_b_u_e X C f i c) Phi = Phi X C f i c.


(* Parameter pack_c_b_r_r "9f91dc1ad647698eea40498ba6db19097a9eb207599b4b54e7aea14d2ba0c66e" "ea4965908ff776564024bc1ad6e70a66873f73318c57af45be9740c4649a26b1" *)
Parameter pack_c_b_r_r :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set.

Axiom pack_c_b_r_r_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_b_r_r X C f R T -> X = S 0.

Axiom pack_c_b_r_r_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, X = pack_c_b_r_r X C f R T 0.

Axiom pack_c_b_r_r_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_b_r_r X C f R T -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_r_r_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_r_r X C f R T 1) U.

Axiom pack_c_b_r_r_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_b_r_r X C f R T -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_r_r_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_c_b_r_r X C f R T 2) x y.

Axiom pack_c_b_r_r_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_b_r_r X C f R T -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_b_r_r_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_c_b_r_r X C f R T 3) x y.

Axiom pack_c_b_r_r_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_b_r_r X C f R T -> forall x y :e X, T x y = decode_r (S 4) x y.

Axiom pack_c_b_r_r_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, T x y = decode_r (pack_c_b_r_r X C f R T 4) x y.

Axiom pack_c_b_r_r_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop, pack_c_b_r_r X C f R T = pack_c_b_r_r X' C' f' R' T' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y).

Axiom pack_c_b_r_r_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_c_b_r_r X C f R T = pack_c_b_r_r X C' f' R' T'.

(* Parameter struct_c_b_r_r "d41df825e4d90bfb9a810bc6deaf5d72dc98485e9c021daab862a2ba54856a2b" "ed8c93098b878e39f3f8c40d30427fe880959e876df703ca5e56f9eccb18b3fe" *)
Parameter struct_c_b_r_r :set -> prop.

Axiom pack_struct_c_b_r_r_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall T:set -> set -> prop, struct_c_b_r_r (pack_c_b_r_r X C f R T).

Axiom pack_struct_c_b_r_r_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_c_b_r_r (pack_c_b_r_r X C f R T) -> forall x y :e X, f x y :e X.

Axiom struct_c_b_r_r_eta: forall S, struct_c_b_r_r S -> S = pack_c_b_r_r (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_r (S 3)) (decode_r (S 4)).


(* Parameter unpack_c_b_r_r_i "052fb4fc74df8bd9c41efd932729730658a6574b04c9428d2ae97fd33dd647ee" "e6cc008efffe684950783bacd05dbf076777859f070816f8aac6282a9ce978e5" *)
Parameter unpack_c_b_r_r_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_c_b_r_r_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X C' f' R' T' = Phi X C f R T)
  ->
  unpack_c_b_r_r_i (pack_c_b_r_r X C f R T) Phi = Phi X C f R T.


(* Parameter unpack_c_b_r_r_o "aa9393501999494ea1ae2dd4d63c5f3a859c2448fc82a687c47833fb8df48533" "218fd593974d8aabec0bd06b096b758636af1d983601fdbd8f709c3a1e757325" *)
Parameter unpack_c_b_r_r_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_c_b_r_r_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X C' f' R' T' = Phi X C f R T)
  ->
  unpack_c_b_r_r_o (pack_c_b_r_r X C f R T) Phi = Phi X C f R T.


(* Parameter pack_c_b_r_p "58950ff3e042c753e11125f23ca45e9f45c419cc1d83c04e00f5df2f1d04ab76" "02a69788b391aaee176a09d3f3590a14da0c64927f8e8202cfda59855f6e56d9" *)
Parameter pack_c_b_r_p :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_c_b_r_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_b_r_p X C f R P -> X = S 0.

Axiom pack_c_b_r_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, X = pack_c_b_r_p X C f R P 0.

Axiom pack_c_b_r_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_b_r_p X C f R P -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_r_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_r_p X C f R P 1) U.

Axiom pack_c_b_r_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_b_r_p X C f R P -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_r_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_c_b_r_p X C f R P 2) x y.

Axiom pack_c_b_r_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_b_r_p X C f R P -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_b_r_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_c_b_r_p X C f R P 3) x y.

Axiom pack_c_b_r_p_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_b_r_p X C f R P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_c_b_r_p_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_c_b_r_p X C f R P 4) x.

Axiom pack_c_b_r_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, pack_c_b_r_p X C f R P = pack_c_b_r_p X' C' f' R' P' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_c_b_r_p_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_b_r_p X C f R P = pack_c_b_r_p X C' f' R' P'.

(* Parameter struct_c_b_r_p "41dbc343dbbf91f10cdd7dd0de9eafbda94687837270649efbb00c50d4d9b008" "a57e6e17457680064de7365f74da64f0485246f6d234a87c6c73dd3985024e8b" *)
Parameter struct_c_b_r_p :set -> prop.

Axiom pack_struct_c_b_r_p_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall P:set -> prop, struct_c_b_r_p (pack_c_b_r_p X C f R P).

Axiom pack_struct_c_b_r_p_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_c_b_r_p (pack_c_b_r_p X C f R P) -> forall x y :e X, f x y :e X.

Axiom struct_c_b_r_p_eta: forall S, struct_c_b_r_p S -> S = pack_c_b_r_p (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_r (S 3)) (decode_p (S 4)).


(* Parameter unpack_c_b_r_p_i "ad3c20a17ade26ce4a5e67e4f26f8fdb6efbf6d0d75500b21cbe88eb4f881118" "3955d96285427452d3dd0c16ff9b82bcdf4eb4ff12044f76286a9c7e2cc45595" *)
Parameter unpack_c_b_r_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_c_b_r_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' R' P' = Phi X C f R P)
  ->
  unpack_c_b_r_p_i (pack_c_b_r_p X C f R P) Phi = Phi X C f R P.


(* Parameter unpack_c_b_r_p_o "5fb3163a3a3a0a2e8578bcfd84c02f8047996dbec0dac6b289c02ade12ac43bd" "b1d8455e58cb7aeaba38aa84c327403793dc5ece50e9e6495718012229828419" *)
Parameter unpack_c_b_r_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_b_r_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' R' P' = Phi X C f R P)
  ->
  unpack_c_b_r_p_o (pack_c_b_r_p X C f R P) Phi = Phi X C f R P.


(* Parameter pack_c_b_r_e "df9d9a0b9d67589377f08d128d7ddd7ffb16b02b8437ca37d3b457a65456c9d7" "511bf49cf5d233dbafc1f5f9e44ff814ef81c8c8bf584634246d01ac127a2d3a" *)
Parameter pack_c_b_r_e :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set.

Axiom pack_c_b_r_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_b_r_e X C f R c -> X = S 0.

Axiom pack_c_b_r_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, X = pack_c_b_r_e X C f R c 0.

Axiom pack_c_b_r_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_b_r_e X C f R c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_r_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_r_e X C f R c 1) U.

Axiom pack_c_b_r_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_b_r_e X C f R c -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_r_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_c_b_r_e X C f R c 2) x y.

Axiom pack_c_b_r_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_b_r_e X C f R c -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_b_r_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_c_b_r_e X C f R c 3) x y.

Axiom pack_c_b_r_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_b_r_e X C f R c -> c = S 4.

Axiom pack_c_b_r_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, c = pack_c_b_r_e X C f R c 4.

Axiom pack_c_b_r_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall c c':set, pack_c_b_r_e X C f R c = pack_c_b_r_e X' C' f' R' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_c_b_r_e_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_b_r_e X C f R c = pack_c_b_r_e X C' f' R' c.

(* Parameter struct_c_b_r_e "390fc4600463d505da84a02614562715ec110f50b35ef60c795a3e8cf5642e76" "e67bc4f46a82d2da832c0b1ea8593b15f1d43cb42c47c14bedf3224d91bb4039" *)
Parameter struct_c_b_r_e :set -> prop.

Axiom pack_struct_c_b_r_e_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> struct_c_b_r_e (pack_c_b_r_e X C f R c).

Axiom pack_struct_c_b_r_e_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, struct_c_b_r_e (pack_c_b_r_e X C f R c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_r_e_E4: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, struct_c_b_r_e (pack_c_b_r_e X C f R c) -> c :e X.

Axiom struct_c_b_r_e_eta: forall S, struct_c_b_r_e S -> S = pack_c_b_r_e (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_r (S 3)) (S 4).


(* Parameter unpack_c_b_r_e_i "7a7b23635d82bac4e1ee7ba0b700c14e0873a338a5c780feba5d3fb30cb5b90d" "4f47e776aa7cb3eef41dd7988417e9834fc6ac60f0b469dfec2830710f05fa81" *)
Parameter unpack_c_b_r_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_c_b_r_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' f' R' c = Phi X C f R c)
  ->
  unpack_c_b_r_e_i (pack_c_b_r_e X C f R c) Phi = Phi X C f R c.


(* Parameter unpack_c_b_r_e_o "496e4c56b520167910904414322aae233a05c332050c9ead6f07624998b0def3" "ae05fe4ac7774fa3e702f77bdb55f4be5dd1f90d59b786c9e05f55df7cdaf2de" *)
Parameter unpack_c_b_r_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_c_b_r_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> set -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' f' R' c = Phi X C f R c)
  ->
  unpack_c_b_r_e_o (pack_c_b_r_e X C f R c) Phi = Phi X C f R c.


(* Parameter pack_c_b_p_p "2c55b23804c6b6e947bd743a023618446280a5fbd4503e99a9c5918e0b3fee4c" "5fd40c9aad5c89f8bc38d285e57d2fe9451223493ac4ca0f140b944adfeba00e" *)
Parameter pack_c_b_p_p :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_c_b_p_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_b_p_p X C f P Q -> X = S 0.

Axiom pack_c_b_p_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, X = pack_c_b_p_p X C f P Q 0.

Axiom pack_c_b_p_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_b_p_p X C f P Q -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_p_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_p_p X C f P Q 1) U.

Axiom pack_c_b_p_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_b_p_p X C f P Q -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_p_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, f x y = decode_b (pack_c_b_p_p X C f P Q 2) x y.

Axiom pack_c_b_p_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_b_p_p X C f P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_b_p_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_c_b_p_p X C f P Q 3) x.

Axiom pack_c_b_p_p_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_b_p_p X C f P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_c_b_p_p_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_c_b_p_p X C f P Q 4) x.

Axiom pack_c_b_p_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall P P':set -> prop, forall Q Q':set -> prop, pack_c_b_p_p X C f P Q = pack_c_b_p_p X' C' f' P' Q' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_c_b_p_p_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_c_b_p_p X C f P Q = pack_c_b_p_p X C' f' P' Q'.

(* Parameter struct_c_b_p_p "e480d744d3179a41e70b5a7b752a6f52ecf23e43a4b122c913fdbe24cb157faf" "6cadd576448ecca7f8b8557effae12a4bd794c5aa18b83ca53ffc8b7af0e15e3" *)
Parameter struct_c_b_p_p :set -> prop.

Axiom pack_struct_c_b_p_p_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall P:set -> prop, forall Q:set -> prop, struct_c_b_p_p (pack_c_b_p_p X C f P Q).

Axiom pack_struct_c_b_p_p_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, struct_c_b_p_p (pack_c_b_p_p X C f P Q) -> forall x y :e X, f x y :e X.

Axiom struct_c_b_p_p_eta: forall S, struct_c_b_p_p S -> S = pack_c_b_p_p (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_c_b_p_p_i "429f85c9201b2368641302951e9a28f273ed3e5be5bf08ae8786f3f96e262936" "44d5e9d3325c34edacc4a5de1c36b5448dcee095731727436a8e55233fbea09d" *)
Parameter unpack_c_b_p_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_c_b_p_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X C' f' P' Q' = Phi X C f P Q)
  ->
  unpack_c_b_p_p_i (pack_c_b_p_p X C f P Q) Phi = Phi X C f P Q.


(* Parameter unpack_c_b_p_p_o "34fc9a33b379f79b48fd37948607762932951f1f6533d399f3cf3bba2553bc05" "4454761c271d7ad777119a8da2cb04aaf10e0ab0d3978ef4c07cad93e2a17224" *)
Parameter unpack_c_b_p_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_b_p_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X C' f' P' Q' = Phi X C f P Q)
  ->
  unpack_c_b_p_p_o (pack_c_b_p_p X C f P Q) Phi = Phi X C f P Q.


(* Parameter pack_c_b_p_e "d8247a0c8c85db66e770c543579f6a830222bd7a9f511cfdba83ca36505d6158" "94bbbcd72fc6b1b886298dd83aa811b1f81be072ece47c90071ae76b325f380f" *)
Parameter pack_c_b_p_e :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set -> set.

Axiom pack_c_b_p_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_c_b_p_e X C f P c -> X = S 0.

Axiom pack_c_b_p_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, X = pack_c_b_p_e X C f P c 0.

Axiom pack_c_b_p_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_c_b_p_e X C f P c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_p_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_p_e X C f P c 1) U.

Axiom pack_c_b_p_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_c_b_p_e X C f P c -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_p_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_c_b_p_e X C f P c 2) x y.

Axiom pack_c_b_p_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_c_b_p_e X C f P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_b_p_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_c_b_p_e X C f P c 3) x.

Axiom pack_c_b_p_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_c_b_p_e X C f P c -> c = S 4.

Axiom pack_c_b_p_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, c = pack_c_b_p_e X C f P c 4.

Axiom pack_c_b_p_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall P P':set -> prop, forall c c':set, pack_c_b_p_e X C f P c = pack_c_b_p_e X' C' f' P' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_c_b_p_e_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall P P':set -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_b_p_e X C f P c = pack_c_b_p_e X C' f' P' c.

(* Parameter struct_c_b_p_e "b2b4376c2aafcf9ce2e4fafee8df0ca2a4757a1bd7c4f4e6ff449c599f50c922" "57cb735bc8fdaaa91a2570d66fec402838bb40de2a930269c1f4e5eba724d1b1" *)
Parameter struct_c_b_p_e :set -> prop.

Axiom pack_struct_c_b_p_e_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall P:set -> prop, forall c:set, c :e X -> struct_c_b_p_e (pack_c_b_p_e X C f P c).

Axiom pack_struct_c_b_p_e_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, struct_c_b_p_e (pack_c_b_p_e X C f P c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_p_e_E4: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set, struct_c_b_p_e (pack_c_b_p_e X C f P c) -> c :e X.

Axiom struct_c_b_p_e_eta: forall S, struct_c_b_p_e S -> S = pack_c_b_p_e (S 0) (decode_c (S 1)) (decode_b (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_c_b_p_e_i "8c7370719bc65af3b1faf4da3e92958ff42b6aa919f45c2ab8a07a9a0ab980e5" "ac89e7f208e4d4d0fe6b102409084823f24d424ae2cc5231e672904f69882373" *)
Parameter unpack_c_b_p_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_c_b_p_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' P' c = Phi X C f P c)
  ->
  unpack_c_b_p_e_i (pack_c_b_p_e X C f P c) Phi = Phi X C f P c.


(* Parameter unpack_c_b_p_e_o "33534401874b5e0278ce4ecbcc7b37ba7bc6f52e87917e795957a7fee635ceca" "aecb45a2d78019e4a6e7d4b5096cd83202ff0aa4ba9b4a34d35466ac3c0c4076" *)
Parameter unpack_c_b_p_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_c_b_p_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> (set -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' f' P' c = Phi X C f P c)
  ->
  unpack_c_b_p_e_o (pack_c_b_p_e X C f P c) Phi = Phi X C f P c.


(* Parameter pack_c_b_e_e "1216102f2b34ee88424378d218e540eb173185baeec28f18ab88382dcc78bfce" "b3ca70d1d3a27c622c1fd1c4efb237b5440ef5d1bc82645a57fc05f58ebbdd4c" *)
Parameter pack_c_b_e_e :set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set -> set.

Axiom pack_c_b_e_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, S = pack_c_b_e_e X C f c d -> X = S 0.

Axiom pack_c_b_e_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, X = pack_c_b_e_e X C f c d 0.

Axiom pack_c_b_e_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, S = pack_c_b_e_e X C f c d -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_b_e_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_b_e_e X C f c d 1) U.

Axiom pack_c_b_e_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, S = pack_c_b_e_e X C f c d -> forall x y :e X, f x y = decode_b (S 2) x y.

Axiom pack_c_b_e_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, forall x y :e X, f x y = decode_b (pack_c_b_e_e X C f c d 2) x y.

Axiom pack_c_b_e_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, S = pack_c_b_e_e X C f c d -> c = S 3.

Axiom pack_c_b_e_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, c = pack_c_b_e_e X C f c d 3.

Axiom pack_c_b_e_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, S = pack_c_b_e_e X C f c d -> d = S 4.

Axiom pack_c_b_e_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, d = pack_c_b_e_e X C f c d 4.

Axiom pack_c_b_e_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall c c':set, forall d d':set, pack_c_b_e_e X C f c d = pack_c_b_e_e X' C' f' c' d' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, f x y = f' x y) /\ c = c' /\ d = d'.

Axiom pack_c_b_e_e_ext : forall X, forall C C':(set -> prop) -> prop, forall f f':set -> set -> set, forall c, forall d,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, f x y = f' x y) ->
 pack_c_b_e_e X C f c d = pack_c_b_e_e X C' f' c d.

(* Parameter struct_c_b_e_e "a260f9fcd13ea68a450a898d00ffca56b944add47cc2bfd87e244adddce77ef7" "b491d40ed9c90739375b88e8e41597fd692cb43b900ff6f44a0d801a3810e501" *)
Parameter struct_c_b_e_e :set -> prop.

Axiom pack_struct_c_b_e_e_I: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall c:set, c :e X -> forall d:set, d :e X -> struct_c_b_e_e (pack_c_b_e_e X C f c d).

Axiom pack_struct_c_b_e_e_E2: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, struct_c_b_e_e (pack_c_b_e_e X C f c d) -> forall x y :e X, f x y :e X.

Axiom pack_struct_c_b_e_e_E3: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, struct_c_b_e_e (pack_c_b_e_e X C f c d) -> c :e X.

Axiom pack_struct_c_b_e_e_E4: forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set, struct_c_b_e_e (pack_c_b_e_e X C f c d) -> d :e X.

Axiom struct_c_b_e_e_eta: forall S, struct_c_b_e_e S -> S = pack_c_b_e_e (S 0) (decode_c (S 1)) (decode_b (S 2)) (S 3) (S 4).


(* Parameter unpack_c_b_e_e_i "5aad0b21df62f147c63d2121fade67a9dedc37c32b2d70f047b5ee3e72e3fe5e" "c482b9aca94c7d00a0d8c9378139ba17344fe707f4922266284e50003fec2126" *)
Parameter unpack_c_b_e_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set -> set) -> set.

Axiom unpack_c_b_e_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X C' f' c d = Phi X C f c d)
  ->
  unpack_c_b_e_e_i (pack_c_b_e_e X C f c d) Phi = Phi X C f c d.


(* Parameter unpack_c_b_e_e_o "1f4d310dcdbe032a56063a9637279afdbbf66b68e5dad7dd27d9e93e79e89599" "46bc95140ed50bde3b12decf7dc823531f3e9ecad8a17eefeaf82051ffa15723" *)
Parameter unpack_c_b_e_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set -> prop) -> prop.

Axiom unpack_c_b_e_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> set) -> set -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall f:set -> set -> set, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) -> Phi X C' f' c d = Phi X C f c d)
  ->
  unpack_c_b_e_e_o (pack_c_b_e_e X C f c d) Phi = Phi X C f c d.


(* Parameter pack_c_u_r_r "9ee644e927656d2e058fff5079c5765e854bc1a5f7fc213034b1fcf00db06c02" "2ccea0fdc48b3e2596ac6cbb984a03021dd349c9e47686d7cbae8374f98ebf00" *)
Parameter pack_c_u_r_r :set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set.

Axiom pack_c_u_r_r_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_u_r_r X C i R T -> X = S 0.

Axiom pack_c_u_r_r_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, X = pack_c_u_r_r X C i R T 0.

Axiom pack_c_u_r_r_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_u_r_r X C i R T -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_r_r_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_r_r X C i R T 1) U.

Axiom pack_c_u_r_r_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_u_r_r X C i R T -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_r_r_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x :e X, i x = decode_u (pack_c_u_r_r X C i R T 2) x.

Axiom pack_c_u_r_r_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_u_r_r X C i R T -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_u_r_r_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_c_u_r_r X C i R T 3) x y.

Axiom pack_c_u_r_r_4_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_c_u_r_r X C i R T -> forall x y :e X, T x y = decode_r (S 4) x y.

Axiom pack_c_u_r_r_4_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, T x y = decode_r (pack_c_u_r_r X C i R T 4) x y.

Axiom pack_c_u_r_r_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop, pack_c_u_r_r X C i R T = pack_c_u_r_r X' C' i' R' T' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y).

Axiom pack_c_u_r_r_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_c_u_r_r X C i R T = pack_c_u_r_r X C' i' R' T'.

(* Parameter struct_c_u_r_r "58721dc378c372050967fa1dbdd26f97b73b4ea335cef8cc307de7283e300909" "5b760f2c6da13ba6d57564ce0129f63b011cb0c5d9093d105881647d0fe653c6" *)
Parameter struct_c_u_r_r :set -> prop.

Axiom pack_struct_c_u_r_r_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall T:set -> set -> prop, struct_c_u_r_r (pack_c_u_r_r X C i R T).

Axiom pack_struct_c_u_r_r_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_c_u_r_r (pack_c_u_r_r X C i R T) -> forall x :e X, i x :e X.

Axiom struct_c_u_r_r_eta: forall S, struct_c_u_r_r S -> S = pack_c_u_r_r (S 0) (decode_c (S 1)) (decode_u (S 2)) (decode_r (S 3)) (decode_r (S 4)).


(* Parameter unpack_c_u_r_r_i "814285624b2d64b30361af1d5d4e527468490126e3d685258c86b8434223d6d1" "ed97ebc1b287fefb3ce5cd2ea528e27b5b0ba02961a541945ffeb2cd35aa744f" *)
Parameter unpack_c_u_r_r_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_c_u_r_r_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X C' i' R' T' = Phi X C i R T)
  ->
  unpack_c_u_r_r_i (pack_c_u_r_r X C i R T) Phi = Phi X C i R T.


(* Parameter unpack_c_u_r_r_o "740266f24cd020ffccd12d45fbf93cb538714ed6d219c7628f181939e7d3c9f7" "6472dd7b7ca981b1f7114d05dbfb5115b435820cfa7bdbe8f4bb372c0f91eaf8" *)
Parameter unpack_c_u_r_r_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_c_u_r_r_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X C' i' R' T' = Phi X C i R T)
  ->
  unpack_c_u_r_r_o (pack_c_u_r_r X C i R T) Phi = Phi X C i R T.


(* Parameter pack_c_u_r_p "d090afc652ef2e829af029965c677a8844f2d026d5ba764bcb73eabcda833711" "db865b03012e4171ec44bb261454b8cc04fb8c44322ccf48bd55d9efe145e9d5" *)
Parameter pack_c_u_r_p :set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_c_u_r_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_u_r_p X C i R P -> X = S 0.

Axiom pack_c_u_r_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, X = pack_c_u_r_p X C i R P 0.

Axiom pack_c_u_r_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_u_r_p X C i R P -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_r_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_r_p X C i R P 1) U.

Axiom pack_c_u_r_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_u_r_p X C i R P -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_r_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, i x = decode_u (pack_c_u_r_p X C i R P 2) x.

Axiom pack_c_u_r_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_u_r_p X C i R P -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_u_r_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_c_u_r_p X C i R P 3) x y.

Axiom pack_c_u_r_p_4_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_c_u_r_p X C i R P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_c_u_r_p_4_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_c_u_r_p X C i R P 4) x.

Axiom pack_c_u_r_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, pack_c_u_r_p X C i R P = pack_c_u_r_p X' C' i' R' P' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_c_u_r_p_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_u_r_p X C i R P = pack_c_u_r_p X C' i' R' P'.

(* Parameter struct_c_u_r_p "347e91ae466507edd75be2b71e68c97116b6e517d87886ab0e8ddce2f54ae399" "b9e0ea161ee21f88a84c95005059c00cd5e124bcc79d40246d55522004b1e074" *)
Parameter struct_c_u_r_p :set -> prop.

Axiom pack_struct_c_u_r_p_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall P:set -> prop, struct_c_u_r_p (pack_c_u_r_p X C i R P).

Axiom pack_struct_c_u_r_p_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_c_u_r_p (pack_c_u_r_p X C i R P) -> forall x :e X, i x :e X.

Axiom struct_c_u_r_p_eta: forall S, struct_c_u_r_p S -> S = pack_c_u_r_p (S 0) (decode_c (S 1)) (decode_u (S 2)) (decode_r (S 3)) (decode_p (S 4)).


(* Parameter unpack_c_u_r_p_i "45134db9d0709cfc13cdd9d621df9aa1ab9755b15ff540209224c3cf9fd9e3a4" "f2b5fdf26fdbc821649374efbd0289438fbcbff81a4fa01b32133bbe0c6afdca" *)
Parameter unpack_c_u_r_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_c_u_r_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' i' R' P' = Phi X C i R P)
  ->
  unpack_c_u_r_p_i (pack_c_u_r_p X C i R P) Phi = Phi X C i R P.


(* Parameter unpack_c_u_r_p_o "8882e09e9f8d51a378ed25898b6753c2b91135ea3ef015799954e456700c3b7c" "ecbf4a3ae812c9522867f2876dd17565a4fdcfc6b5caed6cde810db37f7d4f35" *)
Parameter unpack_c_u_r_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_u_r_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' i' R' P' = Phi X C i R P)
  ->
  unpack_c_u_r_p_o (pack_c_u_r_p X C i R P) Phi = Phi X C i R P.


(* Parameter pack_c_u_r_e "611afb981b099d03d2e9e06e6f840148f0c145e602cb5e63cea789c31a7e68d5" "5926cde7fb66e17df1a09130e9fa28b81db55098acd877a2d586b8b2aba5be3f" *)
Parameter pack_c_u_r_e :set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set -> set.

Axiom pack_c_u_r_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_u_r_e X C i R c -> X = S 0.

Axiom pack_c_u_r_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, X = pack_c_u_r_e X C i R c 0.

Axiom pack_c_u_r_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_u_r_e X C i R c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_r_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_r_e X C i R c 1) U.

Axiom pack_c_u_r_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_u_r_e X C i R c -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_r_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_c_u_r_e X C i R c 2) x.

Axiom pack_c_u_r_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_u_r_e X C i R c -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_c_u_r_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_c_u_r_e X C i R c 3) x y.

Axiom pack_c_u_r_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_c_u_r_e X C i R c -> c = S 4.

Axiom pack_c_u_r_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, c = pack_c_u_r_e X C i R c 4.

Axiom pack_c_u_r_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop, forall c c':set, pack_c_u_r_e X C i R c = pack_c_u_r_e X' C' i' R' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_c_u_r_e_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall R R':set -> set -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_u_r_e X C i R c = pack_c_u_r_e X C' i' R' c.

(* Parameter struct_c_u_r_e "0042facabef0b8b2cd0b88e11f395dd64cedb701439e02dc42ea070eda126194" "3f0a420bc7dbef1504c77a49b6e39bb1e65c9c4046172267e2ba542b60444d4b" *)
Parameter struct_c_u_r_e :set -> prop.

Axiom pack_struct_c_u_r_e_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> struct_c_u_r_e (pack_c_u_r_e X C i R c).

Axiom pack_struct_c_u_r_e_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, struct_c_u_r_e (pack_c_u_r_e X C i R c) -> forall x :e X, i x :e X.

Axiom pack_struct_c_u_r_e_E4: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set, struct_c_u_r_e (pack_c_u_r_e X C i R c) -> c :e X.

Axiom struct_c_u_r_e_eta: forall S, struct_c_u_r_e S -> S = pack_c_u_r_e (S 0) (decode_c (S 1)) (decode_u (S 2)) (decode_r (S 3)) (S 4).


(* Parameter unpack_c_u_r_e_i "44170b95c29fd3d50543000d50c33efa44cea2c7e95b9b401600405edcdc822e" "e5810038d4d9092d255b555abe0d814d8f6dfc87580bafb5ac8bba66a9b2201c" *)
Parameter unpack_c_u_r_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_c_u_r_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' i' R' c = Phi X C i R c)
  ->
  unpack_c_u_r_e_i (pack_c_u_r_e X C i R c) Phi = Phi X C i R c.


(* Parameter unpack_c_u_r_e_o "51be7b85b7c141b215c46a621d8f2138c2f6d0d048a22065b1d750df64c72e32" "c5d32248d40827e4f610f731983f64c89e6fc37db8f86f146c97006e86969cf6" *)
Parameter unpack_c_u_r_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_c_u_r_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> set -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' i' R' c = Phi X C i R c)
  ->
  unpack_c_u_r_e_o (pack_c_u_r_e X C i R c) Phi = Phi X C i R c.


(* Parameter pack_c_u_p_p "56d71e5c955c4215e1a5cfbc5cb47a77a5267f8fb430542450d7ce65bfff6c27" "31431948bd97bf326f6f9a6b4277ac0b3e1876cdec332be83a53a5f1990c1a9c" *)
Parameter pack_c_u_p_p :set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_c_u_p_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_u_p_p X C i P Q -> X = S 0.

Axiom pack_c_u_p_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, X = pack_c_u_p_p X C i P Q 0.

Axiom pack_c_u_p_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_u_p_p X C i P Q -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_p_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_p_p X C i P Q 1) U.

Axiom pack_c_u_p_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_u_p_p X C i P Q -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_p_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, i x = decode_u (pack_c_u_p_p X C i P Q 2) x.

Axiom pack_c_u_p_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_u_p_p X C i P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_u_p_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_c_u_p_p X C i P Q 3) x.

Axiom pack_c_u_p_p_4_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_c_u_p_p X C i P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_c_u_p_p_4_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_c_u_p_p X C i P Q 4) x.

Axiom pack_c_u_p_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall P P':set -> prop, forall Q Q':set -> prop, pack_c_u_p_p X C i P Q = pack_c_u_p_p X' C' i' P' Q' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_c_u_p_p_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_c_u_p_p X C i P Q = pack_c_u_p_p X C' i' P' Q'.

(* Parameter struct_c_u_p_p "9780e99b41e7f1c76d8a848b89316a2544367adddc2bfa53ba8861a7c547df4c" "fefa5747998b1aff604d1d96d49720a05d617de50559dbd3ac8255126a0ad111" *)
Parameter struct_c_u_p_p :set -> prop.

Axiom pack_struct_c_u_p_p_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, forall Q:set -> prop, struct_c_u_p_p (pack_c_u_p_p X C i P Q).

Axiom pack_struct_c_u_p_p_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, struct_c_u_p_p (pack_c_u_p_p X C i P Q) -> forall x :e X, i x :e X.

Axiom struct_c_u_p_p_eta: forall S, struct_c_u_p_p S -> S = pack_c_u_p_p (S 0) (decode_c (S 1)) (decode_u (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_c_u_p_p_i "5caadaa74e8a06c8f548380c7ca6f80c9488a4ea63b96572b1a9f3c9fc8a3426" "721c040e93ef4e38ea0c2eaf074ce2f10b84806188204c18681b089d7a19a162" *)
Parameter unpack_c_u_p_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_c_u_p_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X C' i' P' Q' = Phi X C i P Q)
  ->
  unpack_c_u_p_p_i (pack_c_u_p_p X C i P Q) Phi = Phi X C i P Q.


(* Parameter unpack_c_u_p_p_o "8576055d73b6231975b9dea884b6c070cce1d7ef4d4ff5f40d526e60009bb075" "8ac453d57857bc85df9387e7843677e1d2ee9b56feb58f619dc238c75207cf62" *)
Parameter unpack_c_u_p_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_u_p_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X C' i' P' Q' = Phi X C i P Q)
  ->
  unpack_c_u_p_p_o (pack_c_u_p_p X C i P Q) Phi = Phi X C i P Q.


(* Parameter pack_c_u_p_e "bcc1b09e6ec0ffda21c030e880d830c2d8f08e6652739adbbdfc17ff83e674cc" "db7f543d42290bbdd5cd5c7a31268f88cb79778e2b70d3f5b0a989b778cc15d8" *)
Parameter pack_c_u_p_e :set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set -> set.

Axiom pack_c_u_p_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_c_u_p_e X C i P c -> X = S 0.

Axiom pack_c_u_p_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, X = pack_c_u_p_e X C i P c 0.

Axiom pack_c_u_p_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_c_u_p_e X C i P c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_p_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_p_e X C i P c 1) U.

Axiom pack_c_u_p_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_c_u_p_e X C i P c -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_p_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_c_u_p_e X C i P c 2) x.

Axiom pack_c_u_p_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_c_u_p_e X C i P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_u_p_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_c_u_p_e X C i P c 3) x.

Axiom pack_c_u_p_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_c_u_p_e X C i P c -> c = S 4.

Axiom pack_c_u_p_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, c = pack_c_u_p_e X C i P c 4.

Axiom pack_c_u_p_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall P P':set -> prop, forall c c':set, pack_c_u_p_e X C i P c = pack_c_u_p_e X' C' i' P' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_c_u_p_e_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall P P':set -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_u_p_e X C i P c = pack_c_u_p_e X C' i' P' c.

(* Parameter struct_c_u_p_e "18bf6135f63a7e75bcc2c737fad485290a9696ac94bd59032138e192ab092b03" "4f2499da40ea8dc632e09e9b02458d9b4815b33cd62e821fb48a89bbf313a247" *)
Parameter struct_c_u_p_e :set -> prop.

Axiom pack_struct_c_u_p_e_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, forall c:set, c :e X -> struct_c_u_p_e (pack_c_u_p_e X C i P c).

Axiom pack_struct_c_u_p_e_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, struct_c_u_p_e (pack_c_u_p_e X C i P c) -> forall x :e X, i x :e X.

Axiom pack_struct_c_u_p_e_E4: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set, struct_c_u_p_e (pack_c_u_p_e X C i P c) -> c :e X.

Axiom struct_c_u_p_e_eta: forall S, struct_c_u_p_e S -> S = pack_c_u_p_e (S 0) (decode_c (S 1)) (decode_u (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_c_u_p_e_i "5b33a0e5350f9e1d3cd7af49662d1fdb252f298cb65c2755648aac10bc995bc8" "0093b0edc931a629563eeec8349dd9c8cd9c8fb07c03400b56a53c3ef938b320" *)
Parameter unpack_c_u_p_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_c_u_p_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' i' P' c = Phi X C i P c)
  ->
  unpack_c_u_p_e_i (pack_c_u_p_e X C i P c) Phi = Phi X C i P c.


(* Parameter unpack_c_u_p_e_o "e847042013e231e3e9409f88f930230f0a0dda2ecfa84b3421d5b01f2d846c3a" "8a88b7bc17aeffb2035fa1940226a2b5ab140f9af229d111415bdaeffe67c162" *)
Parameter unpack_c_u_p_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_c_u_p_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> (set -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' i' P' c = Phi X C i P c)
  ->
  unpack_c_u_p_e_o (pack_c_u_p_e X C i P c) Phi = Phi X C i P c.


(* Parameter pack_c_u_e_e "7e8ce52d730d9ac0d249cd479aa845a68950f04906cad8d75ae732734b04e92d" "49b190ed3416d84def86631b0e2d0084016cd6bbc12eb770a5a17f608bc0727d" *)
Parameter pack_c_u_e_e :set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set -> set.

Axiom pack_c_u_e_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, S = pack_c_u_e_e X C i c d -> X = S 0.

Axiom pack_c_u_e_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, X = pack_c_u_e_e X C i c d 0.

Axiom pack_c_u_e_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, S = pack_c_u_e_e X C i c d -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_u_e_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_u_e_e X C i c d 1) U.

Axiom pack_c_u_e_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, S = pack_c_u_e_e X C i c d -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_c_u_e_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, forall x :e X, i x = decode_u (pack_c_u_e_e X C i c d 2) x.

Axiom pack_c_u_e_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, S = pack_c_u_e_e X C i c d -> c = S 3.

Axiom pack_c_u_e_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, c = pack_c_u_e_e X C i c d 3.

Axiom pack_c_u_e_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, S = pack_c_u_e_e X C i c d -> d = S 4.

Axiom pack_c_u_e_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, d = pack_c_u_e_e X C i c d 4.

Axiom pack_c_u_e_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall i i':set -> set, forall c c':set, forall d d':set, pack_c_u_e_e X C i c d = pack_c_u_e_e X' C' i' c' d' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, i x = i' x) /\ c = c' /\ d = d'.

Axiom pack_c_u_e_e_ext : forall X, forall C C':(set -> prop) -> prop, forall i i':set -> set, forall c, forall d,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, i x = i' x) ->
 pack_c_u_e_e X C i c d = pack_c_u_e_e X C' i' c d.

(* Parameter struct_c_u_e_e "724c10411795d3293da878b57f1e2683f37409e924e76cb5779118a48e908568" "3dca39119b52c60678ddc1f4b537255be377eb6f8e3df97b482a917f1c0d9c43" *)
Parameter struct_c_u_e_e :set -> prop.

Axiom pack_struct_c_u_e_e_I: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, (forall x :e X, i x :e X) -> forall c:set, c :e X -> forall d:set, d :e X -> struct_c_u_e_e (pack_c_u_e_e X C i c d).

Axiom pack_struct_c_u_e_e_E2: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, struct_c_u_e_e (pack_c_u_e_e X C i c d) -> forall x :e X, i x :e X.

Axiom pack_struct_c_u_e_e_E3: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, struct_c_u_e_e (pack_c_u_e_e X C i c d) -> c :e X.

Axiom pack_struct_c_u_e_e_E4: forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set, struct_c_u_e_e (pack_c_u_e_e X C i c d) -> d :e X.

Axiom struct_c_u_e_e_eta: forall S, struct_c_u_e_e S -> S = pack_c_u_e_e (S 0) (decode_c (S 1)) (decode_u (S 2)) (S 3) (S 4).


(* Parameter unpack_c_u_e_e_i "fa3dcabfed8da3f4aff74c33dd28c13c173381abdb5c13fd94f8691b9bb268c7" "37225eb7a4153c07b5505b2f8cee0c6221814dfd63f2493fd99e691aac94eac0" *)
Parameter unpack_c_u_e_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set -> set) -> set.

Axiom unpack_c_u_e_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' i' c d = Phi X C i c d)
  ->
  unpack_c_u_e_e_i (pack_c_u_e_e X C i c d) Phi = Phi X C i c d.


(* Parameter unpack_c_u_e_e_o "d8a5d4366fa3b5cfbf1fb43d7f985ba38505983fc680e63d917f8b81d3ad82c4" "4fd117e2b4520168c417d96d9f6d3af636bc608d6998817cabc59080efc07a3d" *)
Parameter unpack_c_u_e_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set -> prop) -> prop.

Axiom unpack_c_u_e_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set) -> set -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall i:set -> set, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X C' i' c d = Phi X C i c d)
  ->
  unpack_c_u_e_e_o (pack_c_u_e_e X C i c d) Phi = Phi X C i c d.


(* Parameter pack_c_r_p_p "eec6f8885bcf300f040cfc3a79337bd622ef5aabf4b09073e0f7dc594ba7ede4" "2ce29d970670c47f63cdf8a3aa561a2a88391fdc4ea9b957bed16622a86e4cdf" *)
Parameter pack_c_r_p_p :set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_c_r_p_p_0_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_c_r_p_p X C R P Q -> X = S 0.

Axiom pack_c_r_p_p_0_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, X = pack_c_r_p_p X C R P Q 0.

Axiom pack_c_r_p_p_1_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_c_r_p_p X C R P Q -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_r_p_p_1_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_r_p_p X C R P Q 1) U.

Axiom pack_c_r_p_p_2_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_c_r_p_p X C R P Q -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_c_r_p_p_2_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, R x y = decode_r (pack_c_r_p_p X C R P Q 2) x y.

Axiom pack_c_r_p_p_3_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_c_r_p_p X C R P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_r_p_p_3_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_c_r_p_p X C R P Q 3) x.

Axiom pack_c_r_p_p_4_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_c_r_p_p X C R P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_c_r_p_p_4_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_c_r_p_p X C R P Q 4) x.

Axiom pack_c_r_p_p_inj : forall X X', forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop, pack_c_r_p_p X C R P Q = pack_c_r_p_p X' C' R' P' Q' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_c_r_p_p_ext : forall X, forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_c_r_p_p X C R P Q = pack_c_r_p_p X C' R' P' Q'.

(* Parameter struct_c_r_p_p "ae2d9d50642b996b0503fd539520a49bd62670a5c58b878847916ab5d64ff858" "19c01351df87a86dbef2a06e599620d7dbe907e1a1a43666166575ed7ec78a21" *)
Parameter struct_c_r_p_p :set -> prop.

Axiom pack_struct_c_r_p_p_I: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, struct_c_r_p_p (pack_c_r_p_p X C R P Q).

Axiom struct_c_r_p_p_eta: forall S, struct_c_r_p_p S -> S = pack_c_r_p_p (S 0) (decode_c (S 1)) (decode_r (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_c_r_p_p_i "504562a05abbf2597676b5a5716df29885dbb2925f69e754ed5a7d3bbc633ed9" "43d94634c1fe95b7e52ac30c5412318f6b4a1827b5adaec39a6dd1057a4b1aa5" *)
Parameter unpack_c_r_p_p_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_c_r_p_p_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X C' R' P' Q' = Phi X C R P Q)
  ->
  unpack_c_r_p_p_i (pack_c_r_p_p X C R P Q) Phi = Phi X C R P Q.


(* Parameter unpack_c_r_p_p_o "df1f5905c881284e337d492c07acbe1604eaa26e9474c52dd6cffe84d678bfba" "44b8f2af40bd3975e57e4f8dde9485d9d4c6c97a7d884b96ef61a52ec0832154" *)
Parameter unpack_c_r_p_p_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_c_r_p_p_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X C' R' P' Q' = Phi X C R P Q)
  ->
  unpack_c_r_p_p_o (pack_c_r_p_p X C R P Q) Phi = Phi X C R P Q.


(* Parameter pack_c_r_p_e "85d1ad855ae64bf1161d755c4f5c9c139f0bd45d02edeb6b3060bbf8af95fb89" "a484be977d1d4b2002b4061b842438b54a2c4da65cc015038083161283e2bd3f" *)
Parameter pack_c_r_p_e :set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> set.

Axiom pack_c_r_p_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_c_r_p_e X C R P c -> X = S 0.

Axiom pack_c_r_p_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, X = pack_c_r_p_e X C R P c 0.

Axiom pack_c_r_p_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_c_r_p_e X C R P c -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_r_p_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_r_p_e X C R P c 1) U.

Axiom pack_c_r_p_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_c_r_p_e X C R P c -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_c_r_p_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_c_r_p_e X C R P c 2) x y.

Axiom pack_c_r_p_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_c_r_p_e X C R P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_c_r_p_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_c_r_p_e X C R P c 3) x.

Axiom pack_c_r_p_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_c_r_p_e X C R P c -> c = S 4.

Axiom pack_c_r_p_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c = pack_c_r_p_e X C R P c 4.

Axiom pack_c_r_p_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall P P':set -> prop, forall c c':set, pack_c_r_p_e X C R P c = pack_c_r_p_e X' C' R' P' c' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_c_r_p_e_ext : forall X, forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall P P':set -> prop, forall c,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_r_p_e X C R P c = pack_c_r_p_e X C' R' P' c.

(* Parameter struct_c_r_p_e "c70bb56759cdec1ec590d99361b77498331cdce9b840801676e9b9d4b3cb31e9" "b75ffa1b350a850f8416223e733674302de28dcf0ea44a9897e3b7adf8502588" *)
Parameter struct_c_r_p_e :set -> prop.

Axiom pack_struct_c_r_p_e_I: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c :e X -> struct_c_r_p_e (pack_c_r_p_e X C R P c).

Axiom pack_struct_c_r_p_e_E4: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, struct_c_r_p_e (pack_c_r_p_e X C R P c) -> c :e X.

Axiom struct_c_r_p_e_eta: forall S, struct_c_r_p_e S -> S = pack_c_r_p_e (S 0) (decode_c (S 1)) (decode_r (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_c_r_p_e_i "4eaa6a506da9911082425cfb7ce613e6f9f649cc7661afe9288022b3e05f4a63" "62c0bfd9752ac8a1708e17cbeb253670fecae4f700655f0cb9d862aa012c428e" *)
Parameter unpack_c_r_p_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_c_r_p_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' R' P' c = Phi X C R P c)
  ->
  unpack_c_r_p_e_i (pack_c_r_p_e X C R P c) Phi = Phi X C R P c.


(* Parameter unpack_c_r_p_e_o "744d55579e59a719b417fc713549922267263989ad695a67395cc123f0f1abd4" "20f9b9ef841d4924750c90758ce509f1463b85cac6166a0b053cbafacc26fb93" *)
Parameter unpack_c_r_p_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_c_r_p_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' R' P' c = Phi X C R P c)
  ->
  unpack_c_r_p_e_o (pack_c_r_p_e X C R P c) Phi = Phi X C R P c.


(* Parameter pack_c_r_e_e "05531cc043a36aa80799c8d9bb7f1476d2be4bd2220e32d42edaf39d2ec18ba2" "3cdaa41ecdf8a3b74ad0d2cc418a8bb29253e91a586e083803672f3aa6637989" *)
Parameter pack_c_r_e_e :set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set -> set.

Axiom pack_c_r_e_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_c_r_e_e X C R c d -> X = S 0.

Axiom pack_c_r_e_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, X = pack_c_r_e_e X C R c d 0.

Axiom pack_c_r_e_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_c_r_e_e X C R c d -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_r_e_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_r_e_e X C R c d 1) U.

Axiom pack_c_r_e_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_c_r_e_e X C R c d -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_c_r_e_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, R x y = decode_r (pack_c_r_e_e X C R c d 2) x y.

Axiom pack_c_r_e_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_c_r_e_e X C R c d -> c = S 3.

Axiom pack_c_r_e_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, c = pack_c_r_e_e X C R c d 3.

Axiom pack_c_r_e_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_c_r_e_e X C R c d -> d = S 4.

Axiom pack_c_r_e_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, d = pack_c_r_e_e X C R c d 4.

Axiom pack_c_r_e_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall c c':set, forall d d':set, pack_c_r_e_e X C R c d = pack_c_r_e_e X' C' R' c' d' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x y :e X, R x y = R' x y) /\ c = c' /\ d = d'.

Axiom pack_c_r_e_e_ext : forall X, forall C C':(set -> prop) -> prop, forall R R':set -> set -> prop, forall c, forall d,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_c_r_e_e X C R c d = pack_c_r_e_e X C' R' c d.

(* Parameter struct_c_r_e_e "98dd51e79bd2edcbc3ad7a14286fea01cabaa5519b2c87dca3fd99cecb8cffaf" "b7625cf2696e5523826bd42e2658761eefffdbad656dfc5a347f1aae33d5c255" *)
Parameter struct_c_r_e_e :set -> prop.

Axiom pack_struct_c_r_e_e_I: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_c_r_e_e (pack_c_r_e_e X C R c d).

Axiom pack_struct_c_r_e_e_E3: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, struct_c_r_e_e (pack_c_r_e_e X C R c d) -> c :e X.

Axiom pack_struct_c_r_e_e_E4: forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set, struct_c_r_e_e (pack_c_r_e_e X C R c d) -> d :e X.

Axiom struct_c_r_e_e_eta: forall S, struct_c_r_e_e S -> S = pack_c_r_e_e (S 0) (decode_c (S 1)) (decode_r (S 2)) (S 3) (S 4).


(* Parameter unpack_c_r_e_e_i "1f3a6c4b2dc30fe94903044b5dab114c2212f7de5a3b7c90277a7cb98fdaec89" "65f57bbd484c16ce466e411cd72ee595999f4be2517b1a2a067ee91b2ce6779e" *)
Parameter unpack_c_r_e_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set -> set) -> set.

Axiom unpack_c_r_e_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' R' c d = Phi X C R c d)
  ->
  unpack_c_r_e_e_i (pack_c_r_e_e X C R c d) Phi = Phi X C R c d.


(* Parameter unpack_c_r_e_e_o "af6b4813224192c435ac5734ee3e6f81dfed72d60e7ca660901678e791da81dc" "b38f3d15360302d6713148b5da62379c59345aac4c5646f872d1ef753401d884" *)
Parameter unpack_c_r_e_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_c_r_e_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> set -> prop) -> set -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X C' R' c d = Phi X C R c d)
  ->
  unpack_c_r_e_e_o (pack_c_r_e_e X C R c d) Phi = Phi X C R c d.


(* Parameter pack_c_p_e_e "554c029aade5d219d4a514a490826490bc2ab97109140c8ab570a4044114f284" "0d54727d59df7a1affa3e42b12f7d1096fdb034cd1025d7e39f2699f169ff6f8" *)
Parameter pack_c_p_e_e :set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set -> set.

Axiom pack_c_p_e_e_0_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_c_p_e_e X C P c d -> X = S 0.

Axiom pack_c_p_e_e_0_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, X = pack_c_p_e_e X C P c d 0.

Axiom pack_c_p_e_e_1_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_c_p_e_e X C P c d -> forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (S 1) U.

Axiom pack_c_p_e_e_1_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, forall U:set -> prop, (forall x, U x -> x :e X) -> C U = decode_c (pack_c_p_e_e X C P c d 1) U.

Axiom pack_c_p_e_e_2_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_c_p_e_e X C P c d -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_c_p_e_e_2_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, forall x :e X, P x = decode_p (pack_c_p_e_e X C P c d 2) x.

Axiom pack_c_p_e_e_3_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_c_p_e_e X C P c d -> c = S 3.

Axiom pack_c_p_e_e_3_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, c = pack_c_p_e_e X C P c d 3.

Axiom pack_c_p_e_e_4_eq: forall S X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_c_p_e_e X C P c d -> d = S 4.

Axiom pack_c_p_e_e_4_eq2: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, d = pack_c_p_e_e X C P c d 4.

Axiom pack_c_p_e_e_inj : forall X X', forall C C':(set -> prop) -> prop, forall P P':set -> prop, forall c c':set, forall d d':set, pack_c_p_e_e X C P c d = pack_c_p_e_e X' C' P' c' d' -> X = X' /\ (forall U:set -> prop, (forall x, U x -> x :e X) -> C U = C' U) /\ (forall x :e X, P x = P' x) /\ c = c' /\ d = d'.

Axiom pack_c_p_e_e_ext : forall X, forall C C':(set -> prop) -> prop, forall P P':set -> prop, forall c, forall d,
 (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->
 (forall x :e X, P x <-> P' x) ->
 pack_c_p_e_e X C P c d = pack_c_p_e_e X C' P' c d.

(* Parameter struct_c_p_e_e "70ac687e1861704c6a1fa22ebbbb054d154870fb64dbe6ba3855c1e41a99f696" "c1b8c5cd667cfdd2a9b00d5431f805e252e5c7fd02444f7c2033c6bfb44747ab" *)
Parameter struct_c_p_e_e :set -> prop.

Axiom pack_struct_c_p_e_e_I: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_c_p_e_e (pack_c_p_e_e X C P c d).

Axiom pack_struct_c_p_e_e_E3: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, struct_c_p_e_e (pack_c_p_e_e X C P c d) -> c :e X.

Axiom pack_struct_c_p_e_e_E4: forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set, struct_c_p_e_e (pack_c_p_e_e X C P c d) -> d :e X.

Axiom struct_c_p_e_e_eta: forall S, struct_c_p_e_e S -> S = pack_c_p_e_e (S 0) (decode_c (S 1)) (decode_p (S 2)) (S 3) (S 4).


(* Parameter unpack_c_p_e_e_i "26eb69ff08939958fef9c15afa67d35ce4a024fc0652010d248aaaabab6321e2" "bc8fcfe48817c4530459456df182e3bd5625a930d26a02a9dcfc8d3b8182e6f8" *)
Parameter unpack_c_p_e_e_i :set -> (set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set -> set) -> set.

Axiom unpack_c_p_e_e_i_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set -> set,
  forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' P' c d = Phi X C P c d)
  ->
  unpack_c_p_e_e_i (pack_c_p_e_e X C P c d) Phi = Phi X C P c d.


(* Parameter unpack_c_p_e_e_o "0dc5eeb06114ec33efc7df9439665ba6f844b33cef5adb1af2e6a880ffc9cbc4" "51e0fb48e2a2fc7f1ba54affcd1701d1b7f76222f8cd527be5f563b02b43ccbf" *)
Parameter unpack_c_p_e_e_o :set -> (set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_c_p_e_e_o_eq : forall Phi:set -> ((set -> prop) -> prop) -> (set -> prop) -> set -> set -> prop,
  forall X, forall C:(set -> prop) -> prop, forall P:set -> prop, forall c:set, forall d:set,
  ( forall C':(set -> prop) -> prop, (forall U:set -> prop, (forall x, U x -> x :e X) -> (C U <-> C' U)) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X C' P' c d = Phi X C P c d)
  ->
  unpack_c_p_e_e_o (pack_c_p_e_e X C P c d) Phi = Phi X C P c d.


(* Parameter pack_b_b_b_u "d84852b5aa0f6264a26cae25262efe12e8d355591f4c9fc08ad8cc121a1a6272" "2c6a8f92ee40e839c915ead5b3106c3f535fefd4f163607c92b506013f69e93b" *)
Parameter pack_b_b_b_u :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set.

Axiom pack_b_b_b_u_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, S = pack_b_b_b_u X f g h i -> X = S 0.

Axiom pack_b_b_b_u_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, X = pack_b_b_b_u X f g h i 0.

Axiom pack_b_b_b_u_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, S = pack_b_b_b_u X f g h i -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_b_u_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, forall x y :e X, f x y = decode_b (pack_b_b_b_u X f g h i 1) x y.

Axiom pack_b_b_b_u_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, S = pack_b_b_b_u X f g h i -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_b_u_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, forall x y :e X, g x y = decode_b (pack_b_b_b_u X f g h i 2) x y.

Axiom pack_b_b_b_u_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, S = pack_b_b_b_u X f g h i -> forall x y :e X, h x y = decode_b (S 3) x y.

Axiom pack_b_b_b_u_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, forall x y :e X, h x y = decode_b (pack_b_b_b_u X f g h i 3) x y.

Axiom pack_b_b_b_u_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, S = pack_b_b_b_u X f g h i -> forall x :e X, i x = decode_u (S 4) x.

Axiom pack_b_b_b_u_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, forall x :e X, i x = decode_u (pack_b_b_b_u X f g h i 4) x.

Axiom pack_b_b_b_u_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall i i':set -> set, pack_b_b_b_u X f g h i = pack_b_b_b_u X' f' g' h' i' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, h x y = h' x y) /\ (forall x :e X, i x = i' x).

Axiom pack_b_b_b_u_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall i i':set -> set,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, h x y = h' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_b_b_b_u X f g h i = pack_b_b_b_u X f' g' h' i'.

(* Parameter struct_b_b_b_u "163c3fe98bb9b2ff8f06e5dfabc321124619cf7611eb786523d1022bd4e8f66b" "e3a0ef959396c34457affae8f71e1c51ff76d58c3a3fb98abdf2bf81e4c9024a" *)
Parameter struct_b_b_b_u :set -> prop.

Axiom pack_struct_b_b_b_u_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall h:set -> set -> set, (forall x y :e X, h x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> struct_b_b_b_u (pack_b_b_b_u X f g h i).

Axiom pack_struct_b_b_b_u_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, struct_b_b_b_u (pack_b_b_b_u X f g h i) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_b_u_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, struct_b_b_b_u (pack_b_b_b_u X f g h i) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_b_u_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, struct_b_b_b_u (pack_b_b_b_u X f g h i) -> forall x y :e X, h x y :e X.

Axiom pack_struct_b_b_b_u_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set, struct_b_b_b_u (pack_b_b_b_u X f g h i) -> forall x :e X, i x :e X.

Axiom struct_b_b_b_u_eta: forall S, struct_b_b_b_u S -> S = pack_b_b_b_u (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_b (S 3)) (decode_u (S 4)).


(* Parameter unpack_b_b_b_u_i "95fdf87be53af4aa1559a8eccd70106bef948805f8d336bd785a9ee75c059107" "60beef2324d0b79c9013434db0661f7a2fd1615692f13985b54b1fe946d341dc" *)
Parameter unpack_b_b_b_u_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set) -> set.

Axiom unpack_b_b_b_u_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' g' h' i' = Phi X f g h i)
  ->
  unpack_b_b_b_u_i (pack_b_b_b_u X f g h i) Phi = Phi X f g h i.


(* Parameter unpack_b_b_b_u_o "6898fe67bf7b15f95fa5354c36146529449e4976a2c4e9dfc0c5c35c80166a14" "7dc2252a880cea3e856ba6ae466eda1789d214bd81446e4be177161ae2810381" *)
Parameter unpack_b_b_b_u_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> prop) -> prop.

Axiom unpack_b_b_b_u_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall i:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' g' h' i' = Phi X f g h i)
  ->
  unpack_b_b_b_u_o (pack_b_b_b_u X f g h i) Phi = Phi X f g h i.


(* Parameter pack_b_b_b_r "bd44e2826836ae6d3c14a410893f68f225cda73203a8114949cace5e1a72d7a9" "04bdbf34b5359bf4af26e39b80e5c4a92b11a4ddabf589f4ceac944e3768d93f" *)
Parameter pack_b_b_b_r :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set.

Axiom pack_b_b_b_r_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_b_r X f g h R -> X = S 0.

Axiom pack_b_b_b_r_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, X = pack_b_b_b_r X f g h R 0.

Axiom pack_b_b_b_r_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_b_r X f g h R -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_b_r_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_b_r X f g h R 1) x y.

Axiom pack_b_b_b_r_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_b_r X f g h R -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_b_r_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_b_r X f g h R 2) x y.

Axiom pack_b_b_b_r_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_b_r X f g h R -> forall x y :e X, h x y = decode_b (S 3) x y.

Axiom pack_b_b_b_r_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, h x y = decode_b (pack_b_b_b_r X f g h R 3) x y.

Axiom pack_b_b_b_r_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, S = pack_b_b_b_r X f g h R -> forall x y :e X, R x y = decode_r (S 4) x y.

Axiom pack_b_b_b_r_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_b_b_b_r X f g h R 4) x y.

Axiom pack_b_b_b_r_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall R R':set -> set -> prop, pack_b_b_b_r X f g h R = pack_b_b_b_r X' f' g' h' R' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, h x y = h' x y) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_b_b_b_r_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall R R':set -> set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, h x y = h' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_b_b_r X f g h R = pack_b_b_b_r X f' g' h' R'.

(* Parameter struct_b_b_b_r "4dd31b5c4e92a67021b9e43deb98c3fefe9a4f74123e901531456d67138e5b7f" "51931da307bf20b618a1aa8efb36b7ce482ede5747241a20988443f5ab2b53fd" *)
Parameter struct_b_b_b_r :set -> prop.

Axiom pack_struct_b_b_b_r_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall h:set -> set -> set, (forall x y :e X, h x y :e X) -> forall R:set -> set -> prop, struct_b_b_b_r (pack_b_b_b_r X f g h R).

Axiom pack_struct_b_b_b_r_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, struct_b_b_b_r (pack_b_b_b_r X f g h R) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_b_r_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, struct_b_b_b_r (pack_b_b_b_r X f g h R) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_b_r_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop, struct_b_b_b_r (pack_b_b_b_r X f g h R) -> forall x y :e X, h x y :e X.

Axiom struct_b_b_b_r_eta: forall S, struct_b_b_b_r S -> S = pack_b_b_b_r (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_b (S 3)) (decode_r (S 4)).


(* Parameter unpack_b_b_b_r_i "36964001a441bf642abe47f725ac6e5b0e5491f6df61c43b4864ef76b5ba29f9" "4716fac080b8285d5304ce483443b16d4620bef7fb22b8f1e08383e328c8e1c1" *)
Parameter unpack_b_b_b_r_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_b_b_b_r_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' h' R' = Phi X f g h R)
  ->
  unpack_b_b_b_r_i (pack_b_b_b_r X f g h R) Phi = Phi X f g h R.


(* Parameter unpack_b_b_b_r_o "f482c5c6b9c0b0ee97127f99cec32321453063ee144392870dac6d606b7c44fb" "96afb147a5004d9da2e740486e02f420ea45e2256a5b13f223f15dc0220e3b13" *)
Parameter unpack_b_b_b_r_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_b_b_b_r_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' h' R' = Phi X f g h R)
  ->
  unpack_b_b_b_r_o (pack_b_b_b_r X f g h R) Phi = Phi X f g h R.


(* Parameter pack_b_b_b_p "c58f0a939a9c87e173351bf87c60e8f0727571c37720ec2a79be80a43ae6a517" "8bda125a6bdce54d746df6f330f07355625850f58413a32108f795059bb6b6ee" *)
Parameter pack_b_b_b_p :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set.

Axiom pack_b_b_b_p_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, S = pack_b_b_b_p X f g h P -> X = S 0.

Axiom pack_b_b_b_p_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, X = pack_b_b_b_p X f g h P 0.

Axiom pack_b_b_b_p_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, S = pack_b_b_b_p X f g h P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_b_p_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_b_p X f g h P 1) x y.

Axiom pack_b_b_b_p_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, S = pack_b_b_b_p X f g h P -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_b_p_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_b_p X f g h P 2) x y.

Axiom pack_b_b_b_p_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, S = pack_b_b_b_p X f g h P -> forall x y :e X, h x y = decode_b (S 3) x y.

Axiom pack_b_b_b_p_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, forall x y :e X, h x y = decode_b (pack_b_b_b_p X f g h P 3) x y.

Axiom pack_b_b_b_p_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, S = pack_b_b_b_p X f g h P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_b_b_b_p_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_b_b_p X f g h P 4) x.

Axiom pack_b_b_b_p_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall P P':set -> prop, pack_b_b_b_p X f g h P = pack_b_b_b_p X' f' g' h' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, h x y = h' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_b_b_b_p_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, h x y = h' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_b_b_p X f g h P = pack_b_b_b_p X f' g' h' P'.

(* Parameter struct_b_b_b_p "90e28dc98e7ddb59e750b598c7a1fcc3968d4e4ae47e692760b1a2dc84e386f6" "5473767e0c0c27ccaea348fbc10b4504a7f62737b6368428e8074b679c65151c" *)
Parameter struct_b_b_b_p :set -> prop.

Axiom pack_struct_b_b_b_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall h:set -> set -> set, (forall x y :e X, h x y :e X) -> forall P:set -> prop, struct_b_b_b_p (pack_b_b_b_p X f g h P).

Axiom pack_struct_b_b_b_p_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, struct_b_b_b_p (pack_b_b_b_p X f g h P) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_b_p_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, struct_b_b_b_p (pack_b_b_b_p X f g h P) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_b_p_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop, struct_b_b_b_p (pack_b_b_b_p X f g h P) -> forall x y :e X, h x y :e X.

Axiom struct_b_b_b_p_eta: forall S, struct_b_b_b_p S -> S = pack_b_b_b_p (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_b (S 3)) (decode_p (S 4)).


(* Parameter unpack_b_b_b_p_i "99cee582acbe84289c23e36bc074225628ed635f6185d47bd46551e4ac654acc" "0d53cdd7d8f51b270f9789d841510a586f3ce183fdc61767cfbdf33396be8bac" *)
Parameter unpack_b_b_b_p_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_b_b_b_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' h' P' = Phi X f g h P)
  ->
  unpack_b_b_b_p_i (pack_b_b_b_p X f g h P) Phi = Phi X f g h P.


(* Parameter unpack_b_b_b_p_o "2f413235bb09d593b2cc2b333a99ab2f673874bd7f9130ed9e6b69b02d1b3c9d" "1c021566ac4ca152a597530684d6dfa35083873c4eb861f7a36011282ed6e5f4" *)
Parameter unpack_b_b_b_p_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_b_b_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' h' P' = Phi X f g h P)
  ->
  unpack_b_b_b_p_o (pack_b_b_b_p X f g h P) Phi = Phi X f g h P.


(* Parameter pack_b_b_b_e "4f4360732b1e80995f1bec15b2c8606c419cf22f610c020449a1010d5c1d392c" "a61497dd6634a8c876c9d3b17f9062eb839934e47b55bb3d0e26129f537dcd6e" *)
Parameter pack_b_b_b_e :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set -> set.

Axiom pack_b_b_b_e_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, S = pack_b_b_b_e X f g h c -> X = S 0.

Axiom pack_b_b_b_e_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, X = pack_b_b_b_e X f g h c 0.

Axiom pack_b_b_b_e_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, S = pack_b_b_b_e X f g h c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_b_e_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, forall x y :e X, f x y = decode_b (pack_b_b_b_e X f g h c 1) x y.

Axiom pack_b_b_b_e_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, S = pack_b_b_b_e X f g h c -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_b_e_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, forall x y :e X, g x y = decode_b (pack_b_b_b_e X f g h c 2) x y.

Axiom pack_b_b_b_e_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, S = pack_b_b_b_e X f g h c -> forall x y :e X, h x y = decode_b (S 3) x y.

Axiom pack_b_b_b_e_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, forall x y :e X, h x y = decode_b (pack_b_b_b_e X f g h c 3) x y.

Axiom pack_b_b_b_e_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, S = pack_b_b_b_e X f g h c -> c = S 4.

Axiom pack_b_b_b_e_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, c = pack_b_b_b_e X f g h c 4.

Axiom pack_b_b_b_e_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall c c':set, pack_b_b_b_e X f g h c = pack_b_b_b_e X' f' g' h' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, h x y = h' x y) /\ c = c'.

Axiom pack_b_b_b_e_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall h h':set -> set -> set, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, h x y = h' x y) ->
 pack_b_b_b_e X f g h c = pack_b_b_b_e X f' g' h' c.

(* Parameter struct_b_b_b_e "3d222d526695d68917009e55e42b3e3376f01eff89abe36e8a6d56c854818947" "76ad2b43a7ddd0851ab8273a0e8922d37e1cc96d5aacbb9854acde184289537f" *)
Parameter struct_b_b_b_e :set -> prop.

Axiom pack_struct_b_b_b_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall h:set -> set -> set, (forall x y :e X, h x y :e X) -> forall c:set, c :e X -> struct_b_b_b_e (pack_b_b_b_e X f g h c).

Axiom pack_struct_b_b_b_e_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, struct_b_b_b_e (pack_b_b_b_e X f g h c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_b_e_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, struct_b_b_b_e (pack_b_b_b_e X f g h c) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_b_e_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, struct_b_b_b_e (pack_b_b_b_e X f g h c) -> forall x y :e X, h x y :e X.

Axiom pack_struct_b_b_b_e_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set, struct_b_b_b_e (pack_b_b_b_e X f g h c) -> c :e X.

Axiom struct_b_b_b_e_eta: forall S, struct_b_b_b_e S -> S = pack_b_b_b_e (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_b (S 3)) (S 4).


(* Parameter unpack_b_b_b_e_i "27d5099ede63202c1b1b93a39edd5315a96a8907051c8c791e3f92f5933e0393" "0d1faf42e0c2380c7d33c5bd998f58db6062a7dab31874c188b33d52e62ea01c" *)
Parameter unpack_b_b_b_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set -> set) -> set.

Axiom unpack_b_b_b_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) -> Phi X f' g' h' c = Phi X f g h c)
  ->
  unpack_b_b_b_e_i (pack_b_b_b_e X f g h c) Phi = Phi X f g h c.


(* Parameter unpack_b_b_b_e_o "b8a20769d0a7930fac3ab162890bec8ed001daaa850ced1c9533096402c2cadb" "abb4ce8371c8a8009c3138bf926b374a0f9ddb01d3f6a9e77af41dec3fd18a10" *)
Parameter unpack_b_b_b_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set -> prop) -> prop.

Axiom unpack_b_b_b_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> set) -> set -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall h:set -> set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall h':set -> set -> set, (forall x y :e X, h x y = h' x y) -> Phi X f' g' h' c = Phi X f g h c)
  ->
  unpack_b_b_b_e_o (pack_b_b_b_e X f g h c) Phi = Phi X f g h c.


(* Parameter pack_b_b_u_u "3ff318ae33b2ea8251e5cac44f42cdcaebb42568dc2f168109e0c56288b0d718" "728e741e3872a9b5acff6fd8e805455cea91fa767e245eac2d21e7d65e22bcf3" *)
Parameter pack_b_b_u_u :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> set.

Axiom pack_b_b_u_u_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_b_b_u_u X f g i j -> X = S 0.

Axiom pack_b_b_u_u_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, X = pack_b_b_u_u X f g i j 0.

Axiom pack_b_b_u_u_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_b_b_u_u X f g i j -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_u_u_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, forall x y :e X, f x y = decode_b (pack_b_b_u_u X f g i j 1) x y.

Axiom pack_b_b_u_u_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_b_b_u_u X f g i j -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_u_u_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, forall x y :e X, g x y = decode_b (pack_b_b_u_u X f g i j 2) x y.

Axiom pack_b_b_u_u_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_b_b_u_u X f g i j -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_b_b_u_u_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, forall x :e X, i x = decode_u (pack_b_b_u_u X f g i j 3) x.

Axiom pack_b_b_u_u_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, S = pack_b_b_u_u X f g i j -> forall x :e X, j x = decode_u (S 4) x.

Axiom pack_b_b_u_u_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, forall x :e X, j x = decode_u (pack_b_b_u_u X f g i j 4) x.

Axiom pack_b_b_u_u_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall j j':set -> set, pack_b_b_u_u X f g i j = pack_b_b_u_u X' f' g' i' j' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x).

Axiom pack_b_b_u_u_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall j j':set -> set,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 pack_b_b_u_u X f g i j = pack_b_b_u_u X f' g' i' j'.

(* Parameter struct_b_b_u_u "822fd0482c7d142bc157c71c4cdb903956e06eaefe0685c746428d608c2102cd" "922c08b52255e99209b7604bddb310b8dedcdc9a5a912ffba91d7bc1ef425c3c" *)
Parameter struct_b_b_u_u :set -> prop.

Axiom pack_struct_b_b_u_u_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> struct_b_b_u_u (pack_b_b_u_u X f g i j).

Axiom pack_struct_b_b_u_u_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, struct_b_b_u_u (pack_b_b_u_u X f g i j) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_u_u_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, struct_b_b_u_u (pack_b_b_u_u X f g i j) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_u_u_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, struct_b_b_u_u (pack_b_b_u_u X f g i j) -> forall x :e X, i x :e X.

Axiom pack_struct_b_b_u_u_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set, struct_b_b_u_u (pack_b_b_u_u X f g i j) -> forall x :e X, j x :e X.

Axiom struct_b_b_u_u_eta: forall S, struct_b_b_u_u S -> S = pack_b_b_u_u (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_u (S 3)) (decode_u (S 4)).


(* Parameter unpack_b_b_u_u_i "0bb13b3cbaf581b931f0dc633ebcdfac1ecae80168effaa037f0fba418cd9023" "4d911ff1a2816f0ef525c76ba53a0a31f291f3c4daa5b35413ef441f62cd1525" *)
Parameter unpack_b_b_u_u_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> set) -> set.

Axiom unpack_b_b_u_u_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X f' g' i' j' = Phi X f g i j)
  ->
  unpack_b_b_u_u_i (pack_b_b_u_u X f g i j) Phi = Phi X f g i j.


(* Parameter unpack_b_b_u_u_o "73935c1f25309cf2d69766b4a371f10911e93cd3d05eebdfb74278ad14d3c239" "d73c9f24ec11c6b486b5104073a856418396bf3211f1f2780560abfd01566668" *)
Parameter unpack_b_b_u_u_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> prop) -> prop.

Axiom unpack_b_b_u_u_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall j:set -> set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X f' g' i' j' = Phi X f g i j)
  ->
  unpack_b_b_u_u_o (pack_b_b_u_u X f g i j) Phi = Phi X f g i j.


(* Parameter pack_b_b_u_r "5eeca6ffa1a8d75d45a179f2bd115c5a76bb0095f1cc6367ff1448e48027f040" "e6e9d93d507e9429f92b77bac55e20851db618e3a5220ff500f7b13ac8b620db" *)
Parameter pack_b_b_u_r :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set.

Axiom pack_b_b_u_r_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_b_u_r X f g i R -> X = S 0.

Axiom pack_b_b_u_r_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, X = pack_b_b_u_r X f g i R 0.

Axiom pack_b_b_u_r_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_b_u_r X f g i R -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_u_r_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_u_r X f g i R 1) x y.

Axiom pack_b_b_u_r_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_b_u_r X f g i R -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_u_r_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_u_r X f g i R 2) x y.

Axiom pack_b_b_u_r_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_b_u_r X f g i R -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_b_b_u_r_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x :e X, i x = decode_u (pack_b_b_u_r X f g i R 3) x.

Axiom pack_b_b_u_r_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, S = pack_b_b_u_r X f g i R -> forall x y :e X, R x y = decode_r (S 4) x y.

Axiom pack_b_b_u_r_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_b_b_u_r X f g i R 4) x y.

Axiom pack_b_b_u_r_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, pack_b_b_u_r X f g i R = pack_b_b_u_r X' f' g' i' R' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y).

Axiom pack_b_b_u_r_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_b_u_r X f g i R = pack_b_b_u_r X f' g' i' R'.

(* Parameter struct_b_b_u_r "b57e669b209cd96d0ef04fd9242923c0a1b44ffda69f288956baa1b3d0641e4d" "7fc7616128fb2078dc12d009e92c2060985b08ddf5f039c9ad0c1afdeefaa21a" *)
Parameter struct_b_b_u_r :set -> prop.

Axiom pack_struct_b_b_u_r_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, struct_b_b_u_r (pack_b_b_u_r X f g i R).

Axiom pack_struct_b_b_u_r_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, struct_b_b_u_r (pack_b_b_u_r X f g i R) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_u_r_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, struct_b_b_u_r (pack_b_b_u_r X f g i R) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_u_r_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, struct_b_b_u_r (pack_b_b_u_r X f g i R) -> forall x :e X, i x :e X.

Axiom struct_b_b_u_r_eta: forall S, struct_b_b_u_r S -> S = pack_b_b_u_r (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_u (S 3)) (decode_r (S 4)).


(* Parameter unpack_b_b_u_r_i "cf09ae831de8eb818f82edab698dffa2875e29130d1499dbaa5f51c42e627ec8" "74d6c9610ab5c8d21c84bc3bad6d7a3fae0964d8ab6c51cfbbca4d23c98ac1da" *)
Parameter unpack_b_b_u_r_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_b_b_u_r_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' i' R' = Phi X f g i R)
  ->
  unpack_b_b_u_r_i (pack_b_b_u_r X f g i R) Phi = Phi X f g i R.


(* Parameter unpack_b_b_u_r_o "c4545f8bc48e29fce53b4cfc53c239e53f78be8b67e6c70cfdd49ad5d3349715" "13160228c941ad1889412b23ec4202d6d25dff69a10b0a3ca9e976bfe1567ecc" *)
Parameter unpack_b_b_u_r_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_b_b_u_r_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' i' R' = Phi X f g i R)
  ->
  unpack_b_b_u_r_o (pack_b_b_u_r X f g i R) Phi = Phi X f g i R.


(* Parameter pack_b_b_u_p "2a6852c04bba3e1b810e8d2fdd56873b8a06fa1eafd495b94991d894dcac9908" "94dfebb9589d11ca98704405111a96dfbdac8b7c6e5fddde8cdb14529bfba288" *)
Parameter pack_b_b_u_p :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set.

Axiom pack_b_b_u_p_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_b_u_p X f g i P -> X = S 0.

Axiom pack_b_b_u_p_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, X = pack_b_b_u_p X f g i P 0.

Axiom pack_b_b_u_p_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_b_u_p X f g i P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_u_p_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_u_p X f g i P 1) x y.

Axiom pack_b_b_u_p_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_b_u_p X f g i P -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_u_p_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_u_p X f g i P 2) x y.

Axiom pack_b_b_u_p_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_b_u_p X f g i P -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_b_b_u_p_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x :e X, i x = decode_u (pack_b_b_u_p X f g i P 3) x.

Axiom pack_b_b_u_p_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, S = pack_b_b_u_p X f g i P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_b_b_u_p_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_b_u_p X f g i P 4) x.

Axiom pack_b_b_u_p_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall P P':set -> prop, pack_b_b_u_p X f g i P = pack_b_b_u_p X' f' g' i' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x).

Axiom pack_b_b_u_p_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_b_u_p X f g i P = pack_b_b_u_p X f' g' i' P'.

(* Parameter struct_b_b_u_p "9f6182a9e7b378137d16faddb447c36f68b16c0832febf5ebc231139cf4eb273" "9d129e1d51ce2f5e54ee31cb6d6812228907cc0d0265c1a798c1568a995b1c5d" *)
Parameter struct_b_b_u_p :set -> prop.

Axiom pack_struct_b_b_u_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, struct_b_b_u_p (pack_b_b_u_p X f g i P).

Axiom pack_struct_b_b_u_p_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, struct_b_b_u_p (pack_b_b_u_p X f g i P) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_u_p_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, struct_b_b_u_p (pack_b_b_u_p X f g i P) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_u_p_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop, struct_b_b_u_p (pack_b_b_u_p X f g i P) -> forall x :e X, i x :e X.

Axiom struct_b_b_u_p_eta: forall S, struct_b_b_u_p S -> S = pack_b_b_u_p (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_u (S 3)) (decode_p (S 4)).


(* Parameter unpack_b_b_u_p_i "770e4629665190ab7ca8fad409a5d78e65aa5edfa29fa86039353769347798c0" "85521744abed1f1c78af51e55d0f05b431c5b87b1bfc2e8ab10ac8cdfe14c37c" *)
Parameter unpack_b_b_u_p_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set) -> set.

Axiom unpack_b_b_u_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' i' P' = Phi X f g i P)
  ->
  unpack_b_b_u_p_i (pack_b_b_u_p X f g i P) Phi = Phi X f g i P.


(* Parameter unpack_b_b_u_p_o "aeeb1873a62507f980a7bc75cb633f73729de26237c81dbc3234a590f3d9ef33" "c79bac5932b7c9e2c5652c60677581091fb530ff57cbccdf38acf73b26f03bd0" *)
Parameter unpack_b_b_u_p_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_b_u_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' i' P' = Phi X f g i P)
  ->
  unpack_b_b_u_p_o (pack_b_b_u_p X f g i P) Phi = Phi X f g i P.


(* Parameter pack_b_b_u_e "4c33759a763e903bf82288017254cb4254d8a2481ed59a553bee72ad79e7ec1b" "fdce8b2ed4a6ece6567c581c5640dc3e61f83b918ec427cdf7201ab909be4ae3" *)
Parameter pack_b_b_u_e :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set -> set.

Axiom pack_b_b_u_e_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_b_u_e X f g i c -> X = S 0.

Axiom pack_b_b_u_e_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, X = pack_b_b_u_e X f g i c 0.

Axiom pack_b_b_u_e_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_b_u_e X f g i c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_u_e_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, forall x y :e X, f x y = decode_b (pack_b_b_u_e X f g i c 1) x y.

Axiom pack_b_b_u_e_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_b_u_e X f g i c -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_u_e_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, forall x y :e X, g x y = decode_b (pack_b_b_u_e X f g i c 2) x y.

Axiom pack_b_b_u_e_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_b_u_e X f g i c -> forall x :e X, i x = decode_u (S 3) x.

Axiom pack_b_b_u_e_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, forall x :e X, i x = decode_u (pack_b_b_u_e X f g i c 3) x.

Axiom pack_b_b_u_e_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, S = pack_b_b_u_e X f g i c -> c = S 4.

Axiom pack_b_b_u_e_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, c = pack_b_b_u_e X f g i c 4.

Axiom pack_b_b_u_e_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall c c':set, pack_b_b_u_e X f g i c = pack_b_b_u_e X' f' g' i' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, i x = i' x) /\ c = c'.

Axiom pack_b_b_u_e_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall i i':set -> set, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_b_b_u_e X f g i c = pack_b_b_u_e X f' g' i' c.

(* Parameter struct_b_b_u_e "eb06ec3cb313acb45973122fd831d60631005ca29456b63d4a9bc1db8adcd84d" "da834566cdd017427b9763d3ead8d4fbb32c53ecde3cf097890523fba708f03d" *)
Parameter struct_b_b_u_e :set -> prop.

Axiom pack_struct_b_b_u_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall c:set, c :e X -> struct_b_b_u_e (pack_b_b_u_e X f g i c).

Axiom pack_struct_b_b_u_e_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, struct_b_b_u_e (pack_b_b_u_e X f g i c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_u_e_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, struct_b_b_u_e (pack_b_b_u_e X f g i c) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_u_e_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, struct_b_b_u_e (pack_b_b_u_e X f g i c) -> forall x :e X, i x :e X.

Axiom pack_struct_b_b_u_e_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set, struct_b_b_u_e (pack_b_b_u_e X f g i c) -> c :e X.

Axiom struct_b_b_u_e_eta: forall S, struct_b_b_u_e S -> S = pack_b_b_u_e (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_u (S 3)) (S 4).


(* Parameter unpack_b_b_u_e_i "4bbccae605858ed4ea744f4b17bc80b2fdebc6ad2eca5c0319d99b8351d60a34" "8fae261f98c1ca7efbfc38ff8a5c7a61d1700c5524dae16f099c761aa930f0b7" *)
Parameter unpack_b_b_u_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set -> set) -> set.

Axiom unpack_b_b_u_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' g' i' c = Phi X f g i c)
  ->
  unpack_b_b_u_e_i (pack_b_b_u_e X f g i c) Phi = Phi X f g i c.


(* Parameter unpack_b_b_u_e_o "c50daf557b8f6b3058275c32bc53d752bd338c4bfe9c30e1ecf25e9d3f5ad9ad" "0f6194589053defc9a7bb5b5597ab281f9a2b308c270cb53914c2d54f090bf0d" *)
Parameter unpack_b_b_u_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set -> prop) -> prop.

Axiom unpack_b_b_u_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set) -> set -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall i:set -> set, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' g' i' c = Phi X f g i c)
  ->
  unpack_b_b_u_e_o (pack_b_b_u_e X f g i c) Phi = Phi X f g i c.


(* Parameter pack_b_b_r_r "3f777dd065eeab3fba259d072aaa150e2c5b2af293a1dba253d2d5eaccb08750" "f0225a95dda33552a9ff64ea9225468dc9b297ac315bfd91d90839fe0eaed0fe" *)
Parameter pack_b_b_r_r :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set.

Axiom pack_b_b_r_r_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_b_r_r X f g R T -> X = S 0.

Axiom pack_b_b_r_r_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, X = pack_b_b_r_r X f g R T 0.

Axiom pack_b_b_r_r_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_b_r_r X f g R T -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_r_r_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_r_r X f g R T 1) x y.

Axiom pack_b_b_r_r_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_b_r_r X f g R T -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_r_r_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_r_r X f g R T 2) x y.

Axiom pack_b_b_r_r_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_b_r_r X f g R T -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_b_r_r_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_b_b_r_r X f g R T 3) x y.

Axiom pack_b_b_r_r_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_b_r_r X f g R T -> forall x y :e X, T x y = decode_r (S 4) x y.

Axiom pack_b_b_r_r_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, T x y = decode_r (pack_b_b_r_r X f g R T 4) x y.

Axiom pack_b_b_r_r_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop, pack_b_b_r_r X f g R T = pack_b_b_r_r X' f' g' R' T' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y).

Axiom pack_b_b_r_r_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_b_b_r_r X f g R T = pack_b_b_r_r X f' g' R' T'.

(* Parameter struct_b_b_r_r "6916555459e8d833282592d7fadf17b37b8b6d2d9123e1f8d40c2ef770f4c32f" "f6af43db50fc4694c5cce6241c374aeb673754e28c11aa67daa0824c7f06d9ac" *)
Parameter struct_b_b_r_r :set -> prop.

Axiom pack_struct_b_b_r_r_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall R:set -> set -> prop, forall T:set -> set -> prop, struct_b_b_r_r (pack_b_b_r_r X f g R T).

Axiom pack_struct_b_b_r_r_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_b_b_r_r (pack_b_b_r_r X f g R T) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_r_r_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_b_b_r_r (pack_b_b_r_r X f g R T) -> forall x y :e X, g x y :e X.

Axiom struct_b_b_r_r_eta: forall S, struct_b_b_r_r S -> S = pack_b_b_r_r (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_r (S 3)) (decode_r (S 4)).


(* Parameter unpack_b_b_r_r_i "bdf1af8c2d3519c0764029a439b2429cbc871b822eaaf424a6179e4655f367ab" "b00f9953d17d843b663100c712425a4e03c8b501f4ac179a2e8e62c3c57e3260" *)
Parameter unpack_b_b_r_r_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_b_b_r_r_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X f' g' R' T' = Phi X f g R T)
  ->
  unpack_b_b_r_r_i (pack_b_b_r_r X f g R T) Phi = Phi X f g R T.


(* Parameter unpack_b_b_r_r_o "80146751fa8e46d30ee4320cbefe593daa2c3e51a0a81df5abaf7a079dbb12ed" "b4f7d50c164fa9ff55139aa17f0356a4d7aeeb5706bc52d56513fd563e66bddf" *)
Parameter unpack_b_b_r_r_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_b_b_r_r_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X f' g' R' T' = Phi X f g R T)
  ->
  unpack_b_b_r_r_o (pack_b_b_r_r X f g R T) Phi = Phi X f g R T.


(* Parameter pack_b_b_r_p "23345f53eed20ac0f2e794c2e5d0e2fac51e8c6340eb633ad64bab0a1089e98b" "a232e7119210e9313a357fb94abd78611a70320a603fd89ba367e267c2530948" *)
Parameter pack_b_b_r_p :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_b_b_r_p_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_b_r_p X f g R P -> X = S 0.

Axiom pack_b_b_r_p_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, X = pack_b_b_r_p X f g R P 0.

Axiom pack_b_b_r_p_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_b_r_p X f g R P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_r_p_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_r_p X f g R P 1) x y.

Axiom pack_b_b_r_p_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_b_r_p X f g R P -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_r_p_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_r_p X f g R P 2) x y.

Axiom pack_b_b_r_p_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_b_r_p X f g R P -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_b_r_p_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_b_b_r_p X f g R P 3) x y.

Axiom pack_b_b_r_p_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_b_r_p X f g R P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_b_b_r_p_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_b_r_p X f g R P 4) x.

Axiom pack_b_b_r_p_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, pack_b_b_r_p X f g R P = pack_b_b_r_p X' f' g' R' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_b_b_r_p_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_b_r_p X f g R P = pack_b_b_r_p X f' g' R' P'.

(* Parameter struct_b_b_r_p "5635b41ed14760c834c090cf0c1e2fa654de2dc143825c3b635fdccf379e5b32" "0e96766c20d57f4082ccb3e6b37fb7b5f31f609f2c591308b0729e108bab32f9" *)
Parameter struct_b_b_r_p :set -> prop.

Axiom pack_struct_b_b_r_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall R:set -> set -> prop, forall P:set -> prop, struct_b_b_r_p (pack_b_b_r_p X f g R P).

Axiom pack_struct_b_b_r_p_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_b_b_r_p (pack_b_b_r_p X f g R P) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_r_p_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_b_b_r_p (pack_b_b_r_p X f g R P) -> forall x y :e X, g x y :e X.

Axiom struct_b_b_r_p_eta: forall S, struct_b_b_r_p S -> S = pack_b_b_r_p (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_r (S 3)) (decode_p (S 4)).


(* Parameter unpack_b_b_r_p_i "c110e31879740ddde547b45609a05cb06f70032bec09dbb21e36735852cc8041" "d83214103f4b7f8a2567e4f40b1b6adcd7c56f7ea3360bd88d0ea12ab637a72b" *)
Parameter unpack_b_b_r_p_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_b_b_r_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' R' P' = Phi X f g R P)
  ->
  unpack_b_b_r_p_i (pack_b_b_r_p X f g R P) Phi = Phi X f g R P.


(* Parameter unpack_b_b_r_p_o "e28b6196c1eca2d5d9ca40b0f85ab69fef34acf1084207df7d30faed7ab5fa59" "67c5172ddf6437cbbbbe92ce602167cde908f3ffdf05c2a8b699e807f55da449" *)
Parameter unpack_b_b_r_p_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_b_r_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' R' P' = Phi X f g R P)
  ->
  unpack_b_b_r_p_o (pack_b_b_r_p X f g R P) Phi = Phi X f g R P.


(* Parameter pack_b_b_r_e "3d84ae6fcbf72e022a18a41520d2c085c25694f343379b81e470d15d9496b334" "e329da8665db96736d2564adf51b863c3c4ce214c15cfa71cf49c2650ed60fd7" *)
Parameter pack_b_b_r_e :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set.

Axiom pack_b_b_r_e_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_b_r_e X f g R c -> X = S 0.

Axiom pack_b_b_r_e_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, X = pack_b_b_r_e X f g R c 0.

Axiom pack_b_b_r_e_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_b_r_e X f g R c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_r_e_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_b_b_r_e X f g R c 1) x y.

Axiom pack_b_b_r_e_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_b_r_e X f g R c -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_r_e_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, g x y = decode_b (pack_b_b_r_e X f g R c 2) x y.

Axiom pack_b_b_r_e_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_b_r_e X f g R c -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_b_r_e_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_b_b_r_e X f g R c 3) x y.

Axiom pack_b_b_r_e_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_b_r_e X f g R c -> c = S 4.

Axiom pack_b_b_r_e_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, c = pack_b_b_r_e X f g R c 4.

Axiom pack_b_b_r_e_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall c c':set, pack_b_b_r_e X f g R c = pack_b_b_r_e X' f' g' R' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_b_b_r_e_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_b_r_e X f g R c = pack_b_b_r_e X f' g' R' c.

(* Parameter struct_b_b_r_e "f4a6ff5a667a3651c01242a3020b2e161af79c5ad170c804d6575c189402a57d" "d9d0d8e1199ebd2be1b86dc390394db08d187e201e5f5e1190d3bb913f014bd3" *)
Parameter struct_b_b_r_e :set -> prop.

Axiom pack_struct_b_b_r_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> struct_b_b_r_e (pack_b_b_r_e X f g R c).

Axiom pack_struct_b_b_r_e_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, struct_b_b_r_e (pack_b_b_r_e X f g R c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_r_e_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, struct_b_b_r_e (pack_b_b_r_e X f g R c) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_r_e_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, struct_b_b_r_e (pack_b_b_r_e X f g R c) -> c :e X.

Axiom struct_b_b_r_e_eta: forall S, struct_b_b_r_e S -> S = pack_b_b_r_e (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_r (S 3)) (S 4).


(* Parameter unpack_b_b_r_e_i "2f3c2444c2a869bbe82ac00e5cd8d91980b3656e7cf389f97027b667654c2cb4" "ce151864e43bce84e3ff59e5322b06c16869d5df636ecfbaf4bb643c8b5b486d" *)
Parameter unpack_b_b_r_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_b_b_r_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' R' c = Phi X f g R c)
  ->
  unpack_b_b_r_e_i (pack_b_b_r_e X f g R c) Phi = Phi X f g R c.


(* Parameter unpack_b_b_r_e_o "50155b7ddaa0c326b150adaa0457eef265a5aaa3d3a8b99a05b427468265f814" "6f3b09b5debe091a12a2828c0485a876ef282531255b0006358830ffd069cdde" *)
Parameter unpack_b_b_r_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_b_b_r_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' R' c = Phi X f g R c)
  ->
  unpack_b_b_r_e_o (pack_b_b_r_e X f g R c) Phi = Phi X f g R c.


(* Parameter pack_b_b_p_p "1a294437b19b2f6a08108e0cc8dd76358c40509d3b4112ba47d61f6598aec8e2" "f74513c472c2a39ef4efc8ba678a56c5607eb43f637deff7800d26b3b30c4b1d" *)
Parameter pack_b_b_p_p :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_b_b_p_p_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_b_p_p X f g P Q -> X = S 0.

Axiom pack_b_b_p_p_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, X = pack_b_b_p_p X f g P Q 0.

Axiom pack_b_b_p_p_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_b_p_p X f g P Q -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_p_p_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, f x y = decode_b (pack_b_b_p_p X f g P Q 1) x y.

Axiom pack_b_b_p_p_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_b_p_p X f g P Q -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_p_p_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, g x y = decode_b (pack_b_b_p_p X f g P Q 2) x y.

Axiom pack_b_b_p_p_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_b_p_p X f g P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_b_p_p_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_b_b_p_p X f g P Q 3) x.

Axiom pack_b_b_p_p_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_b_p_p X f g P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_b_b_p_p_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_b_b_p_p X f g P Q 4) x.

Axiom pack_b_b_p_p_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall P P':set -> prop, forall Q Q':set -> prop, pack_b_b_p_p X f g P Q = pack_b_b_p_p X' f' g' P' Q' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_b_b_p_p_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_b_b_p_p X f g P Q = pack_b_b_p_p X f' g' P' Q'.

(* Parameter struct_b_b_p_p "a917c2d3c4a47a2b146ae1923e2ce6e20a47465d74851c933b04fa530ba48efe" "7a05733d2df294b5b3e594d61c8b85792bf659e73fc565d4699872c48b405a0c" *)
Parameter struct_b_b_p_p :set -> prop.

Axiom pack_struct_b_b_p_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall P:set -> prop, forall Q:set -> prop, struct_b_b_p_p (pack_b_b_p_p X f g P Q).

Axiom pack_struct_b_b_p_p_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, struct_b_b_p_p (pack_b_b_p_p X f g P Q) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_p_p_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop, struct_b_b_p_p (pack_b_b_p_p X f g P Q) -> forall x y :e X, g x y :e X.

Axiom struct_b_b_p_p_eta: forall S, struct_b_b_p_p S -> S = pack_b_b_p_p (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_b_b_p_p_i "b09a7f99493f92a75457c8a6c9de9041665920c108a9f20081ecfcc5af1c8be6" "14d912d97350e25e6d45213b8d73cb7d2942eaccc7c26fd6b734878a7778a3e4" *)
Parameter unpack_b_b_p_p_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_b_b_p_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X f' g' P' Q' = Phi X f g P Q)
  ->
  unpack_b_b_p_p_i (pack_b_b_p_p X f g P Q) Phi = Phi X f g P Q.


(* Parameter unpack_b_b_p_p_o "6015594012cc4d8881fc72d680c1a90eef658998c71e7835985b6e7d28f074a9" "e9b7869546bc172f558aa115fb4af128abd7852b73295e967d690eca0d0f7e82" *)
Parameter unpack_b_b_p_p_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_b_p_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X f' g' P' Q' = Phi X f g P Q)
  ->
  unpack_b_b_p_p_o (pack_b_b_p_p X f g P Q) Phi = Phi X f g P Q.


(* Parameter pack_b_b_p_e "719ee8754387c6a7c42b268a2ae371399824609e94eb5b167f13ce30ca40ab0d" "bf187a0ed84879e84890e24dbe0313b7d5978b32c48a82e321a9b8f928a68363" *)
Parameter pack_b_b_p_e :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set -> set.

Axiom pack_b_b_p_e_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_b_p_e X f g P c -> X = S 0.

Axiom pack_b_b_p_e_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, X = pack_b_b_p_e X f g P c 0.

Axiom pack_b_b_p_e_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_b_p_e X f g P c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_p_e_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_b_b_p_e X f g P c 1) x y.

Axiom pack_b_b_p_e_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_b_p_e X f g P c -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_p_e_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, forall x y :e X, g x y = decode_b (pack_b_b_p_e X f g P c 2) x y.

Axiom pack_b_b_p_e_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_b_p_e X f g P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_b_p_e_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_b_b_p_e X f g P c 3) x.

Axiom pack_b_b_p_e_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, S = pack_b_b_p_e X f g P c -> c = S 4.

Axiom pack_b_b_p_e_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, c = pack_b_b_p_e X f g P c 4.

Axiom pack_b_b_p_e_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall P P':set -> prop, forall c c':set, pack_b_b_p_e X f g P c = pack_b_b_p_e X' f' g' P' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_b_b_p_e_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall P P':set -> prop, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_b_p_e X f g P c = pack_b_b_p_e X f' g' P' c.

(* Parameter struct_b_b_p_e "b1b9c7973d18de0bdacd0494a2e91299815cba0f37cd7d905682d3fa374a5c11" "9b0c4e2b1f6e52860f677062ba4561775249abc5b83cdba4311c137194f84794" *)
Parameter struct_b_b_p_e :set -> prop.

Axiom pack_struct_b_b_p_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall P:set -> prop, forall c:set, c :e X -> struct_b_b_p_e (pack_b_b_p_e X f g P c).

Axiom pack_struct_b_b_p_e_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, struct_b_b_p_e (pack_b_b_p_e X f g P c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_p_e_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, struct_b_b_p_e (pack_b_b_p_e X f g P c) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_p_e_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set, struct_b_b_p_e (pack_b_b_p_e X f g P c) -> c :e X.

Axiom struct_b_b_p_e_eta: forall S, struct_b_b_p_e S -> S = pack_b_b_p_e (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_b_b_p_e_i "c5c0aa96137c21d8b0ed9567bf8c76feaf52cc3c740089e9473dbf07ce7960c2" "e0d0c2146f30c5f8b2a50f2b0ef01cfd83d09ac7cb4307dc4253ae9be1c7eca8" *)
Parameter unpack_b_b_p_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_b_b_p_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' P' c = Phi X f g P c)
  ->
  unpack_b_b_p_e_i (pack_b_b_p_e X f g P c) Phi = Phi X f g P c.


(* Parameter unpack_b_b_p_e_o "ec70212b480825afc9d1a9e64ccf765d8a5699ed4e2fc5b2bb54b7b0abe437e8" "548a32bfd06694ec22637390ee43c1abcb30296e684772db2727e869ceaf6d9e" *)
Parameter unpack_b_b_p_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_b_b_p_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> prop) -> set -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' g' P' c = Phi X f g P c)
  ->
  unpack_b_b_p_e_o (pack_b_b_p_e X f g P c) Phi = Phi X f g P c.


(* Parameter pack_b_b_e_e "0ca5ba562d2ab04221b86aded545ed077bf3a2f06e21344f04ba0b43521b231e" "6859fb13a44929ca6d7c0e598ffc6a6f82969c8cfe5edda33f1c1d81187b9d31" *)
Parameter pack_b_b_e_e :set -> (set -> set -> set) -> (set -> set -> set) -> set -> set -> set.

Axiom pack_b_b_e_e_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, S = pack_b_b_e_e X f g c d -> X = S 0.

Axiom pack_b_b_e_e_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, X = pack_b_b_e_e X f g c d 0.

Axiom pack_b_b_e_e_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, S = pack_b_b_e_e X f g c d -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_e_e_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, forall x y :e X, f x y = decode_b (pack_b_b_e_e X f g c d 1) x y.

Axiom pack_b_b_e_e_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, S = pack_b_b_e_e X f g c d -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_e_e_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, forall x y :e X, g x y = decode_b (pack_b_b_e_e X f g c d 2) x y.

Axiom pack_b_b_e_e_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, S = pack_b_b_e_e X f g c d -> c = S 3.

Axiom pack_b_b_e_e_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, c = pack_b_b_e_e X f g c d 3.

Axiom pack_b_b_e_e_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, S = pack_b_b_e_e X f g c d -> d = S 4.

Axiom pack_b_b_e_e_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, d = pack_b_b_e_e X f g c d 4.

Axiom pack_b_b_e_e_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall c c':set, forall d d':set, pack_b_b_e_e X f g c d = pack_b_b_e_e X' f' g' c' d' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ c = c' /\ d = d'.

Axiom pack_b_b_e_e_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall c, forall d,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 pack_b_b_e_e X f g c d = pack_b_b_e_e X f' g' c d.

(* Parameter struct_b_b_e_e "af2850387310cf676e35267e10a14affc439a209ad200b7edc42d8142611fcd4" "7685bdf4f6436a90f8002790ede7ec64e03b146138f7d85bc11be7d287d3652b" *)
Parameter struct_b_b_e_e :set -> prop.

Axiom pack_struct_b_b_e_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall c:set, c :e X -> forall d:set, d :e X -> struct_b_b_e_e (pack_b_b_e_e X f g c d).

Axiom pack_struct_b_b_e_e_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, struct_b_b_e_e (pack_b_b_e_e X f g c d) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_e_e_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, struct_b_b_e_e (pack_b_b_e_e X f g c d) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_e_e_E3: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, struct_b_b_e_e (pack_b_b_e_e X f g c d) -> c :e X.

Axiom pack_struct_b_b_e_e_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set, struct_b_b_e_e (pack_b_b_e_e X f g c d) -> d :e X.

Axiom struct_b_b_e_e_eta: forall S, struct_b_b_e_e S -> S = pack_b_b_e_e (S 0) (decode_b (S 1)) (decode_b (S 2)) (S 3) (S 4).


(* Parameter unpack_b_b_e_e_i "78cabd5521b666604d7b8deee71a25d12741bbd39d84055b85d0a613ef13614c" "0708055ba3473c2f52dbd9ebd0f0042913b2ba689b64244d92acea4341472a1d" *)
Parameter unpack_b_b_e_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> set -> set -> set) -> set.

Axiom unpack_b_b_e_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> set -> set -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) -> Phi X f' g' c d = Phi X f g c d)
  ->
  unpack_b_b_e_e_i (pack_b_b_e_e X f g c d) Phi = Phi X f g c d.


(* Parameter unpack_b_b_e_e_o "eb93435a79c01148fc12dd7779795d68cc2251130dc7633623f16664d25ed072" "1bcc21b2f13824c926a364c5b001d252d630f39a0ebe1f8af790facbe0f63a11" *)
Parameter unpack_b_b_e_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> set -> set -> prop) -> prop.

Axiom unpack_b_b_e_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> set -> set -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) -> Phi X f' g' c d = Phi X f g c d)
  ->
  unpack_b_b_e_e_o (pack_b_b_e_e X f g c d) Phi = Phi X f g c d.


(* Parameter pack_b_u_r_r "15c201c597b30d7e5194a7e489c114f22f6f31864c3780b6a52609e32b9526c0" "ad9180b0621011c7d98e52b087078940f2d7da213e9276342fc4b8837b7becf9" *)
Parameter pack_b_u_r_r :set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set.

Axiom pack_b_u_r_r_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_u_r_r X f i R T -> X = S 0.

Axiom pack_b_u_r_r_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, X = pack_b_u_r_r X f i R T 0.

Axiom pack_b_u_r_r_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_u_r_r X f i R T -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_r_r_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, f x y = decode_b (pack_b_u_r_r X f i R T 1) x y.

Axiom pack_b_u_r_r_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_u_r_r X f i R T -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_r_r_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x :e X, i x = decode_u (pack_b_u_r_r X f i R T 2) x.

Axiom pack_b_u_r_r_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_u_r_r X f i R T -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_u_r_r_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_b_u_r_r X f i R T 3) x y.

Axiom pack_b_u_r_r_4_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_b_u_r_r X f i R T -> forall x y :e X, T x y = decode_r (S 4) x y.

Axiom pack_b_u_r_r_4_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, T x y = decode_r (pack_b_u_r_r X f i R T 4) x y.

Axiom pack_b_u_r_r_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop, pack_b_u_r_r X f i R T = pack_b_u_r_r X' f' i' R' T' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y).

Axiom pack_b_u_r_r_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_b_u_r_r X f i R T = pack_b_u_r_r X f' i' R' T'.

(* Parameter struct_b_u_r_r "ea586d49f5dc3ec7909d111fcd5e884f4c9a5642931ac65f9623f252999c1274" "8d1ff97700f5aea5abd57ec53e8960d324745c2d51505eaf2a66b384fab861ba" *)
Parameter struct_b_u_r_r :set -> prop.

Axiom pack_struct_b_u_r_r_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall T:set -> set -> prop, struct_b_u_r_r (pack_b_u_r_r X f i R T).

Axiom pack_struct_b_u_r_r_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_b_u_r_r (pack_b_u_r_r X f i R T) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_r_r_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_b_u_r_r (pack_b_u_r_r X f i R T) -> forall x :e X, i x :e X.

Axiom struct_b_u_r_r_eta: forall S, struct_b_u_r_r S -> S = pack_b_u_r_r (S 0) (decode_b (S 1)) (decode_u (S 2)) (decode_r (S 3)) (decode_r (S 4)).


(* Parameter unpack_b_u_r_r_i "e4ef16109b4c5ef52a259ae122ab50f2505128c4c880ed210df0614cccc6a466" "d943944a77cd267d39c0943121363748e515fe9003a0b43bc760c673ab93cf24" *)
Parameter unpack_b_u_r_r_i :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_b_u_r_r_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X f' i' R' T' = Phi X f i R T)
  ->
  unpack_b_u_r_r_i (pack_b_u_r_r X f i R T) Phi = Phi X f i R T.


(* Parameter unpack_b_u_r_r_o "49c4c5ecf3d90095e5f9baab69c1f445be2bab8fc96b0c28a47c7c11f79b395b" "7fc60762272bb67a052c46e2180ce093eb807ebc8c3c55e74acbbe2c2d175b81" *)
Parameter unpack_b_u_r_r_o :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_b_u_r_r_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X f' i' R' T' = Phi X f i R T)
  ->
  unpack_b_u_r_r_o (pack_b_u_r_r X f i R T) Phi = Phi X f i R T.


(* Parameter pack_b_u_r_p "cc726288a77fd0ff0cdb7112cf3c350324388a0a083d0a3bd4adf1b33d1e0a21" "d89ebecbf3d2b00c1e3d0eda0b5bc27dbe48f6dee7765f1c0a467571e15197ab" *)
Parameter pack_b_u_r_p :set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_b_u_r_p_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_u_r_p X f i R P -> X = S 0.

Axiom pack_b_u_r_p_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, X = pack_b_u_r_p X f i R P 0.

Axiom pack_b_u_r_p_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_u_r_p X f i R P -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_r_p_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, f x y = decode_b (pack_b_u_r_p X f i R P 1) x y.

Axiom pack_b_u_r_p_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_u_r_p X f i R P -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_r_p_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, i x = decode_u (pack_b_u_r_p X f i R P 2) x.

Axiom pack_b_u_r_p_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_u_r_p X f i R P -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_u_r_p_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_b_u_r_p X f i R P 3) x y.

Axiom pack_b_u_r_p_4_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_b_u_r_p X f i R P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_b_u_r_p_4_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_b_u_r_p X f i R P 4) x.

Axiom pack_b_u_r_p_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, pack_b_u_r_p X f i R P = pack_b_u_r_p X' f' i' R' P' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_b_u_r_p_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_u_r_p X f i R P = pack_b_u_r_p X f' i' R' P'.

(* Parameter struct_b_u_r_p "8c2d24fa7bc03d18bf085ae6345b4c14addd886c8c9ce0d98c8be142ad0f06fc" "82be13ec00a4f6edd5ac968986acbcac51f0611d6382e24bff64622726380a9a" *)
Parameter struct_b_u_r_p :set -> prop.

Axiom pack_struct_b_u_r_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall P:set -> prop, struct_b_u_r_p (pack_b_u_r_p X f i R P).

Axiom pack_struct_b_u_r_p_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_b_u_r_p (pack_b_u_r_p X f i R P) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_r_p_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_b_u_r_p (pack_b_u_r_p X f i R P) -> forall x :e X, i x :e X.

Axiom struct_b_u_r_p_eta: forall S, struct_b_u_r_p S -> S = pack_b_u_r_p (S 0) (decode_b (S 1)) (decode_u (S 2)) (decode_r (S 3)) (decode_p (S 4)).


(* Parameter unpack_b_u_r_p_i "bc3ac41ff9a675f7f9fc214c5321603bf25e002a65a7be066406e4224aecd971" "a2c255cb034a6c511defa8a48cd8ae0c36ebec28b4233d8fada892d9ebfb09ed" *)
Parameter unpack_b_u_r_p_i :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_b_u_r_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' i' R' P' = Phi X f i R P)
  ->
  unpack_b_u_r_p_i (pack_b_u_r_p X f i R P) Phi = Phi X f i R P.


(* Parameter unpack_b_u_r_p_o "9dae0fe280144fe483daf4f9625375ba3fc40ea3df6056011f538bcc0d259d4e" "26dc09860e3c9fae600fecf39a7f1d467c5120d898b7cebec94105b69e91d188" *)
Parameter unpack_b_u_r_p_o :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_u_r_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' i' R' P' = Phi X f i R P)
  ->
  unpack_b_u_r_p_o (pack_b_u_r_p X f i R P) Phi = Phi X f i R P.


(* Parameter pack_b_u_r_e "654bea44263ef46dadf9c9c2ba59288d4226183fc953469c5c75264317f83f0b" "77f8d3e60d19eea68fdb3be315761b4d6e32cb0d828ff4c502fa48477f6b3783" *)
Parameter pack_b_u_r_e :set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> set.

Axiom pack_b_u_r_e_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_u_r_e X f i R c -> X = S 0.

Axiom pack_b_u_r_e_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, X = pack_b_u_r_e X f i R c 0.

Axiom pack_b_u_r_e_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_u_r_e X f i R c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_r_e_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_b_u_r_e X f i R c 1) x y.

Axiom pack_b_u_r_e_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_u_r_e X f i R c -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_r_e_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_b_u_r_e X f i R c 2) x.

Axiom pack_b_u_r_e_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_u_r_e X f i R c -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_u_r_e_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_b_u_r_e X f i R c 3) x y.

Axiom pack_b_u_r_e_4_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_b_u_r_e X f i R c -> c = S 4.

Axiom pack_b_u_r_e_4_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, c = pack_b_u_r_e X f i R c 4.

Axiom pack_b_u_r_e_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, forall c c':set, pack_b_u_r_e X f i R c = pack_b_u_r_e X' f' i' R' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_b_u_r_e_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall R R':set -> set -> prop, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_u_r_e X f i R c = pack_b_u_r_e X f' i' R' c.

(* Parameter struct_b_u_r_e "aba7492454eba44196d725cf42d18130c354708136c573e78cd29651f643ac9c" "802e9aef398ccfcad3b898857daba5acecbefb209538dd46033512ff7101f226" *)
Parameter struct_b_u_r_e :set -> prop.

Axiom pack_struct_b_u_r_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> struct_b_u_r_e (pack_b_u_r_e X f i R c).

Axiom pack_struct_b_u_r_e_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, struct_b_u_r_e (pack_b_u_r_e X f i R c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_r_e_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, struct_b_u_r_e (pack_b_u_r_e X f i R c) -> forall x :e X, i x :e X.

Axiom pack_struct_b_u_r_e_E4: forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set, struct_b_u_r_e (pack_b_u_r_e X f i R c) -> c :e X.

Axiom struct_b_u_r_e_eta: forall S, struct_b_u_r_e S -> S = pack_b_u_r_e (S 0) (decode_b (S 1)) (decode_u (S 2)) (decode_r (S 3)) (S 4).


(* Parameter unpack_b_u_r_e_i "fc346eb60034a25fd0d3f64f34d75831e02d01c12fcbf3f9d84ff67d2aac2c3b" "05ba194e61a8b2499193cb792b13b38d665901a4a4ae8851e9f774c40459fa74" *)
Parameter unpack_b_u_r_e_i :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_b_u_r_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' i' R' c = Phi X f i R c)
  ->
  unpack_b_u_r_e_i (pack_b_u_r_e X f i R c) Phi = Phi X f i R c.


(* Parameter unpack_b_u_r_e_o "cb9ee933a3696727adc31ff889a6d2a355c325239f7f4e330edf27538e197a85" "15c835735e0902d1fde7bfe6a35f40e320b923daef80b4dbd82a2b5ecb43e3f9" *)
Parameter unpack_b_u_r_e_o :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_b_u_r_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' i' R' c = Phi X f i R c)
  ->
  unpack_b_u_r_e_o (pack_b_u_r_e X f i R c) Phi = Phi X f i R c.


(* Parameter pack_b_u_p_p "be2f6c23623f9d339e0decc8d83b19da62d099d4b2b071f56d72268c3cb29477" "d3ce051d22d11fc48f0e6fd0501081fa5004756ff6a83e4c8b9ad749f4e6223c" *)
Parameter pack_b_u_p_p :set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_b_u_p_p_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_u_p_p X f i P Q -> X = S 0.

Axiom pack_b_u_p_p_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, X = pack_b_u_p_p X f i P Q 0.

Axiom pack_b_u_p_p_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_u_p_p X f i P Q -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_p_p_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, f x y = decode_b (pack_b_u_p_p X f i P Q 1) x y.

Axiom pack_b_u_p_p_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_u_p_p X f i P Q -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_p_p_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, i x = decode_u (pack_b_u_p_p X f i P Q 2) x.

Axiom pack_b_u_p_p_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_u_p_p X f i P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_u_p_p_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_b_u_p_p X f i P Q 3) x.

Axiom pack_b_u_p_p_4_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_b_u_p_p X f i P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_b_u_p_p_4_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_b_u_p_p X f i P Q 4) x.

Axiom pack_b_u_p_p_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop, forall Q Q':set -> prop, pack_b_u_p_p X f i P Q = pack_b_u_p_p X' f' i' P' Q' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_b_u_p_p_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_b_u_p_p X f i P Q = pack_b_u_p_p X f' i' P' Q'.

(* Parameter struct_b_u_p_p "6548d02ff816addb040c2bab6dedd0a068455af7b6f674aa15d2189eab9229a5" "2fb7e4a1c28151491d64daa8b325cd7de4169f199bffae696aa7c9dffd759afb" *)
Parameter struct_b_u_p_p :set -> prop.

Axiom pack_struct_b_u_p_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, forall Q:set -> prop, struct_b_u_p_p (pack_b_u_p_p X f i P Q).

Axiom pack_struct_b_u_p_p_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, struct_b_u_p_p (pack_b_u_p_p X f i P Q) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_p_p_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop, struct_b_u_p_p (pack_b_u_p_p X f i P Q) -> forall x :e X, i x :e X.

Axiom struct_b_u_p_p_eta: forall S, struct_b_u_p_p S -> S = pack_b_u_p_p (S 0) (decode_b (S 1)) (decode_u (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_b_u_p_p_i "46af6bf54527eb5f2ba91052988aaf5abc0fa4cc26626dcefee9694247bec5d9" "cc65c806f2a82976c77741a703b1b292406ef72bd22f6ed69efa27607d6004aa" *)
Parameter unpack_b_u_p_p_i :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_b_u_p_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X f' i' P' Q' = Phi X f i P Q)
  ->
  unpack_b_u_p_p_i (pack_b_u_p_p X f i P Q) Phi = Phi X f i P Q.


(* Parameter unpack_b_u_p_p_o "3de43461cdcb9707f7321f44798c2a80263d2b3cd6af468811d3f05de9df64bb" "3e3042d458f565e5959c198d18e8c14f969804cf0e12f309d93ddefbeddaf342" *)
Parameter unpack_b_u_p_p_o :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_u_p_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X f' i' P' Q' = Phi X f i P Q)
  ->
  unpack_b_u_p_p_o (pack_b_u_p_p X f i P Q) Phi = Phi X f i P Q.


(* Parameter pack_b_u_p_e "90c8a689c5b751713afe53b62bcae8a2559fae764bc5b59ecbbec4c5b17c84e7" "a99a315a58d8d5305620f8092ae27f310ca313aebab712e2c80b553f70412435" *)
Parameter pack_b_u_p_e :set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set -> set.

Axiom pack_b_u_p_e_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_b_u_p_e X f i P c -> X = S 0.

Axiom pack_b_u_p_e_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, X = pack_b_u_p_e X f i P c 0.

Axiom pack_b_u_p_e_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_b_u_p_e X f i P c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_p_e_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_b_u_p_e X f i P c 1) x y.

Axiom pack_b_u_p_e_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_b_u_p_e X f i P c -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_p_e_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_b_u_p_e X f i P c 2) x.

Axiom pack_b_u_p_e_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_b_u_p_e X f i P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_u_p_e_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_b_u_p_e X f i P c 3) x.

Axiom pack_b_u_p_e_4_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, S = pack_b_u_p_e X f i P c -> c = S 4.

Axiom pack_b_u_p_e_4_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, c = pack_b_u_p_e X f i P c 4.

Axiom pack_b_u_p_e_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop, forall c c':set, pack_b_u_p_e X f i P c = pack_b_u_p_e X' f' i' P' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_b_u_p_e_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall P P':set -> prop, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_u_p_e X f i P c = pack_b_u_p_e X f' i' P' c.

(* Parameter struct_b_u_p_e "8fe6b919a961202632ceac4e83dfcc72fed170314aaf7bb573e334c2d5b3bdb8" "7bbd83ee703beff55fa6d91793e356dea499739b8dc6c6642775f0d8dd89fc3f" *)
Parameter struct_b_u_p_e :set -> prop.

Axiom pack_struct_b_u_p_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, forall c:set, c :e X -> struct_b_u_p_e (pack_b_u_p_e X f i P c).

Axiom pack_struct_b_u_p_e_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, struct_b_u_p_e (pack_b_u_p_e X f i P c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_p_e_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, struct_b_u_p_e (pack_b_u_p_e X f i P c) -> forall x :e X, i x :e X.

Axiom pack_struct_b_u_p_e_E4: forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set, struct_b_u_p_e (pack_b_u_p_e X f i P c) -> c :e X.

Axiom struct_b_u_p_e_eta: forall S, struct_b_u_p_e S -> S = pack_b_u_p_e (S 0) (decode_b (S 1)) (decode_u (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_b_u_p_e_i "25e5f84e646a535c0f2d4a31a9cbc046da973e508ffe8561f25e8c47d357452c" "e3c5d726b71edaea3125c5a7819d35bad72751d1c8fa85f5d8bfca7f6229bb68" *)
Parameter unpack_b_u_p_e_i :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_b_u_p_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' i' P' c = Phi X f i P c)
  ->
  unpack_b_u_p_e_i (pack_b_u_p_e X f i P c) Phi = Phi X f i P c.


(* Parameter unpack_b_u_p_e_o "2819e8b68cb3f544ba5e1eed4ab0f641163416beb76494715ce4846dabd6fcbb" "faa7822c76b60b23f5c36f5d5232bc7dcb219113e421c426b16b9161ac0b22b2" *)
Parameter unpack_b_u_p_e_o :set -> (set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_b_u_p_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> (set -> prop) -> set -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' i' P' c = Phi X f i P c)
  ->
  unpack_b_u_p_e_o (pack_b_u_p_e X f i P c) Phi = Phi X f i P c.


(* Parameter pack_b_u_e_e "b66297a386639ffaf9e43f28d58c1e68b52dd0c649ebb4b88eb22201e200d612" "1d9f070e1a96e2d712a00613f3183872ee72549d20d4cdd6f4e6ae3e3b8e11b0" *)
Parameter pack_b_u_e_e :set -> (set -> set -> set) -> (set -> set) -> set -> set -> set.

Axiom pack_b_u_e_e_0_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, S = pack_b_u_e_e X f i c d -> X = S 0.

Axiom pack_b_u_e_e_0_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, X = pack_b_u_e_e X f i c d 0.

Axiom pack_b_u_e_e_1_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, S = pack_b_u_e_e X f i c d -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_u_e_e_1_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, forall x y :e X, f x y = decode_b (pack_b_u_e_e X f i c d 1) x y.

Axiom pack_b_u_e_e_2_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, S = pack_b_u_e_e X f i c d -> forall x :e X, i x = decode_u (S 2) x.

Axiom pack_b_u_e_e_2_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, forall x :e X, i x = decode_u (pack_b_u_e_e X f i c d 2) x.

Axiom pack_b_u_e_e_3_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, S = pack_b_u_e_e X f i c d -> c = S 3.

Axiom pack_b_u_e_e_3_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, c = pack_b_u_e_e X f i c d 3.

Axiom pack_b_u_e_e_4_eq: forall S X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, S = pack_b_u_e_e X f i c d -> d = S 4.

Axiom pack_b_u_e_e_4_eq2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, d = pack_b_u_e_e X f i c d 4.

Axiom pack_b_u_e_e_inj : forall X X', forall f f':set -> set -> set, forall i i':set -> set, forall c c':set, forall d d':set, pack_b_u_e_e X f i c d = pack_b_u_e_e X' f' i' c' d' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, i x = i' x) /\ c = c' /\ d = d'.

Axiom pack_b_u_e_e_ext : forall X, forall f f':set -> set -> set, forall i i':set -> set, forall c, forall d,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, i x = i' x) ->
 pack_b_u_e_e X f i c d = pack_b_u_e_e X f' i' c d.

(* Parameter struct_b_u_e_e "e3d07ed8be5ae2cfe58e7b45a7024f44da4ccf5856bbf40f9cd1eea0b64e2fd0" "afe9253a057d9ebfbb9c22cbeb88839282a10abfbe2fad7dbc68a0cc89bff870" *)
Parameter struct_b_u_e_e :set -> prop.

Axiom pack_struct_b_u_e_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall i:set -> set, (forall x :e X, i x :e X) -> forall c:set, c :e X -> forall d:set, d :e X -> struct_b_u_e_e (pack_b_u_e_e X f i c d).

Axiom pack_struct_b_u_e_e_E1: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, struct_b_u_e_e (pack_b_u_e_e X f i c d) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_u_e_e_E2: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, struct_b_u_e_e (pack_b_u_e_e X f i c d) -> forall x :e X, i x :e X.

Axiom pack_struct_b_u_e_e_E3: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, struct_b_u_e_e (pack_b_u_e_e X f i c d) -> c :e X.

Axiom pack_struct_b_u_e_e_E4: forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set, struct_b_u_e_e (pack_b_u_e_e X f i c d) -> d :e X.

Axiom struct_b_u_e_e_eta: forall S, struct_b_u_e_e S -> S = pack_b_u_e_e (S 0) (decode_b (S 1)) (decode_u (S 2)) (S 3) (S 4).


(* Parameter unpack_b_u_e_e_i "fda2ed0a0496c25a33b022952e6ee6b5f1f5ff0bd4d48efd2ddbccc5e8a3aab4" "e919cc3eaa9f3e425aecf819fd12f1aafa7d5c2ef4706794c80f05c2091d9e6f" *)
Parameter unpack_b_u_e_e_i :set -> (set -> (set -> set -> set) -> (set -> set) -> set -> set -> set) -> set.

Axiom unpack_b_u_e_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> set -> set -> set,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' i' c d = Phi X f i c d)
  ->
  unpack_b_u_e_e_i (pack_b_u_e_e X f i c d) Phi = Phi X f i c d.


(* Parameter unpack_b_u_e_e_o "5ab545ca3d097979af95107dd26a7a133de5e49f7d18be190d86ece631e7e703" "1e503deb94c72d30ea00079fe2e17fd8ed2200cc0536d9c90d3f650a3d82f18d" *)
Parameter unpack_b_u_e_e_o :set -> (set -> (set -> set -> set) -> (set -> set) -> set -> set -> prop) -> prop.

Axiom unpack_b_u_e_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set) -> set -> set -> prop,
  forall X, forall f:set -> set -> set, forall i:set -> set, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall i':set -> set, (forall x :e X, i x = i' x) -> Phi X f' i' c d = Phi X f i c d)
  ->
  unpack_b_u_e_e_o (pack_b_u_e_e X f i c d) Phi = Phi X f i c d.


(* Parameter pack_b_r_p_p "41e920ff66608c3d4220495489b7013025e62cdd7a2ee9e861f86a9808483556" "16ca4aa2606aa27b4427d2d91cdaec6f0c4adcfea19b871534e7a08b7c0c8fa5" *)
Parameter pack_b_r_p_p :set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_b_r_p_p_0_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_b_r_p_p X f R P Q -> X = S 0.

Axiom pack_b_r_p_p_0_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, X = pack_b_r_p_p X f R P Q 0.

Axiom pack_b_r_p_p_1_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_b_r_p_p X f R P Q -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_r_p_p_1_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, f x y = decode_b (pack_b_r_p_p X f R P Q 1) x y.

Axiom pack_b_r_p_p_2_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_b_r_p_p X f R P Q -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_b_r_p_p_2_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, R x y = decode_r (pack_b_r_p_p X f R P Q 2) x y.

Axiom pack_b_r_p_p_3_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_b_r_p_p X f R P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_r_p_p_3_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_b_r_p_p X f R P Q 3) x.

Axiom pack_b_r_p_p_4_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_b_r_p_p X f R P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_b_r_p_p_4_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_b_r_p_p X f R P Q 4) x.

Axiom pack_b_r_p_p_inj : forall X X', forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop, pack_b_r_p_p X f R P Q = pack_b_r_p_p X' f' R' P' Q' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_b_r_p_p_ext : forall X, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_b_r_p_p X f R P Q = pack_b_r_p_p X f' R' P' Q'.

(* Parameter struct_b_r_p_p "774b38fe03ec4b4038c40905929738d1ef98b3e58c02ae656fb009bc56df8c37" "1a12c2b231aebc0f76cfe28063c1c394e62eea0dd383f04ad9c9ba9061e06c6f" *)
Parameter struct_b_r_p_p :set -> prop.

Axiom pack_struct_b_r_p_p_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, struct_b_r_p_p (pack_b_r_p_p X f R P Q).

Axiom pack_struct_b_r_p_p_E1: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, struct_b_r_p_p (pack_b_r_p_p X f R P Q) -> forall x y :e X, f x y :e X.

Axiom struct_b_r_p_p_eta: forall S, struct_b_r_p_p S -> S = pack_b_r_p_p (S 0) (decode_b (S 1)) (decode_r (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_b_r_p_p_i "c2c188227fdc2c0636e3f9f3bbc786c5cc6222128fd7a7f22f92d519dbce62b2" "71ec90d82d3b3dc3fe45f86c3b2ad5f062220c4c941aefaef6272081dcca7f8d" *)
Parameter unpack_b_r_p_p_i :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_b_r_p_p_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X f' R' P' Q' = Phi X f R P Q)
  ->
  unpack_b_r_p_p_i (pack_b_r_p_p X f R P Q) Phi = Phi X f R P Q.


(* Parameter unpack_b_r_p_p_o "1b81f3dde1611128e9f3c2d90fbefe47d1308762d56df77e59b9c92b77dc515f" "7f9ba0c901a3e17d571f879a61a1911444a68b6de45e7dc5a81f9d48b34dd129" *)
Parameter unpack_b_r_p_p_o :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_b_r_p_p_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X f' R' P' Q' = Phi X f R P Q)
  ->
  unpack_b_r_p_p_o (pack_b_r_p_p X f R P Q) Phi = Phi X f R P Q.


(* Parameter pack_b_r_p_e "7dc874b42fe4daeb8b25ba05197782981ecf6a61f8662cb405b3c8a340f580c1" "2f33adc72295a0d1c7b8f682f2589e49fef9a89314837275927643018d20d819" *)
Parameter pack_b_r_p_e :set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> set.

Axiom pack_b_r_p_e_0_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_b_r_p_e X f R P c -> X = S 0.

Axiom pack_b_r_p_e_0_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, X = pack_b_r_p_e X f R P c 0.

Axiom pack_b_r_p_e_1_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_b_r_p_e X f R P c -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_r_p_e_1_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x y :e X, f x y = decode_b (pack_b_r_p_e X f R P c 1) x y.

Axiom pack_b_r_p_e_2_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_b_r_p_e X f R P c -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_b_r_p_e_2_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_b_r_p_e X f R P c 2) x y.

Axiom pack_b_r_p_e_3_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_b_r_p_e X f R P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_b_r_p_e_3_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_b_r_p_e X f R P c 3) x.

Axiom pack_b_r_p_e_4_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_b_r_p_e X f R P c -> c = S 4.

Axiom pack_b_r_p_e_4_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c = pack_b_r_p_e X f R P c 4.

Axiom pack_b_r_p_e_inj : forall X X', forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall c c':set, pack_b_r_p_e X f R P c = pack_b_r_p_e X' f' R' P' c' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_b_r_p_e_ext : forall X, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall c,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_r_p_e X f R P c = pack_b_r_p_e X f' R' P' c.

(* Parameter struct_b_r_p_e "3d692af3c89826e9da7752a23e66092858664d9d7c5deabb0f8d8343a74b84d0" "0fe73cd2b0cec489d9a87927620630b30f0b4f99db8fcdca0b2d8742cb718d03" *)
Parameter struct_b_r_p_e :set -> prop.

Axiom pack_struct_b_r_p_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c :e X -> struct_b_r_p_e (pack_b_r_p_e X f R P c).

Axiom pack_struct_b_r_p_e_E1: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, struct_b_r_p_e (pack_b_r_p_e X f R P c) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_r_p_e_E4: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, struct_b_r_p_e (pack_b_r_p_e X f R P c) -> c :e X.

Axiom struct_b_r_p_e_eta: forall S, struct_b_r_p_e S -> S = pack_b_r_p_e (S 0) (decode_b (S 1)) (decode_r (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_b_r_p_e_i "43c97c2eadb4994996b2f402f02fa9e5580abfece09e386a9c3db3e39a3b6b04" "dd5b5876e701665ec708a449e633f9b0d7f259e4fcd15802843fc0f3febfe9b3" *)
Parameter unpack_b_r_p_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_b_r_p_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> set,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' R' P' c = Phi X f R P c)
  ->
  unpack_b_r_p_e_i (pack_b_r_p_e X f R P c) Phi = Phi X f R P c.


(* Parameter unpack_b_r_p_e_o "d52fb7f318f2fd2c9dba4a283345f56ccc7bbda731fc2b1e6ec493ddf9703d14" "2d8b1648c5fac49f0d2924637b83ff0d7c9892edfb1bed7ced390ff16f67dda9" *)
Parameter unpack_b_r_p_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_b_r_p_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> prop,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' R' P' c = Phi X f R P c)
  ->
  unpack_b_r_p_e_o (pack_b_r_p_e X f R P c) Phi = Phi X f R P c.


(* Parameter pack_b_r_e_e "77e3ba4cd7aeeb482b310b0ff9df9ae3adcf112936338aee906f5651100c419f" "3db0b4fbd314d733c650c9fe09c2822969c9588b7d5aee8f480a1331d003c3f1" *)
Parameter pack_b_r_e_e :set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> set.

Axiom pack_b_r_e_e_0_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_r_e_e X f R c d -> X = S 0.

Axiom pack_b_r_e_e_0_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, X = pack_b_r_e_e X f R c d 0.

Axiom pack_b_r_e_e_1_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_r_e_e X f R c d -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_r_e_e_1_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, f x y = decode_b (pack_b_r_e_e X f R c d 1) x y.

Axiom pack_b_r_e_e_2_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_r_e_e X f R c d -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_b_r_e_e_2_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, R x y = decode_r (pack_b_r_e_e X f R c d 2) x y.

Axiom pack_b_r_e_e_3_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_r_e_e X f R c d -> c = S 3.

Axiom pack_b_r_e_e_3_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, c = pack_b_r_e_e X f R c d 3.

Axiom pack_b_r_e_e_4_eq: forall S X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_r_e_e X f R c d -> d = S 4.

Axiom pack_b_r_e_e_4_eq2: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, d = pack_b_r_e_e X f R c d 4.

Axiom pack_b_r_e_e_inj : forall X X', forall f f':set -> set -> set, forall R R':set -> set -> prop, forall c c':set, forall d d':set, pack_b_r_e_e X f R c d = pack_b_r_e_e X' f' R' c' d' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, R x y = R' x y) /\ c = c' /\ d = d'.

Axiom pack_b_r_e_e_ext : forall X, forall f f':set -> set -> set, forall R R':set -> set -> prop, forall c, forall d,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_r_e_e X f R c d = pack_b_r_e_e X f' R' c d.

(* Parameter struct_b_r_e_e "7f07b505a46c88313ffb3848b6d0cdaff50136dc9e36adaefe3dbaad692497fe" "4226760658369037f829d8d114c11d005df17bdef824f378b20a18f3bdc34388" *)
Parameter struct_b_r_e_e :set -> prop.

Axiom pack_struct_b_r_e_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_b_r_e_e (pack_b_r_e_e X f R c d).

Axiom pack_struct_b_r_e_e_E1: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_b_r_e_e (pack_b_r_e_e X f R c d) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_r_e_e_E3: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_b_r_e_e (pack_b_r_e_e X f R c d) -> c :e X.

Axiom pack_struct_b_r_e_e_E4: forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_b_r_e_e (pack_b_r_e_e X f R c d) -> d :e X.

Axiom struct_b_r_e_e_eta: forall S, struct_b_r_e_e S -> S = pack_b_r_e_e (S 0) (decode_b (S 1)) (decode_r (S 2)) (S 3) (S 4).


(* Parameter unpack_b_r_e_e_i "446741f93af7312f4aa7f66e7b99a25b12707429ee15bd200343e8826e433d27" "dfc835fe301eac6d9187c6ff04c1ba7edada302e210352c6793a597508376044" *)
Parameter unpack_b_r_e_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> set) -> set.

Axiom unpack_b_r_e_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> set,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' R' c d = Phi X f R c d)
  ->
  unpack_b_r_e_e_i (pack_b_r_e_e X f R c d) Phi = Phi X f R c d.


(* Parameter unpack_b_r_e_e_o "549161c1888a830fcee4919fd97a4d7ecba7fe8d500910c58dc51a22353ad63f" "4dcbf15cf2a824dc9bc26d3fee474f7cc4b4d3bcf90122d926ceed9508e7ba48" *)
Parameter unpack_b_r_e_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_b_r_e_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> prop,
  forall X, forall f:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' R' c d = Phi X f R c d)
  ->
  unpack_b_r_e_e_o (pack_b_r_e_e X f R c d) Phi = Phi X f R c d.


(* Parameter pack_b_p_e_e "5f8e5ab406d97dff0a49d692d63a3604ba7629915ce22145f3054fa4b5d0140b" "86b7a8ce71f1411045231eeee2859ed8f9c3d7d65f3e4a935328d4724670c956" *)
Parameter pack_b_p_e_e :set -> (set -> set -> set) -> (set -> prop) -> set -> set -> set.

Axiom pack_b_p_e_e_0_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_b_p_e_e X f P c d -> X = S 0.

Axiom pack_b_p_e_e_0_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, X = pack_b_p_e_e X f P c d 0.

Axiom pack_b_p_e_e_1_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_b_p_e_e X f P c d -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_p_e_e_1_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, forall x y :e X, f x y = decode_b (pack_b_p_e_e X f P c d 1) x y.

Axiom pack_b_p_e_e_2_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_b_p_e_e X f P c d -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_b_p_e_e_2_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, forall x :e X, P x = decode_p (pack_b_p_e_e X f P c d 2) x.

Axiom pack_b_p_e_e_3_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_b_p_e_e X f P c d -> c = S 3.

Axiom pack_b_p_e_e_3_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, c = pack_b_p_e_e X f P c d 3.

Axiom pack_b_p_e_e_4_eq: forall S X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_b_p_e_e X f P c d -> d = S 4.

Axiom pack_b_p_e_e_4_eq2: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, d = pack_b_p_e_e X f P c d 4.

Axiom pack_b_p_e_e_inj : forall X X', forall f f':set -> set -> set, forall P P':set -> prop, forall c c':set, forall d d':set, pack_b_p_e_e X f P c d = pack_b_p_e_e X' f' P' c' d' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x :e X, P x = P' x) /\ c = c' /\ d = d'.

Axiom pack_b_p_e_e_ext : forall X, forall f f':set -> set -> set, forall P P':set -> prop, forall c, forall d,
 (forall x y :e X, f x y = f' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_b_p_e_e X f P c d = pack_b_p_e_e X f' P' c d.

(* Parameter struct_b_p_e_e "1f153865a8d6a20ed9347058840bdb7a4b3f6a543f506858f293d5796b874dc5" "b3e0e4c50d5183f60f5e1f9e3f0d75c0c37812b79811f9dcf9d873c2555dcaca" *)
Parameter struct_b_p_e_e :set -> prop.

Axiom pack_struct_b_p_e_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall P:set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_b_p_e_e (pack_b_p_e_e X f P c d).

Axiom pack_struct_b_p_e_e_E1: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, struct_b_p_e_e (pack_b_p_e_e X f P c d) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_p_e_e_E3: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, struct_b_p_e_e (pack_b_p_e_e X f P c d) -> c :e X.

Axiom pack_struct_b_p_e_e_E4: forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set, struct_b_p_e_e (pack_b_p_e_e X f P c d) -> d :e X.

Axiom struct_b_p_e_e_eta: forall S, struct_b_p_e_e S -> S = pack_b_p_e_e (S 0) (decode_b (S 1)) (decode_p (S 2)) (S 3) (S 4).


(* Parameter unpack_b_p_e_e_i "aca46b46dfe1a121ac2524c32cf39f77f695c7249217c650b68d185710963a23" "c0fcffa00fb148c5dd8b25ae05eb1a0efa5d420498844792bd983bc42d006ad4" *)
Parameter unpack_b_p_e_e_i :set -> (set -> (set -> set -> set) -> (set -> prop) -> set -> set -> set) -> set.

Axiom unpack_b_p_e_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> prop) -> set -> set -> set,
  forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' P' c d = Phi X f P c d)
  ->
  unpack_b_p_e_e_i (pack_b_p_e_e X f P c d) Phi = Phi X f P c d.


(* Parameter unpack_b_p_e_e_o "fb5ca597406ce9ebccdc401a0835b735885d8abf585183473e89fade547b8efd" "954af9ab18476063478938b0c06bc4f70b17928edeeb8b5fca701171ec7bc9e0" *)
Parameter unpack_b_p_e_e_o :set -> (set -> (set -> set -> set) -> (set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_b_p_e_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> prop) -> set -> set -> prop,
  forall X, forall f:set -> set -> set, forall P:set -> prop, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X f' P' c d = Phi X f P c d)
  ->
  unpack_b_p_e_e_o (pack_b_p_e_e X f P c d) Phi = Phi X f P c d.


(* Parameter pack_u_u_r_r "09707c79a5cbe6dfe3f18d8617b0e8f3773fee0195a5ae46905a7f82dbf08a89" "a9b5c237bf1b3c760643dcc62c0ff0a6ac5f3726a96cc685a6bb1cbadd81576b" *)
Parameter pack_u_u_r_r :set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set.

Axiom pack_u_u_r_r_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_u_u_r_r X i j R T -> X = S 0.

Axiom pack_u_u_r_r_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, X = pack_u_u_r_r X i j R T 0.

Axiom pack_u_u_r_r_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_u_u_r_r X i j R T -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_r_r_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x :e X, i x = decode_u (pack_u_u_r_r X i j R T 1) x.

Axiom pack_u_u_r_r_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_u_u_r_r X i j R T -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_r_r_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x :e X, j x = decode_u (pack_u_u_r_r X i j R T 2) x.

Axiom pack_u_u_r_r_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_u_u_r_r X i j R T -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_u_u_r_r_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, R x y = decode_r (pack_u_u_r_r X i j R T 3) x y.

Axiom pack_u_u_r_r_4_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, S = pack_u_u_r_r X i j R T -> forall x y :e X, T x y = decode_r (S 4) x y.

Axiom pack_u_u_r_r_4_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, forall x y :e X, T x y = decode_r (pack_u_u_r_r X i j R T 4) x y.

Axiom pack_u_u_r_r_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop, pack_u_u_r_r X i j R T = pack_u_u_r_r X' i' j' R' T' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y).

Axiom pack_u_u_r_r_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop, forall T T':set -> set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_u_u_r_r X i j R T = pack_u_u_r_r X i' j' R' T'.

(* Parameter struct_u_u_r_r "de2c54e24ed23aa406d5a0de2e5b23a867b8d05e621b79616ceb89e0a9571e13" "8f02b83ee383e75297abde50c4bc48de13633f8bb6f686417f6cbe2c6398c22f" *)
Parameter struct_u_u_r_r :set -> prop.

Axiom pack_struct_u_u_r_r_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall R:set -> set -> prop, forall T:set -> set -> prop, struct_u_u_r_r (pack_u_u_r_r X i j R T).

Axiom pack_struct_u_u_r_r_E1: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_u_u_r_r (pack_u_u_r_r X i j R T) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_r_r_E2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop, struct_u_u_r_r (pack_u_u_r_r X i j R T) -> forall x :e X, j x :e X.

Axiom struct_u_u_r_r_eta: forall S, struct_u_u_r_r S -> S = pack_u_u_r_r (S 0) (decode_u (S 1)) (decode_u (S 2)) (decode_r (S 3)) (decode_r (S 4)).


(* Parameter unpack_u_u_r_r_i "4ac9810e88bb1abe3ed97ba83d539219f7d099d7ff849b548e743de68a59a538" "c63d1c1619aaed3d7204be8decfab6c1859926c0995bf7b0b3545ae6415bafc3" *)
Parameter unpack_u_u_r_r_i :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set) -> set.

Axiom unpack_u_u_r_r_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X i' j' R' T' = Phi X i j R T)
  ->
  unpack_u_u_r_r_i (pack_u_u_r_r X i j R T) Phi = Phi X i j R T.


(* Parameter unpack_u_u_r_r_o "3a693b9906f3ab39278f5c13bb3ea642df9929551bb6b4571d471d75ba953d3f" "f97f0fb39c586814e465ac980186f1f4db23885fdde5e29d9e4824f57dfa118d" *)
Parameter unpack_u_u_r_r_o :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop) -> prop.

Axiom unpack_u_u_r_r_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> set -> prop) -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall T:set -> set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X i' j' R' T' = Phi X i j R T)
  ->
  unpack_u_u_r_r_o (pack_u_u_r_r X i j R T) Phi = Phi X i j R T.


(* Parameter pack_u_u_r_p "3d9c3cf8c48f249ebc40ac2c586af9eda28c6ffbfba2ed5213a7098e0eb069c4" "54fac40917abda87195c78ae99721a07b945c00bc63403be11a6a0d2d3b33b22" *)
Parameter pack_u_u_r_p :set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set.

Axiom pack_u_u_r_p_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_u_r_p X i j R P -> X = S 0.

Axiom pack_u_u_r_p_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, X = pack_u_u_r_p X i j R P 0.

Axiom pack_u_u_r_p_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_u_r_p X i j R P -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_r_p_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, i x = decode_u (pack_u_u_r_p X i j R P 1) x.

Axiom pack_u_u_r_p_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_u_r_p X i j R P -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_r_p_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, j x = decode_u (pack_u_u_r_p X i j R P 2) x.

Axiom pack_u_u_r_p_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_u_r_p X i j R P -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_u_u_r_p_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x y :e X, R x y = decode_r (pack_u_u_r_p X i j R P 3) x y.

Axiom pack_u_u_r_p_4_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, S = pack_u_u_r_p X i j R P -> forall x :e X, P x = decode_p (S 4) x.

Axiom pack_u_u_r_p_4_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall x :e X, P x = decode_p (pack_u_u_r_p X i j R P 4) x.

Axiom pack_u_u_r_p_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, pack_u_u_r_p X i j R P = pack_u_u_r_p X' i' j' R' P' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x).

Axiom pack_u_u_r_p_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_u_r_p X i j R P = pack_u_u_r_p X i' j' R' P'.

(* Parameter struct_u_u_r_p "7549918eb10fc58235f0c46b18a30c9cf84a23dccdc806011298697c6cdca26c" "f6aac57396921ec19739fdda24c0a3c0791d8b6b18d75fa7cbbbc656753db3d1" *)
Parameter struct_u_u_r_p :set -> prop.

Axiom pack_struct_u_u_r_p_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall R:set -> set -> prop, forall P:set -> prop, struct_u_u_r_p (pack_u_u_r_p X i j R P).

Axiom pack_struct_u_u_r_p_E1: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_u_u_r_p (pack_u_u_r_p X i j R P) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_r_p_E2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop, struct_u_u_r_p (pack_u_u_r_p X i j R P) -> forall x :e X, j x :e X.

Axiom struct_u_u_r_p_eta: forall S, struct_u_u_r_p S -> S = pack_u_u_r_p (S 0) (decode_u (S 1)) (decode_u (S 2)) (decode_r (S 3)) (decode_p (S 4)).


(* Parameter unpack_u_u_r_p_i "782012e75c6701c6e2ceb6f5ff354ffeb29600b11388f9ec54df012522678aff" "0ecdba102fc025a4cc6fa4023fad7362df9556101d087798f545ff7d9981ccbc" *)
Parameter unpack_u_u_r_p_i :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_u_u_r_p_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' j' R' P' = Phi X i j R P)
  ->
  unpack_u_u_r_p_i (pack_u_u_r_p X i j R P) Phi = Phi X i j R P.


(* Parameter unpack_u_u_r_p_o "d1d8953132612a49fb348bf5aa216e95ef386c25a24351d60002df1523fee9f1" "469641eea83c378c9a0c5e5110d98143ec6f5b26480beaf29c16bb6d513dcf9b" *)
Parameter unpack_u_u_r_p_o :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_u_u_r_p_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall P:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' j' R' P' = Phi X i j R P)
  ->
  unpack_u_u_r_p_o (pack_u_u_r_p X i j R P) Phi = Phi X i j R P.


(* Parameter pack_u_u_r_e "07068454273d07859d6d9ddd63be6eb2dafe0f0e26bd61cf4fb990463a83dccb" "18bb448735026ee253aa644bc048f4132e90d41e3ebaecdd219cfbd375bb59ef" *)
Parameter pack_u_u_r_e :set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> set.

Axiom pack_u_u_r_e_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_u_r_e X i j R c -> X = S 0.

Axiom pack_u_u_r_e_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, X = pack_u_u_r_e X i j R c 0.

Axiom pack_u_u_r_e_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_u_r_e X i j R c -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_r_e_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_u_u_r_e X i j R c 1) x.

Axiom pack_u_u_r_e_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_u_r_e X i j R c -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_r_e_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, forall x :e X, j x = decode_u (pack_u_u_r_e X i j R c 2) x.

Axiom pack_u_u_r_e_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_u_r_e X i j R c -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_u_u_r_e_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_u_u_r_e X i j R c 3) x y.

Axiom pack_u_u_r_e_4_eq: forall S X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, S = pack_u_u_r_e X i j R c -> c = S 4.

Axiom pack_u_u_r_e_4_eq2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, c = pack_u_u_r_e X i j R c 4.

Axiom pack_u_u_r_e_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop, forall c c':set, pack_u_u_r_e X i j R c = pack_u_u_r_e X' i' j' R' c' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ (forall x y :e X, R x y = R' x y) /\ c = c'.

Axiom pack_u_u_r_e_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall R R':set -> set -> prop, forall c,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_u_u_r_e X i j R c = pack_u_u_r_e X i' j' R' c.

(* Parameter struct_u_u_r_e "a71f1dc174c9d7f27040ca69b0b5e9fe74b071767b7f0e9a0f6cbd1ae8b88d59" "1a4c81bd335aef7cac8fade8ef9dbc01ca842e2c14e95b2c56aaa0f5e4209c38" *)
Parameter struct_u_u_r_e :set -> prop.

Axiom pack_struct_u_u_r_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> struct_u_u_r_e (pack_u_u_r_e X i j R c).

Axiom pack_struct_u_u_r_e_E1: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, struct_u_u_r_e (pack_u_u_r_e X i j R c) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_r_e_E2: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, struct_u_u_r_e (pack_u_u_r_e X i j R c) -> forall x :e X, j x :e X.

Axiom pack_struct_u_u_r_e_E4: forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set, struct_u_u_r_e (pack_u_u_r_e X i j R c) -> c :e X.

Axiom struct_u_u_r_e_eta: forall S, struct_u_u_r_e S -> S = pack_u_u_r_e (S 0) (decode_u (S 1)) (decode_u (S 2)) (decode_r (S 3)) (S 4).


(* Parameter unpack_u_u_r_e_i "95634d2bf36310afc417731978bd6c339c7dc0902735ecfe666b8f819ec3d1cc" "cc2540a97bf7377e67dd8383b8392f79753bad59019bb9b26b277dc4562fe5a7" *)
Parameter unpack_u_u_r_e_i :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> set) -> set.

Axiom unpack_u_u_r_e_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' j' R' c = Phi X i j R c)
  ->
  unpack_u_u_r_e_i (pack_u_u_r_e X i j R c) Phi = Phi X i j R c.


(* Parameter unpack_u_u_r_e_o "34c6a324d49604bc9bfd7bb9e9f7b58e0d3a600e5ab8120e315e4e73f738afcd" "224d0f11fe04c99b865ac8f3b0b75991c3e468d6568b34f6321d412497257241" *)
Parameter unpack_u_u_r_e_o :set -> (set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> prop) -> prop.

Axiom unpack_u_u_r_e_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> set -> prop) -> set -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall R:set -> set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' j' R' c = Phi X i j R c)
  ->
  unpack_u_u_r_e_o (pack_u_u_r_e X i j R c) Phi = Phi X i j R c.


(* Parameter pack_u_u_p_p "4d1878b4f38adece10da5fb646bd43cdc521322d5e29c1e31b0dfc654c2986fb" "01ec3b4d264cedfa0cdf6ac54ace3a5b13c2cf30bdb03a2238baa96a91310459" *)
Parameter pack_u_u_p_p :set -> (set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_u_u_p_p_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_u_u_p_p X i j P Q -> X = S 0.

Axiom pack_u_u_p_p_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, X = pack_u_u_p_p X i j P Q 0.

Axiom pack_u_u_p_p_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_u_u_p_p X i j P Q -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_p_p_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, i x = decode_u (pack_u_u_p_p X i j P Q 1) x.

Axiom pack_u_u_p_p_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_u_u_p_p X i j P Q -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_p_p_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, j x = decode_u (pack_u_u_p_p X i j P Q 2) x.

Axiom pack_u_u_p_p_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_u_u_p_p X i j P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_u_u_p_p_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_u_u_p_p X i j P Q 3) x.

Axiom pack_u_u_p_p_4_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, S = pack_u_u_p_p X i j P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_u_u_p_p_4_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_u_u_p_p X i j P Q 4) x.

Axiom pack_u_u_p_p_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall P P':set -> prop, forall Q Q':set -> prop, pack_u_u_p_p X i j P Q = pack_u_u_p_p X' i' j' P' Q' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_u_u_p_p_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_u_u_p_p X i j P Q = pack_u_u_p_p X i' j' P' Q'.

(* Parameter struct_u_u_p_p "5b87672babb9eeda4f773be7b2d75d6d39b47a1c3d606154005cb48f87e8e2fc" "3a002cccf7156dbd087a73eb48d6502dc8558d109034c4328e3ad65747e98c24" *)
Parameter struct_u_u_p_p :set -> prop.

Axiom pack_struct_u_u_p_p_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall P:set -> prop, forall Q:set -> prop, struct_u_u_p_p (pack_u_u_p_p X i j P Q).

Axiom pack_struct_u_u_p_p_E1: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, struct_u_u_p_p (pack_u_u_p_p X i j P Q) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_p_p_E2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop, struct_u_u_p_p (pack_u_u_p_p X i j P Q) -> forall x :e X, j x :e X.

Axiom struct_u_u_p_p_eta: forall S, struct_u_u_p_p S -> S = pack_u_u_p_p (S 0) (decode_u (S 1)) (decode_u (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_u_u_p_p_i "87976e0e2b1955f101d96d4e62bba0f10ce09c47524511b3406e859030302194" "60106840288107208cf8336c93a246b440066e3304ca959a8eaeadf255348e31" *)
Parameter unpack_u_u_p_p_i :set -> (set -> (set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_u_u_p_p_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X i' j' P' Q' = Phi X i j P Q)
  ->
  unpack_u_u_p_p_i (pack_u_u_p_p X i j P Q) Phi = Phi X i j P Q.


(* Parameter unpack_u_u_p_p_o "3c7b983177bf9e2786a517ff9a83d9431a24272a61ee9d8f5b163ba1f600113e" "7e3e57d577ec4571931024a257bbc3d275c0c12fe601c3ad76fa0956befca93c" *)
Parameter unpack_u_u_p_p_o :set -> (set -> (set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_u_u_p_p_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall Q:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X i' j' P' Q' = Phi X i j P Q)
  ->
  unpack_u_u_p_p_o (pack_u_u_p_p X i j P Q) Phi = Phi X i j P Q.


(* Parameter pack_u_u_p_e "24afa9f999da365d98059cf3df45abcb8d85a111d8419bbcec0a47d458579425" "4d8d033de06eac011431d43faab62f09ec8294bd8eccece9fb13a15ea94d0197" *)
Parameter pack_u_u_p_e :set -> (set -> set) -> (set -> set) -> (set -> prop) -> set -> set.

Axiom pack_u_u_p_e_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, S = pack_u_u_p_e X i j P c -> X = S 0.

Axiom pack_u_u_p_e_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, X = pack_u_u_p_e X i j P c 0.

Axiom pack_u_u_p_e_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, S = pack_u_u_p_e X i j P c -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_p_e_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_u_u_p_e X i j P c 1) x.

Axiom pack_u_u_p_e_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, S = pack_u_u_p_e X i j P c -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_p_e_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, forall x :e X, j x = decode_u (pack_u_u_p_e X i j P c 2) x.

Axiom pack_u_u_p_e_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, S = pack_u_u_p_e X i j P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_u_u_p_e_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_u_u_p_e X i j P c 3) x.

Axiom pack_u_u_p_e_4_eq: forall S X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, S = pack_u_u_p_e X i j P c -> c = S 4.

Axiom pack_u_u_p_e_4_eq2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, c = pack_u_u_p_e X i j P c 4.

Axiom pack_u_u_p_e_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall P P':set -> prop, forall c c':set, pack_u_u_p_e X i j P c = pack_u_u_p_e X' i' j' P' c' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_u_u_p_e_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall P P':set -> prop, forall c,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_u_p_e X i j P c = pack_u_u_p_e X i' j' P' c.

(* Parameter struct_u_u_p_e "c41f763e311b783ef78fa60b4965eb0be401787c03c40049184a7dddbef41bcd" "9140bd6ad18cfea50ff6b8e3198e4054e212e5186106a57724e9cdd539cc3d83" *)
Parameter struct_u_u_p_e :set -> prop.

Axiom pack_struct_u_u_p_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall P:set -> prop, forall c:set, c :e X -> struct_u_u_p_e (pack_u_u_p_e X i j P c).

Axiom pack_struct_u_u_p_e_E1: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, struct_u_u_p_e (pack_u_u_p_e X i j P c) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_p_e_E2: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, struct_u_u_p_e (pack_u_u_p_e X i j P c) -> forall x :e X, j x :e X.

Axiom pack_struct_u_u_p_e_E4: forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set, struct_u_u_p_e (pack_u_u_p_e X i j P c) -> c :e X.

Axiom struct_u_u_p_e_eta: forall S, struct_u_u_p_e S -> S = pack_u_u_p_e (S 0) (decode_u (S 1)) (decode_u (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_u_u_p_e_i "682da887c44c053d85a1566befb692cc640cdd76838d0cacdcbacdc5985c85a1" "16d51e2860ace4c72a82efca0d97238ced858a7858ea10a378e8bfc678e732f6" *)
Parameter unpack_u_u_p_e_i :set -> (set -> (set -> set) -> (set -> set) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_u_u_p_e_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> prop) -> set -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' j' P' c = Phi X i j P c)
  ->
  unpack_u_u_p_e_i (pack_u_u_p_e X i j P c) Phi = Phi X i j P c.


(* Parameter unpack_u_u_p_e_o "ce690574171cda6016cb23cd5dc75291dbdbd75f136b5b83ef41995fcd803ea0" "40b71ec83e9eac757484be6343298fd4eb0c928377d085d48487a37f33bcb7ec" *)
Parameter unpack_u_u_p_e_o :set -> (set -> (set -> set) -> (set -> set) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_u_u_p_e_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> (set -> prop) -> set -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall P:set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' j' P' c = Phi X i j P c)
  ->
  unpack_u_u_p_e_o (pack_u_u_p_e X i j P c) Phi = Phi X i j P c.


(* Parameter pack_u_u_e_e "421598101b7c7312af5810c8a7324f402713756e7b2b47a319df2a419a08b62f" "592f9f96355a9ebda769588dbfa310f6cb01b2e1dda16aef30102d05620b5ca2" *)
Parameter pack_u_u_e_e :set -> (set -> set) -> (set -> set) -> set -> set -> set.

Axiom pack_u_u_e_e_0_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, S = pack_u_u_e_e X i j c d -> X = S 0.

Axiom pack_u_u_e_e_0_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, X = pack_u_u_e_e X i j c d 0.

Axiom pack_u_u_e_e_1_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, S = pack_u_u_e_e X i j c d -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_u_e_e_1_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, forall x :e X, i x = decode_u (pack_u_u_e_e X i j c d 1) x.

Axiom pack_u_u_e_e_2_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, S = pack_u_u_e_e X i j c d -> forall x :e X, j x = decode_u (S 2) x.

Axiom pack_u_u_e_e_2_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, forall x :e X, j x = decode_u (pack_u_u_e_e X i j c d 2) x.

Axiom pack_u_u_e_e_3_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, S = pack_u_u_e_e X i j c d -> c = S 3.

Axiom pack_u_u_e_e_3_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, c = pack_u_u_e_e X i j c d 3.

Axiom pack_u_u_e_e_4_eq: forall S X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, S = pack_u_u_e_e X i j c d -> d = S 4.

Axiom pack_u_u_e_e_4_eq2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, d = pack_u_u_e_e X i j c d 4.

Axiom pack_u_u_e_e_inj : forall X X', forall i i':set -> set, forall j j':set -> set, forall c c':set, forall d d':set, pack_u_u_e_e X i j c d = pack_u_u_e_e X' i' j' c' d' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, j x = j' x) /\ c = c' /\ d = d'.

Axiom pack_u_u_e_e_ext : forall X, forall i i':set -> set, forall j j':set -> set, forall c, forall d,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, j x = j' x) ->
 pack_u_u_e_e X i j c d = pack_u_u_e_e X i' j' c d.

(* Parameter struct_u_u_e_e "eff39931af660839589da49f300a321e79e5e54d78d23eeab73dac6fbeeb4365" "9fa6776b13418f86298bca6497a3815dcce3638ebaf454a17f787318cf5617f2" *)
Parameter struct_u_u_e_e :set -> prop.

Axiom pack_struct_u_u_e_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall j:set -> set, (forall x :e X, j x :e X) -> forall c:set, c :e X -> forall d:set, d :e X -> struct_u_u_e_e (pack_u_u_e_e X i j c d).

Axiom pack_struct_u_u_e_e_E1: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, struct_u_u_e_e (pack_u_u_e_e X i j c d) -> forall x :e X, i x :e X.

Axiom pack_struct_u_u_e_e_E2: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, struct_u_u_e_e (pack_u_u_e_e X i j c d) -> forall x :e X, j x :e X.

Axiom pack_struct_u_u_e_e_E3: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, struct_u_u_e_e (pack_u_u_e_e X i j c d) -> c :e X.

Axiom pack_struct_u_u_e_e_E4: forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set, struct_u_u_e_e (pack_u_u_e_e X i j c d) -> d :e X.

Axiom struct_u_u_e_e_eta: forall S, struct_u_u_e_e S -> S = pack_u_u_e_e (S 0) (decode_u (S 1)) (decode_u (S 2)) (S 3) (S 4).


(* Parameter unpack_u_u_e_e_i "981aaf6eded58f9907222ba6f4fb44095249e8ada74f6375704c69dfd297917a" "6b1234373bb843139e1ed466bed918a3b8da93acd7aa896ee0ec97df160d06ac" *)
Parameter unpack_u_u_e_e_i :set -> (set -> (set -> set) -> (set -> set) -> set -> set -> set) -> set.

Axiom unpack_u_u_e_e_i_eq : forall Phi:set -> (set -> set) -> (set -> set) -> set -> set -> set,
  forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X i' j' c d = Phi X i j c d)
  ->
  unpack_u_u_e_e_i (pack_u_u_e_e X i j c d) Phi = Phi X i j c d.


(* Parameter unpack_u_u_e_e_o "73734da89a8a5ab35893fd78cdc2499887dc63877d6dca72cf890e0fd8eaf151" "1afb59e6cf88fa1e8ae7a7b9ee96c11079c659b2775606e0c1a5744327bc1449" *)
Parameter unpack_u_u_e_e_o :set -> (set -> (set -> set) -> (set -> set) -> set -> set -> prop) -> prop.

Axiom unpack_u_u_e_e_o_eq : forall Phi:set -> (set -> set) -> (set -> set) -> set -> set -> prop,
  forall X, forall i:set -> set, forall j:set -> set, forall c:set, forall d:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall j':set -> set, (forall x :e X, j x = j' x) -> Phi X i' j' c d = Phi X i j c d)
  ->
  unpack_u_u_e_e_o (pack_u_u_e_e X i j c d) Phi = Phi X i j c d.


(* Parameter pack_u_r_p_p "d3a58e081616dc9d6299ce01e959eb2d3fa57863d2066aa966e00c2e71cb3b12" "506c5fa253cff775609df67566545f81aeb15ce5f48726a13986356a3578232e" *)
Parameter pack_u_r_p_p :set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_u_r_p_p_0_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_u_r_p_p X i R P Q -> X = S 0.

Axiom pack_u_r_p_p_0_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, X = pack_u_r_p_p X i R P Q 0.

Axiom pack_u_r_p_p_1_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_u_r_p_p X i R P Q -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_r_p_p_1_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, i x = decode_u (pack_u_r_p_p X i R P Q 1) x.

Axiom pack_u_r_p_p_2_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_u_r_p_p X i R P Q -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_u_r_p_p_2_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, R x y = decode_r (pack_u_r_p_p X i R P Q 2) x y.

Axiom pack_u_r_p_p_3_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_u_r_p_p X i R P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_u_r_p_p_3_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_u_r_p_p X i R P Q 3) x.

Axiom pack_u_r_p_p_4_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_u_r_p_p X i R P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_u_r_p_p_4_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_u_r_p_p X i R P Q 4) x.

Axiom pack_u_r_p_p_inj : forall X X', forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop, pack_u_r_p_p X i R P Q = pack_u_r_p_p X' i' R' P' Q' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_u_r_p_p_ext : forall X, forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_u_r_p_p X i R P Q = pack_u_r_p_p X i' R' P' Q'.

(* Parameter struct_u_r_p_p "ab64e006a3fa2542dfaf03e7ecc61d720a7dd2a4235519a21323f30e754ae95e" "c20cd8d43c72408b805de4056229616e0928e4353b4a57b5c3bb31877997887f" *)
Parameter struct_u_r_p_p :set -> prop.

Axiom pack_struct_u_r_p_p_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, struct_u_r_p_p (pack_u_r_p_p X i R P Q).

Axiom pack_struct_u_r_p_p_E1: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, struct_u_r_p_p (pack_u_r_p_p X i R P Q) -> forall x :e X, i x :e X.

Axiom struct_u_r_p_p_eta: forall S, struct_u_r_p_p S -> S = pack_u_r_p_p (S 0) (decode_u (S 1)) (decode_r (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_u_r_p_p_i "779dba44cdf21c438091139c747d77dc4c17f1907202a2f0f429d961923165d6" "2fa5e1e4524116dae4a5d821efcf1a97cfb42d4d5314b1d2a3d1f0813abde87b" *)
Parameter unpack_u_r_p_p_i :set -> (set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_u_r_p_p_i_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X i' R' P' Q' = Phi X i R P Q)
  ->
  unpack_u_r_p_p_i (pack_u_r_p_p X i R P Q) Phi = Phi X i R P Q.


(* Parameter unpack_u_r_p_p_o "11f4ebc1fd18e55d03ecfc7ce57ab36ad4f5324b0aec3ffd0634c5979f2d4ef2" "5541f7fda99179ef67b64f18bb6f3ecca0523e7b9b62dfb07154850baf6ca411" *)
Parameter unpack_u_r_p_p_o :set -> (set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_u_r_p_p_o_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X i' R' P' Q' = Phi X i R P Q)
  ->
  unpack_u_r_p_p_o (pack_u_r_p_p X i R P Q) Phi = Phi X i R P Q.


(* Parameter pack_u_r_p_e "7fc43a9d8288103c833cdecaaf5c6cea5805512958b312bbeb82651bf2399333" "c6a33404f1fbb113ca6038377e930f6984eb3aa7bf8ab9db4a08b9265f40c361" *)
Parameter pack_u_r_p_e :set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> set.

Axiom pack_u_r_p_e_0_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_u_r_p_e X i R P c -> X = S 0.

Axiom pack_u_r_p_e_0_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, X = pack_u_r_p_e X i R P c 0.

Axiom pack_u_r_p_e_1_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_u_r_p_e X i R P c -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_r_p_e_1_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x :e X, i x = decode_u (pack_u_r_p_e X i R P c 1) x.

Axiom pack_u_r_p_e_2_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_u_r_p_e X i R P c -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_u_r_p_e_2_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_u_r_p_e X i R P c 2) x y.

Axiom pack_u_r_p_e_3_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_u_r_p_e X i R P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_u_r_p_e_3_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_u_r_p_e X i R P c 3) x.

Axiom pack_u_r_p_e_4_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_u_r_p_e X i R P c -> c = S 4.

Axiom pack_u_r_p_e_4_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c = pack_u_r_p_e X i R P c 4.

Axiom pack_u_r_p_e_inj : forall X X', forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall c c':set, pack_u_r_p_e X i R P c = pack_u_r_p_e X' i' R' P' c' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_u_r_p_e_ext : forall X, forall i i':set -> set, forall R R':set -> set -> prop, forall P P':set -> prop, forall c,
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_r_p_e X i R P c = pack_u_r_p_e X i' R' P' c.

(* Parameter struct_u_r_p_e "c8d168bd212b8e2d295be133eee17acc830eb999371846485c9a055b70136f93" "c097a1c8fc0e2cc5f3b3be0c15271d8a72541dc13814f54effd3ed789663baeb" *)
Parameter struct_u_r_p_e :set -> prop.

Axiom pack_struct_u_r_p_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c :e X -> struct_u_r_p_e (pack_u_r_p_e X i R P c).

Axiom pack_struct_u_r_p_e_E1: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, struct_u_r_p_e (pack_u_r_p_e X i R P c) -> forall x :e X, i x :e X.

Axiom pack_struct_u_r_p_e_E4: forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, struct_u_r_p_e (pack_u_r_p_e X i R P c) -> c :e X.

Axiom struct_u_r_p_e_eta: forall S, struct_u_r_p_e S -> S = pack_u_r_p_e (S 0) (decode_u (S 1)) (decode_r (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_u_r_p_e_i "deb3505290e52a3588a1d71b032d81f6927d439b30721e5b964952d990e8599c" "25b058d7cd23ca3aaf567c420c73efb40f7196321eb673f53ebb23582e1e7f73" *)
Parameter unpack_u_r_p_e_i :set -> (set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_u_r_p_e_i_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> set,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' R' P' c = Phi X i R P c)
  ->
  unpack_u_r_p_e_i (pack_u_r_p_e X i R P c) Phi = Phi X i R P c.


(* Parameter unpack_u_r_p_e_o "45507067c7607da135156312b1f6b03d42ef28019ae12f0bf9b81a4743af975e" "0dd7e00e87960ee66df527a0ac40f55b0f0ebbe34062b9f3ee4616443146c457" *)
Parameter unpack_u_r_p_e_o :set -> (set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_u_r_p_e_o_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> (set -> prop) -> set -> prop,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' R' P' c = Phi X i R P c)
  ->
  unpack_u_r_p_e_o (pack_u_r_p_e X i R P c) Phi = Phi X i R P c.


(* Parameter pack_u_r_e_e "fe05031f1ed7421e93a283789e0d338776cf96cb8d03534ae92a60b4da426df7" "a0d50f52bdf7a4534f71da221836d3c3334e85a4901a805247426136479315df" *)
Parameter pack_u_r_e_e :set -> (set -> set) -> (set -> set -> prop) -> set -> set -> set.

Axiom pack_u_r_e_e_0_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_u_r_e_e X i R c d -> X = S 0.

Axiom pack_u_r_e_e_0_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, X = pack_u_r_e_e X i R c d 0.

Axiom pack_u_r_e_e_1_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_u_r_e_e X i R c d -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_r_e_e_1_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, forall x :e X, i x = decode_u (pack_u_r_e_e X i R c d 1) x.

Axiom pack_u_r_e_e_2_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_u_r_e_e X i R c d -> forall x y :e X, R x y = decode_r (S 2) x y.

Axiom pack_u_r_e_e_2_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, R x y = decode_r (pack_u_r_e_e X i R c d 2) x y.

Axiom pack_u_r_e_e_3_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_u_r_e_e X i R c d -> c = S 3.

Axiom pack_u_r_e_e_3_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, c = pack_u_r_e_e X i R c d 3.

Axiom pack_u_r_e_e_4_eq: forall S X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_u_r_e_e X i R c d -> d = S 4.

Axiom pack_u_r_e_e_4_eq2: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, d = pack_u_r_e_e X i R c d 4.

Axiom pack_u_r_e_e_inj : forall X X', forall i i':set -> set, forall R R':set -> set -> prop, forall c c':set, forall d d':set, pack_u_r_e_e X i R c d = pack_u_r_e_e X' i' R' c' d' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x y :e X, R x y = R' x y) /\ c = c' /\ d = d'.

Axiom pack_u_r_e_e_ext : forall X, forall i i':set -> set, forall R R':set -> set -> prop, forall c, forall d,
 (forall x :e X, i x = i' x) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_u_r_e_e X i R c d = pack_u_r_e_e X i' R' c d.

(* Parameter struct_u_r_e_e "e2724da4f32fcc3a5f2b94a5506cac8359a57f3653a4accb86408487d2f02699" "67895c4dbdd3e430920ac9eab45940631f86074839dc93dbf23c0770d9d3d9dd" *)
Parameter struct_u_r_e_e :set -> prop.

Axiom pack_struct_u_r_e_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_u_r_e_e (pack_u_r_e_e X i R c d).

Axiom pack_struct_u_r_e_e_E1: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_u_r_e_e (pack_u_r_e_e X i R c d) -> forall x :e X, i x :e X.

Axiom pack_struct_u_r_e_e_E3: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_u_r_e_e (pack_u_r_e_e X i R c d) -> c :e X.

Axiom pack_struct_u_r_e_e_E4: forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_u_r_e_e (pack_u_r_e_e X i R c d) -> d :e X.

Axiom struct_u_r_e_e_eta: forall S, struct_u_r_e_e S -> S = pack_u_r_e_e (S 0) (decode_u (S 1)) (decode_r (S 2)) (S 3) (S 4).


(* Parameter unpack_u_r_e_e_i "4122a1ce355a65695249e9644469ab4fb416e7ae6487628443a4edc32aba2f81" "745a40c34332b11ef07aec985f9c9a25466c4bbffa32479901734b3016e163bb" *)
Parameter unpack_u_r_e_e_i :set -> (set -> (set -> set) -> (set -> set -> prop) -> set -> set -> set) -> set.

Axiom unpack_u_r_e_e_i_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> set -> set -> set,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' R' c d = Phi X i R c d)
  ->
  unpack_u_r_e_e_i (pack_u_r_e_e X i R c d) Phi = Phi X i R c d.


(* Parameter unpack_u_r_e_e_o "c461f802daa67b6325478fd33e6af88bd7511ef19b722b3959deecf9693c7ecf" "8dc733eff02d2f0d2e68cabf271ccdec28eda35133c766cd57e502cd870aaff9" *)
Parameter unpack_u_r_e_e_o :set -> (set -> (set -> set) -> (set -> set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_u_r_e_e_o_eq : forall Phi:set -> (set -> set) -> (set -> set -> prop) -> set -> set -> prop,
  forall X, forall i:set -> set, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X i' R' c d = Phi X i R c d)
  ->
  unpack_u_r_e_e_o (pack_u_r_e_e X i R c d) Phi = Phi X i R c d.


(* Parameter pack_u_p_e_e "4ce5c5f28c41e9482a573a275ae81288f92789a6ef364ac1718368324fff561b" "2031e1baaba6c078f6756dbd66bab049aac4162aeff54f1730ad6c47ce8574b2" *)
Parameter pack_u_p_e_e :set -> (set -> set) -> (set -> prop) -> set -> set -> set.

Axiom pack_u_p_e_e_0_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_u_p_e_e X i P c d -> X = S 0.

Axiom pack_u_p_e_e_0_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, X = pack_u_p_e_e X i P c d 0.

Axiom pack_u_p_e_e_1_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_u_p_e_e X i P c d -> forall x :e X, i x = decode_u (S 1) x.

Axiom pack_u_p_e_e_1_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, forall x :e X, i x = decode_u (pack_u_p_e_e X i P c d 1) x.

Axiom pack_u_p_e_e_2_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_u_p_e_e X i P c d -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_u_p_e_e_2_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, forall x :e X, P x = decode_p (pack_u_p_e_e X i P c d 2) x.

Axiom pack_u_p_e_e_3_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_u_p_e_e X i P c d -> c = S 3.

Axiom pack_u_p_e_e_3_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, c = pack_u_p_e_e X i P c d 3.

Axiom pack_u_p_e_e_4_eq: forall S X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, S = pack_u_p_e_e X i P c d -> d = S 4.

Axiom pack_u_p_e_e_4_eq2: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, d = pack_u_p_e_e X i P c d 4.

Axiom pack_u_p_e_e_inj : forall X X', forall i i':set -> set, forall P P':set -> prop, forall c c':set, forall d d':set, pack_u_p_e_e X i P c d = pack_u_p_e_e X' i' P' c' d' -> X = X' /\ (forall x :e X, i x = i' x) /\ (forall x :e X, P x = P' x) /\ c = c' /\ d = d'.

Axiom pack_u_p_e_e_ext : forall X, forall i i':set -> set, forall P P':set -> prop, forall c, forall d,
 (forall x :e X, i x = i' x) ->
 (forall x :e X, P x <-> P' x) ->
 pack_u_p_e_e X i P c d = pack_u_p_e_e X i' P' c d.

(* Parameter struct_u_p_e_e "7904aefeeb335a0c58df3664195d8f4dee000facb5c017007c240ca1a14b6544" "583e7896f2b93cba60da6d378d43e24557322e603737fcd59017740ef7227039" *)
Parameter struct_u_p_e_e :set -> prop.

Axiom pack_struct_u_p_e_e_I: forall X, forall i:set -> set, (forall x :e X, i x :e X) -> forall P:set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_u_p_e_e (pack_u_p_e_e X i P c d).

Axiom pack_struct_u_p_e_e_E1: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, struct_u_p_e_e (pack_u_p_e_e X i P c d) -> forall x :e X, i x :e X.

Axiom pack_struct_u_p_e_e_E3: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, struct_u_p_e_e (pack_u_p_e_e X i P c d) -> c :e X.

Axiom pack_struct_u_p_e_e_E4: forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set, struct_u_p_e_e (pack_u_p_e_e X i P c d) -> d :e X.

Axiom struct_u_p_e_e_eta: forall S, struct_u_p_e_e S -> S = pack_u_p_e_e (S 0) (decode_u (S 1)) (decode_p (S 2)) (S 3) (S 4).


(* Parameter unpack_u_p_e_e_i "ee71a6338e38e99a05c13bd3554a7acb72ad5c04109fa4edfda4e6b9a7f69024" "0c3d7c93ebf4cef16c7fecbd4b721d88f10b1c6425c3b426387446dda1770672" *)
Parameter unpack_u_p_e_e_i :set -> (set -> (set -> set) -> (set -> prop) -> set -> set -> set) -> set.

Axiom unpack_u_p_e_e_i_eq : forall Phi:set -> (set -> set) -> (set -> prop) -> set -> set -> set,
  forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' P' c d = Phi X i P c d)
  ->
  unpack_u_p_e_e_i (pack_u_p_e_e X i P c d) Phi = Phi X i P c d.


(* Parameter unpack_u_p_e_e_o "0b4839a2dc9a0adeaa47a211a8bc9996bdf5dc9f6b9ab3a83a521f2a4f8532a9" "bb377fbe969305737e8bf0f5081e4ce1e98377f44aff2d46f96a2154001c0854" *)
Parameter unpack_u_p_e_e_o :set -> (set -> (set -> set) -> (set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_u_p_e_e_o_eq : forall Phi:set -> (set -> set) -> (set -> prop) -> set -> set -> prop,
  forall X, forall i:set -> set, forall P:set -> prop, forall c:set, forall d:set,
  ( forall i':set -> set, (forall x :e X, i x = i' x) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X i' P' c d = Phi X i P c d)
  ->
  unpack_u_p_e_e_o (pack_u_p_e_e X i P c d) Phi = Phi X i P c d.


(* Parameter pack_r_r_p_p "d15a4ac5250dc4d5f3c7fc5443e389f007af99af861851e73cac700ca35519b6" "9bd10e30d3da00fa47ce7624297fd4a3fa8ec10a402513227453b752bed0a7a0" *)
Parameter pack_r_r_p_p :set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set.

Axiom pack_r_r_p_p_0_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_r_r_p_p X R T P Q -> X = S 0.

Axiom pack_r_r_p_p_0_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, X = pack_r_r_p_p X R T P Q 0.

Axiom pack_r_r_p_p_1_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_r_r_p_p X R T P Q -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_r_p_p_1_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, R x y = decode_r (pack_r_r_p_p X R T P Q 1) x y.

Axiom pack_r_r_p_p_2_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_r_r_p_p X R T P Q -> forall x y :e X, T x y = decode_r (S 2) x y.

Axiom pack_r_r_p_p_2_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x y :e X, T x y = decode_r (pack_r_r_p_p X R T P Q 2) x y.

Axiom pack_r_r_p_p_3_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_r_r_p_p X R T P Q -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_r_r_p_p_3_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, P x = decode_p (pack_r_r_p_p X R T P Q 3) x.

Axiom pack_r_r_p_p_4_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, S = pack_r_r_p_p X R T P Q -> forall x :e X, Q x = decode_p (S 4) x.

Axiom pack_r_r_p_p_4_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, forall x :e X, Q x = decode_p (pack_r_r_p_p X R T P Q 4) x.

Axiom pack_r_r_p_p_inj : forall X X', forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop, pack_r_r_p_p X R T P Q = pack_r_r_p_p X' R' T' P' Q' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y) /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x).

Axiom pack_r_r_p_p_ext : forall X, forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall P P':set -> prop, forall Q Q':set -> prop,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_r_r_p_p X R T P Q = pack_r_r_p_p X R' T' P' Q'.

(* Parameter struct_r_r_p_p "3feb38bfced1866d8a371d5836249e3b5629ad77220dea694122080f3cff81af" "8b052af19200cd8c3a36c76223b25d75acc4ba4f8d78dc4ef6bc25fea7ecaaf1" *)
Parameter struct_r_r_p_p :set -> prop.

Axiom pack_struct_r_r_p_p_I: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop, struct_r_r_p_p (pack_r_r_p_p X R T P Q).

Axiom struct_r_r_p_p_eta: forall S, struct_r_r_p_p S -> S = pack_r_r_p_p (S 0) (decode_r (S 1)) (decode_r (S 2)) (decode_p (S 3)) (decode_p (S 4)).


(* Parameter unpack_r_r_p_p_i "38919c4db43962927f17a44ca5d3863086e117e4f021b2ec798a1a01c0110f81" "53e30bb4d5933997414cc36853d89a1e08735689a28980e5b941ed3f57c4a566" *)
Parameter unpack_r_r_p_p_i :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set) -> set.

Axiom unpack_r_r_p_p_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> set,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X R' T' P' Q' = Phi X R T P Q)
  ->
  unpack_r_r_p_p_i (pack_r_r_p_p X R T P Q) Phi = Phi X R T P Q.


(* Parameter unpack_r_r_p_p_o "d0e8434257088f455232adf6ea6cb85fa0499463c62d8804892229d288165bb3" "1ab60784cc8f83abfcb75463132217c4933975563dfe2b1a1fc365f702d0bf34" *)
Parameter unpack_r_r_p_p_o :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop) -> prop.

Axiom unpack_r_r_p_p_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> (set -> prop) -> prop,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall Q:set -> prop,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X R' T' P' Q' = Phi X R T P Q)
  ->
  unpack_r_r_p_p_o (pack_r_r_p_p X R T P Q) Phi = Phi X R T P Q.


(* Parameter pack_r_r_p_e "9aeb15e9d913b9e8226557d06df228ebe2a90f3a6310d86db0d886546f9eb57f" "b81c621e8362bf64e21ca59684c385cdf4ad6b2383d2abfef328f17e1b383cf0" *)
Parameter pack_r_r_p_e :set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> set.

Axiom pack_r_r_p_e_0_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_r_p_e X R T P c -> X = S 0.

Axiom pack_r_r_p_e_0_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, X = pack_r_r_p_e X R T P c 0.

Axiom pack_r_r_p_e_1_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_r_p_e X R T P c -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_r_p_e_1_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, forall x y :e X, R x y = decode_r (pack_r_r_p_e X R T P c 1) x y.

Axiom pack_r_r_p_e_2_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_r_p_e X R T P c -> forall x y :e X, T x y = decode_r (S 2) x y.

Axiom pack_r_r_p_e_2_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, forall x y :e X, T x y = decode_r (pack_r_r_p_e X R T P c 2) x y.

Axiom pack_r_r_p_e_3_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_r_p_e X R T P c -> forall x :e X, P x = decode_p (S 3) x.

Axiom pack_r_r_p_e_3_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, forall x :e X, P x = decode_p (pack_r_r_p_e X R T P c 3) x.

Axiom pack_r_r_p_e_4_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, S = pack_r_r_p_e X R T P c -> c = S 4.

Axiom pack_r_r_p_e_4_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, c = pack_r_r_p_e X R T P c 4.

Axiom pack_r_r_p_e_inj : forall X X', forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall P P':set -> prop, forall c c':set, pack_r_r_p_e X R T P c = pack_r_r_p_e X' R' T' P' c' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y) /\ (forall x :e X, P x = P' x) /\ c = c'.

Axiom pack_r_r_p_e_ext : forall X, forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall P P':set -> prop, forall c,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_r_r_p_e X R T P c = pack_r_r_p_e X R' T' P' c.

(* Parameter struct_r_r_p_e "270f1d0a513ca45e05ccd6aa8730174cbe7403b3e84d91a2074d85563e15db80" "f0596c8373caad482c29efa0aa8f976884b29b8ac253a3035f7717f280d87eeb" *)
Parameter struct_r_r_p_e :set -> prop.

Axiom pack_struct_r_r_p_e_I: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, c :e X -> struct_r_r_p_e (pack_r_r_p_e X R T P c).

Axiom pack_struct_r_r_p_e_E4: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set, struct_r_r_p_e (pack_r_r_p_e X R T P c) -> c :e X.

Axiom struct_r_r_p_e_eta: forall S, struct_r_r_p_e S -> S = pack_r_r_p_e (S 0) (decode_r (S 1)) (decode_r (S 2)) (decode_p (S 3)) (S 4).


(* Parameter unpack_r_r_p_e_i "806ddb39445bcb305595cde41b7e704b07cfcaeccae6b5bc717ad69aa685b501" "2ceb6b5c6342543f9324a9cbbae95a9dd1049b56f337913adf76814bf5e1a40b" *)
Parameter unpack_r_r_p_e_i :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> set) -> set.

Axiom unpack_r_r_p_e_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> set,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' T' P' c = Phi X R T P c)
  ->
  unpack_r_r_p_e_i (pack_r_r_p_e X R T P c) Phi = Phi X R T P c.


(* Parameter unpack_r_r_p_e_o "c93698ab23d5350de4376a6fbca76d533ae4aa1dd23c3c6d10444b5caf0550fc" "856e6be1b8fa78be85237d0d9d1f0b38809249f44cde62cacad7ffb5d23ef6dd" *)
Parameter unpack_r_r_p_e_o :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> prop) -> prop.

Axiom unpack_r_r_p_e_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> (set -> prop) -> set -> prop,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall P:set -> prop, forall c:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' T' P' c = Phi X R T P c)
  ->
  unpack_r_r_p_e_o (pack_r_r_p_e X R T P c) Phi = Phi X R T P c.


(* Parameter pack_r_r_e_e "5af5ad2e87dd378b6e9eeaeb59928e6751133e0cde62c70a370be92491e3f962" "f4f5b094e77f2f83b0281bfa8bce3d94d1f99ae4b1b9e46f2cda9a1ea2dffbc1" *)
Parameter pack_r_r_e_e :set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set -> set.

Axiom pack_r_r_e_e_0_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, S = pack_r_r_e_e X R T c d -> X = S 0.

Axiom pack_r_r_e_e_0_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, X = pack_r_r_e_e X R T c d 0.

Axiom pack_r_r_e_e_1_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, S = pack_r_r_e_e X R T c d -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_r_e_e_1_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, R x y = decode_r (pack_r_r_e_e X R T c d 1) x y.

Axiom pack_r_r_e_e_2_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, S = pack_r_r_e_e X R T c d -> forall x y :e X, T x y = decode_r (S 2) x y.

Axiom pack_r_r_e_e_2_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, T x y = decode_r (pack_r_r_e_e X R T c d 2) x y.

Axiom pack_r_r_e_e_3_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, S = pack_r_r_e_e X R T c d -> c = S 3.

Axiom pack_r_r_e_e_3_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, c = pack_r_r_e_e X R T c d 3.

Axiom pack_r_r_e_e_4_eq: forall S X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, S = pack_r_r_e_e X R T c d -> d = S 4.

Axiom pack_r_r_e_e_4_eq2: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, d = pack_r_r_e_e X R T c d 4.

Axiom pack_r_r_e_e_inj : forall X X', forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall c c':set, forall d d':set, pack_r_r_e_e X R T c d = pack_r_r_e_e X' R' T' c' d' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x y :e X, T x y = T' x y) /\ c = c' /\ d = d'.

Axiom pack_r_r_e_e_ext : forall X, forall R R':set -> set -> prop, forall T T':set -> set -> prop, forall c, forall d,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x y :e X, T x y <-> T' x y) ->
 pack_r_r_e_e X R T c d = pack_r_r_e_e X R' T' c d.

(* Parameter struct_r_r_e_e "9bdf7a97858c8bf12661153c4c4819a807571b736f426637022a92d7bd8a211d" "9847fb1e481709bdc99e87b11793438720dd15ea1326b3a4103e19eda0dc1cdb" *)
Parameter struct_r_r_e_e :set -> prop.

Axiom pack_struct_r_r_e_e_I: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_r_r_e_e (pack_r_r_e_e X R T c d).

Axiom pack_struct_r_r_e_e_E3: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, struct_r_r_e_e (pack_r_r_e_e X R T c d) -> c :e X.

Axiom pack_struct_r_r_e_e_E4: forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set, struct_r_r_e_e (pack_r_r_e_e X R T c d) -> d :e X.

Axiom struct_r_r_e_e_eta: forall S, struct_r_r_e_e S -> S = pack_r_r_e_e (S 0) (decode_r (S 1)) (decode_r (S 2)) (S 3) (S 4).


(* Parameter unpack_r_r_e_e_i "cf5d27eade08b5b1d49e073184e936947245c883ce3d454f98d97ec2fe60f3ab" "0460214565610e6e272d2434e03d7fb99e5988facbc91892795984f63f4a1507" *)
Parameter unpack_r_r_e_e_i :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set -> set) -> set.

Axiom unpack_r_r_e_e_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set -> set,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X R' T' c d = Phi X R T c d)
  ->
  unpack_r_r_e_e_i (pack_r_r_e_e X R T c d) Phi = Phi X R T c d.


(* Parameter unpack_r_r_e_e_o "587e0d3d70fdb02d063e0baf1363f9f4c55918a85099c7167717c6c6cbc4d0ae" "6aefe694ff05b2dd15254e7f20ca53c445831e43184005315c49b5ebb30549de" *)
Parameter unpack_r_r_e_e_o :set -> (set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_r_r_e_e_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> set -> prop) -> set -> set -> prop,
  forall X, forall R:set -> set -> prop, forall T:set -> set -> prop, forall c:set, forall d:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall T':set -> set -> prop, (forall x y :e X, T x y <-> T' x y) -> Phi X R' T' c d = Phi X R T c d)
  ->
  unpack_r_r_e_e_o (pack_r_r_e_e X R T c d) Phi = Phi X R T c d.


(* Parameter pack_r_p_e_e "3ac5fc3c4a3addf797e06948b252eccb5d7f8a94da06a5e007ceb96c78567bd0" "d4133ba459012f30393dca30fd069f8dcfeaa8d0fb701658b42e2d03150d9f02" *)
Parameter pack_r_p_e_e :set -> (set -> set -> prop) -> (set -> prop) -> set -> set -> set.

Axiom pack_r_p_e_e_0_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_r_p_e_e X R P c d -> X = S 0.

Axiom pack_r_p_e_e_0_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, X = pack_r_p_e_e X R P c d 0.

Axiom pack_r_p_e_e_1_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_r_p_e_e X R P c d -> forall x y :e X, R x y = decode_r (S 1) x y.

Axiom pack_r_p_e_e_1_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, forall x y :e X, R x y = decode_r (pack_r_p_e_e X R P c d 1) x y.

Axiom pack_r_p_e_e_2_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_r_p_e_e X R P c d -> forall x :e X, P x = decode_p (S 2) x.

Axiom pack_r_p_e_e_2_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, forall x :e X, P x = decode_p (pack_r_p_e_e X R P c d 2) x.

Axiom pack_r_p_e_e_3_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_r_p_e_e X R P c d -> c = S 3.

Axiom pack_r_p_e_e_3_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, c = pack_r_p_e_e X R P c d 3.

Axiom pack_r_p_e_e_4_eq: forall S X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, S = pack_r_p_e_e X R P c d -> d = S 4.

Axiom pack_r_p_e_e_4_eq2: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, d = pack_r_p_e_e X R P c d 4.

Axiom pack_r_p_e_e_inj : forall X X', forall R R':set -> set -> prop, forall P P':set -> prop, forall c c':set, forall d d':set, pack_r_p_e_e X R P c d = pack_r_p_e_e X' R' P' c' d' -> X = X' /\ (forall x y :e X, R x y = R' x y) /\ (forall x :e X, P x = P' x) /\ c = c' /\ d = d'.

Axiom pack_r_p_e_e_ext : forall X, forall R R':set -> set -> prop, forall P P':set -> prop, forall c, forall d,
 (forall x y :e X, R x y <-> R' x y) ->
 (forall x :e X, P x <-> P' x) ->
 pack_r_p_e_e X R P c d = pack_r_p_e_e X R' P' c d.

(* Parameter struct_r_p_e_e "02b6133ee53d7e7d7eb62e214eac872c6b9418588d34817e28cf6819bfcb1c2d" "ff2519c5a99ff630d6bc11f4a8e2c92f5c4337d4fade1233416c9f8be29b97bf" *)
Parameter struct_r_p_e_e :set -> prop.

Axiom pack_struct_r_p_e_e_I: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_r_p_e_e (pack_r_p_e_e X R P c d).

Axiom pack_struct_r_p_e_e_E3: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, struct_r_p_e_e (pack_r_p_e_e X R P c d) -> c :e X.

Axiom pack_struct_r_p_e_e_E4: forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set, struct_r_p_e_e (pack_r_p_e_e X R P c d) -> d :e X.

Axiom struct_r_p_e_e_eta: forall S, struct_r_p_e_e S -> S = pack_r_p_e_e (S 0) (decode_r (S 1)) (decode_p (S 2)) (S 3) (S 4).


(* Parameter unpack_r_p_e_e_i "b045965284e8d1def114aefb7390123e15541612d461f1d8e67b13577a4eb85c" "e2a147f139f30961295d6fb4b5869d3c9a6a648d82e789da6796a4437e8c90a0" *)
Parameter unpack_r_p_e_e_i :set -> (set -> (set -> set -> prop) -> (set -> prop) -> set -> set -> set) -> set.

Axiom unpack_r_p_e_e_i_eq : forall Phi:set -> (set -> set -> prop) -> (set -> prop) -> set -> set -> set,
  forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' P' c d = Phi X R P c d)
  ->
  unpack_r_p_e_e_i (pack_r_p_e_e X R P c d) Phi = Phi X R P c d.


(* Parameter unpack_r_p_e_e_o "9328ad70c5f4ff1f075047ed9b2df0af8ea56e6da9980c6a78c4925114578664" "33a73238754b860434186b7d2f1c6fcfc752086f315e6c706f8df1f0b86c9d43" *)
Parameter unpack_r_p_e_e_o :set -> (set -> (set -> set -> prop) -> (set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_r_p_e_e_o_eq : forall Phi:set -> (set -> set -> prop) -> (set -> prop) -> set -> set -> prop,
  forall X, forall R:set -> set -> prop, forall P:set -> prop, forall c:set, forall d:set,
  ( forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) ->  forall P':set -> prop, (forall x :e X, P x <-> P' x) -> Phi X R' P' c d = Phi X R P c d)
  ->
  unpack_r_p_e_e_o (pack_r_p_e_e X R P c d) Phi = Phi X R P c d.


(* Parameter pack_p_p_e_e "caf8e8c595be711dd20fd1d2d783dbdd085cb8966f73f3db147781dec00712aa" "887d6fa3fbf8f9d4ea13313d542ccc3423fa30c0a10da58a7308497545315e1d" *)
Parameter pack_p_p_e_e :set -> (set -> prop) -> (set -> prop) -> set -> set -> set.

Axiom pack_p_p_e_e_0_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, S = pack_p_p_e_e X P Q c d -> X = S 0.

Axiom pack_p_p_e_e_0_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, X = pack_p_p_e_e X P Q c d 0.

Axiom pack_p_p_e_e_1_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, S = pack_p_p_e_e X P Q c d -> forall x :e X, P x = decode_p (S 1) x.

Axiom pack_p_p_e_e_1_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, forall x :e X, P x = decode_p (pack_p_p_e_e X P Q c d 1) x.

Axiom pack_p_p_e_e_2_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, S = pack_p_p_e_e X P Q c d -> forall x :e X, Q x = decode_p (S 2) x.

Axiom pack_p_p_e_e_2_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, forall x :e X, Q x = decode_p (pack_p_p_e_e X P Q c d 2) x.

Axiom pack_p_p_e_e_3_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, S = pack_p_p_e_e X P Q c d -> c = S 3.

Axiom pack_p_p_e_e_3_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, c = pack_p_p_e_e X P Q c d 3.

Axiom pack_p_p_e_e_4_eq: forall S X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, S = pack_p_p_e_e X P Q c d -> d = S 4.

Axiom pack_p_p_e_e_4_eq2: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, d = pack_p_p_e_e X P Q c d 4.

Axiom pack_p_p_e_e_inj : forall X X', forall P P':set -> prop, forall Q Q':set -> prop, forall c c':set, forall d d':set, pack_p_p_e_e X P Q c d = pack_p_p_e_e X' P' Q' c' d' -> X = X' /\ (forall x :e X, P x = P' x) /\ (forall x :e X, Q x = Q' x) /\ c = c' /\ d = d'.

Axiom pack_p_p_e_e_ext : forall X, forall P P':set -> prop, forall Q Q':set -> prop, forall c, forall d,
 (forall x :e X, P x <-> P' x) ->
 (forall x :e X, Q x <-> Q' x) ->
 pack_p_p_e_e X P Q c d = pack_p_p_e_e X P' Q' c d.

(* Parameter struct_p_p_e_e "f394f9533d4df8855dc80f298cbf8fa1d1ae0ad0f7c5f5a3764577a9a7211fee" "367c563ec5add12bec5211c2b81f2fdeb34e67d99cdc91f57fabe0063a9b221d" *)
Parameter struct_p_p_e_e :set -> prop.

Axiom pack_struct_p_p_e_e_I: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_p_p_e_e (pack_p_p_e_e X P Q c d).

Axiom pack_struct_p_p_e_e_E3: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, struct_p_p_e_e (pack_p_p_e_e X P Q c d) -> c :e X.

Axiom pack_struct_p_p_e_e_E4: forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set, struct_p_p_e_e (pack_p_p_e_e X P Q c d) -> d :e X.

Axiom struct_p_p_e_e_eta: forall S, struct_p_p_e_e S -> S = pack_p_p_e_e (S 0) (decode_p (S 1)) (decode_p (S 2)) (S 3) (S 4).


(* Parameter unpack_p_p_e_e_i "8500af0fcefbc6b1ff239b71e72b3756e538669af4e3872572a9d205181dfaf0" "3bda5a0069dbd89a9b5482f24740583ecd47040086c86d9df417d08ac66ae184" *)
Parameter unpack_p_p_e_e_i :set -> (set -> (set -> prop) -> (set -> prop) -> set -> set -> set) -> set.

Axiom unpack_p_p_e_e_i_eq : forall Phi:set -> (set -> prop) -> (set -> prop) -> set -> set -> set,
  forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X P' Q' c d = Phi X P Q c d)
  ->
  unpack_p_p_e_e_i (pack_p_p_e_e X P Q c d) Phi = Phi X P Q c d.


(* Parameter unpack_p_p_e_e_o "111a940787a0096481aeb43041f742127acc6b292adf75811e04a636feebb80f" "535c8e2b4a367e2c9c6572b3a8823d6c26c7aa199e46e3589d34dcf09be2d1c3" *)
Parameter unpack_p_p_e_e_o :set -> (set -> (set -> prop) -> (set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_p_p_e_e_o_eq : forall Phi:set -> (set -> prop) -> (set -> prop) -> set -> set -> prop,
  forall X, forall P:set -> prop, forall Q:set -> prop, forall c:set, forall d:set,
  ( forall P':set -> prop, (forall x :e X, P x <-> P' x) ->  forall Q':set -> prop, (forall x :e X, Q x <-> Q' x) -> Phi X P' Q' c d = Phi X P Q c d)
  ->
  unpack_p_p_e_e_o (pack_p_p_e_e X P Q c d) Phi = Phi X P Q c d.

(* Parameter pack_b_b_r_e_e "94ec6541b5d420bf167196743d54143ff9e46d4022e0ccecb059cf098af4663d" "8efb1973b4a9b292951aa9ca2922b7aa15d8db021bfada9c0f07fc9bb09b65fb" *)
Parameter pack_b_b_r_e_e :set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> set.

Axiom pack_b_b_r_e_e_0_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_b_r_e_e X f g R c d -> X = S 0.

Axiom pack_b_b_r_e_e_0_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, X = pack_b_b_r_e_e X f g R c d 0.

Axiom pack_b_b_r_e_e_1_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_b_r_e_e X f g R c d -> forall x y :e X, f x y = decode_b (S 1) x y.

Axiom pack_b_b_r_e_e_1_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, f x y = decode_b (pack_b_b_r_e_e X f g R c d 1) x y.

Axiom pack_b_b_r_e_e_2_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_b_r_e_e X f g R c d -> forall x y :e X, g x y = decode_b (S 2) x y.

Axiom pack_b_b_r_e_e_2_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, g x y = decode_b (pack_b_b_r_e_e X f g R c d 2) x y.

Axiom pack_b_b_r_e_e_3_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_b_r_e_e X f g R c d -> forall x y :e X, R x y = decode_r (S 3) x y.

Axiom pack_b_b_r_e_e_3_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, forall x y :e X, R x y = decode_r (pack_b_b_r_e_e X f g R c d 3) x y.

Axiom pack_b_b_r_e_e_4_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_b_r_e_e X f g R c d -> c = S 4.

Axiom pack_b_b_r_e_e_4_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, c = pack_b_b_r_e_e X f g R c d 4.

Axiom pack_b_b_r_e_e_5_eq: forall S X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, S = pack_b_b_r_e_e X f g R c d -> d = S 5.

Axiom pack_b_b_r_e_e_5_eq2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, d = pack_b_b_r_e_e X f g R c d 5.

Axiom pack_b_b_r_e_e_inj : forall X X', forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall c c':set, forall d d':set, pack_b_b_r_e_e X f g R c d = pack_b_b_r_e_e X' f' g' R' c' d' -> X = X' /\ (forall x y :e X, f x y = f' x y) /\ (forall x y :e X, g x y = g' x y) /\ (forall x y :e X, R x y = R' x y) /\ c = c' /\ d = d'.

Axiom pack_b_b_r_e_e_ext : forall X, forall f f':set -> set -> set, forall g g':set -> set -> set, forall R R':set -> set -> prop, forall c, forall d,
 (forall x y :e X, f x y = f' x y) ->
 (forall x y :e X, g x y = g' x y) ->
 (forall x y :e X, R x y <-> R' x y) ->
 pack_b_b_r_e_e X f g R c d = pack_b_b_r_e_e X f' g' R' c d.

(* Parameter struct_b_b_r_e_e "08195fc95542b2be3e25b7fdef814f4e54290bd680ae0917923b0e44786a0214" "d542f60aebdbe4e018abe75d8586699fd6db6951a7fdc2bc884bfb42c0d77a22" *)
Parameter struct_b_b_r_e_e :set -> prop.

Axiom pack_struct_b_b_r_e_e_I: forall X, forall f:set -> set -> set, (forall x y :e X, f x y :e X) -> forall g:set -> set -> set, (forall x y :e X, g x y :e X) -> forall R:set -> set -> prop, forall c:set, c :e X -> forall d:set, d :e X -> struct_b_b_r_e_e (pack_b_b_r_e_e X f g R c d).

Axiom pack_struct_b_b_r_e_e_E1: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_b_b_r_e_e (pack_b_b_r_e_e X f g R c d) -> forall x y :e X, f x y :e X.

Axiom pack_struct_b_b_r_e_e_E2: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_b_b_r_e_e (pack_b_b_r_e_e X f g R c d) -> forall x y :e X, g x y :e X.

Axiom pack_struct_b_b_r_e_e_E4: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_b_b_r_e_e (pack_b_b_r_e_e X f g R c d) -> c :e X.

Axiom pack_struct_b_b_r_e_e_E5: forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set, struct_b_b_r_e_e (pack_b_b_r_e_e X f g R c d) -> d :e X.

Axiom struct_b_b_r_e_e_eta: forall S, struct_b_b_r_e_e S -> S = pack_b_b_r_e_e (S 0) (decode_b (S 1)) (decode_b (S 2)) (decode_r (S 3)) (S 4) (S 5).


(* Parameter unpack_b_b_r_e_e_i "9841164c05115cc07043487bccc48e1ce748fa3f4dfc7d109f8286f9a5bce324" "89fb5e380d96cc4a16ceba7825bfbc02dfd37f2e63dd703009885c4bf3794d07" *)
Parameter unpack_b_b_r_e_e_i :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> set) -> set.

Axiom unpack_b_b_r_e_e_i_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> set,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' R' c d = Phi X f g R c d)
  ->
  unpack_b_b_r_e_e_i (pack_b_b_r_e_e X f g R c d) Phi = Phi X f g R c d.


(* Parameter unpack_b_b_r_e_e_o "3db063fdbe07c7344b83deebc95b091786045a06e01e2ce6e2eae1d885f574af" "b3a2fc60275daf51e6cbe3161abaeed96cb2fc4e1d5fe26b5e3e58d0eb93c477" *)
Parameter unpack_b_b_r_e_e_o :set -> (set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> prop) -> prop.

Axiom unpack_b_b_r_e_e_o_eq : forall Phi:set -> (set -> set -> set) -> (set -> set -> set) -> (set -> set -> prop) -> set -> set -> prop,
  forall X, forall f:set -> set -> set, forall g:set -> set -> set, forall R:set -> set -> prop, forall c:set, forall d:set,
  ( forall f':set -> set -> set, (forall x y :e X, f x y = f' x y) ->  forall g':set -> set -> set, (forall x y :e X, g x y = g' x y) ->  forall R':set -> set -> prop, (forall x y :e X, R x y <-> R' x y) -> Phi X f' g' R' c d = Phi X f g R c d)
  ->
  unpack_b_b_r_e_e_o (pack_b_b_r_e_e X f g R c d) Phi = Phi X f g R c d.


